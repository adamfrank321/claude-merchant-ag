{
    "openapi": "3.0.1",
    "info": {
        "title": "Merchant Ag",
        "description": "Merchant Ag API",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://connectapi.efcsystems.com/merchantag"
        }
    ],
    "paths": {
        "/api/commodities/cashbids/v1": {
            "get": {
                "tags": [
                    "Commodities"
                ],
                "summary": "Commodity Cash Bids",
                "description": "Commodity Cash Bids represent the prices paid for commodities for each location and delivery period. This endpoint will return all pricing details for all Futures Month / Delivery Period / Site that has been identified as a published bid.",
                "operationId": "get-api-commodities-cashbids-v1",
                "responses": {
                    "200": {
                        "description": "Returns the list of cash bids",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CashBidResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "itemId": "80511",
                                        "itemDescription": "Corn",
                                        "uom": "Bushel",
                                        "locationId": "1",
                                        "locationName": "Brentwood TN",
                                        "futuresMonth": "2312",
                                        "deliveryPeriod": "2023",
                                        "deliveryBegin": "2023-01-01T12:00:00.0000000+00:00",
                                        "deliveryEnd": "2023-12-31T11:59:59.0000000+00:00",
                                        "futuresPrice": 5,
                                        "basis": 0.01001,
                                        "cashPrice": 5.01001
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Commodities"
                ],
                "summary": "Commodity Cash Bids Update",
                "description": "Commodity Cash Bids represent the prices paid for commodities for each location and delivery period. This will be used for making changes to Basis values on the Pricing Maintenance information.",
                "operationId": "put-api-commodities-cashbids-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCashBidRequest"
                            },
                            "example": {
                                "itemId": "3",
                                "locationId": "1",
                                "futuresMonth": "2312",
                                "deliveryBegin": "2023-01-01T12:00:00.0000000+00:00",
                                "deliveryEnd": "2023-12-31T11:59:59.0000000+00:00",
                                "basis": 0.01001
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the updated cash bid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CashBidResponse"
                                },
                                "example": {
                                    "itemId": "80511",
                                    "itemDescription": "Corn",
                                    "uom": "Bushel",
                                    "locationId": "1",
                                    "locationName": "Brentwood TN",
                                    "futuresMonth": "2312",
                                    "deliveryPeriod": "2023",
                                    "deliveryBegin": "2023-01-01T12:00:00.0000000+00:00",
                                    "deliveryEnd": "2023-12-31T11:59:59.0000000+00:00",
                                    "futuresPrice": 5,
                                    "basis": 0.01001,
                                    "cashPrice": 5.01001
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/contracts/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Commodities"
                ],
                "summary": "Commodity Contracts",
                "description": "Commodity Contracts represent agreements to purchase or sell a specific quantity of a specific commodity delivered to or from a specific location during a specified date range. This endpoint will return all contract details, pricings, amendments, and adjustments changed since a given date.",
                "operationId": "get-api-commodities-contracts-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of contracts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "pk": -99999999987455,
                                        "customerId": "107990",
                                        "customerShipTo": "00",
                                        "customerName": "John Lennon",
                                        "contractId": "102066",
                                        "contractDate": "2023-10-12T12:00:00.0000000+00:00",
                                        "status": "Filled",
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                        "shipmentPeriodEnd": "2023-12-31T11:59:59.0000000+00:00",
                                        "commodityId": "3",
                                        "commodityDescription": "Corn",
                                        "quantityUnitOfMeasure": "Bushels",
                                        "originator": "Mike Lennon",
                                        "contractSource": "Purchase",
                                        "contractType": "Basis Only",
                                        "contractSubType": "Min / Max",
                                        "contractedQuantity": 1000,
                                        "deliveredQuantity": 1000,
                                        "undeliveredQuantity": 0,
                                        "pricedQuantity": 500,
                                        "settledQuantity": 0,
                                        "fobPoint": "Nashville TN",
                                        "deliveryLocation": "Kansas City-ADM",
                                        "deliveryPeriod": "2023",
                                        "futures": 5,
                                        "basis": 0.01012,
                                        "cash": 5.01012,
                                        "comments": "30 Days Net",
                                        "otherTerms": "By 5PM",
                                        "futuresMonth": "202312",
                                        "exchangeCode": "ZCZ23",
                                        "confirmedDate": "2023-12-31T11:59:59.0000000+00:00",
                                        "freightRate": 1.5,
                                        "version": "0x00000000009059D6",
                                        "pricings": [
                                            {
                                                "contractPK": -99999999989941,
                                                "sequence": "P00",
                                                "status": "Filled",
                                                "type": "Basis Only",
                                                "site": "1",
                                                "siteName": "Nashville",
                                                "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                                "shipmentPeriodEnd": "2023-12-31T11:59:59.0000000+00:00",
                                                "pricedDate": "2023-12-31T11:59:59.0000000+00:00",
                                                "priceBy": "Mike Smith",
                                                "quantity": 500,
                                                "deliveredQuantity": 500,
                                                "pricedQuantity": 500,
                                                "settledQuantity": 100,
                                                "futures": 5,
                                                "basis": 0.01012,
                                                "cash": 5.01012,
                                                "priceAdjustments": 0,
                                                "netPrice": 5.01012,
                                                "fobPoint": "EFC Systems",
                                                "comments": "30 Days Net",
                                                "otherTerms": "Due By 5PM",
                                                "futuresMonth": "2312",
                                                "exchangeCode": "ZCZ23",
                                                "deliveryPeriod": "2023",
                                                "freightRate": 1.5,
                                                "adjustments": [
                                                    {
                                                        "adjustmentName": "TN Corn Checkoff",
                                                        "quantity": 4687.1377,
                                                        "amount": -5,
                                                        "extendedAmount": -5,
                                                        "ratePerQuantity": 0.025,
                                                        "pricingSequence": "1"
                                                    }
                                                ],
                                                "version": "0x00000000009059D6"
                                            }
                                        ],
                                        "amendments": [
                                            {
                                                "contractPk": -99999999987456,
                                                "sequence": "A01",
                                                "reasonCode": "Incorrect Contract Number",
                                                "reasonCodeBy": "Mike Eisenhower",
                                                "pricingFrom": "P01",
                                                "pricingTo": "P02",
                                                "amendmentDate": "2023-01-01T12:00:00.0000000+00:00",
                                                "confirmedDate": "2023-01-01T12:00:00.0000000+00:00",
                                                "changes": [
                                                    {
                                                        "field": "Basis",
                                                        "oldValue": "0.01011",
                                                        "newValue": "0.01012"
                                                    }
                                                ]
                                            }
                                        ],
                                        "defaultAdjustment": "Storage Charge"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Commodities"
                ],
                "summary": "Commodity Contract Create",
                "description": "Commodity Contracts represent agreements to purchase or sell a specific quantity of a specific commodity delivered to or from a specific location during a specified date range. This endpoint will create a contract.",
                "operationId": "post-api-commodities-contracts-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContractRequest"
                            },
                            "example": {
                                "customerId": "100080",
                                "customerShipTo": "00",
                                "contractDate": "2023-04-24T12:00:00.0000000+00:00",
                                "locationId": "1",
                                "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                "shipmentPeriodEnd": "2023-12-31T12:00:00.0000000+00:00",
                                "commodityId": "3",
                                "contractSource": "Purchase",
                                "contractType": "Fixed Price",
                                "contractSubType": "Min / Max",
                                "contractedQuantity": 1000,
                                "deliveryLocation": "1000",
                                "futures": 5,
                                "basis": 0.01,
                                "cash": 5.01,
                                "comments": "Corn Contract",
                                "otherTerms": "30 days net",
                                "confirmedDate": "2023-01-01T12:00:00.0000000+00:00",
                                "futuresMonth": "2312",
                                "optionPremium": 5.01,
                                "rollFee": 5.01,
                                "futuresOnlyFee": 5.01,
                                "serviceFee": 5.01,
                                "structureFee": 5.01,
                                "freightRate": 1.5
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractResponse"
                                },
                                "example": {
                                    "pk": -99999999987455,
                                    "customerId": "107990",
                                    "customerShipTo": "00",
                                    "customerName": "John Lennon",
                                    "contractId": "102066",
                                    "contractDate": "2023-10-12T12:00:00.0000000+00:00",
                                    "status": "Filled",
                                    "locationId": "1",
                                    "locationName": "Nashville",
                                    "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                    "shipmentPeriodEnd": "2023-12-31T11:59:59.0000000+00:00",
                                    "commodityId": "3",
                                    "commodityDescription": "Corn",
                                    "quantityUnitOfMeasure": "Bushels",
                                    "originator": "Mike Lennon",
                                    "contractSource": "Purchase",
                                    "contractType": "Basis Only",
                                    "contractSubType": "Min / Max",
                                    "contractedQuantity": 1000,
                                    "deliveredQuantity": 1000,
                                    "undeliveredQuantity": 0,
                                    "pricedQuantity": 500,
                                    "settledQuantity": 0,
                                    "fobPoint": "Nashville TN",
                                    "deliveryLocation": "Kansas City-ADM",
                                    "deliveryPeriod": "2023",
                                    "futures": 5,
                                    "basis": 0.01012,
                                    "cash": 5.01012,
                                    "comments": "30 Days Net",
                                    "otherTerms": "By 5PM",
                                    "futuresMonth": "202312",
                                    "exchangeCode": "ZCZ23",
                                    "confirmedDate": "2023-12-31T11:59:59.0000000+00:00",
                                    "freightRate": 1.5,
                                    "version": "0x00000000009059D6",
                                    "pricings": [
                                        {
                                            "contractPK": -99999999989941,
                                            "sequence": "P00",
                                            "status": "Filled",
                                            "type": "Basis Only",
                                            "site": "1",
                                            "siteName": "Nashville",
                                            "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                            "shipmentPeriodEnd": "2023-12-31T11:59:59.0000000+00:00",
                                            "pricedDate": "2023-12-31T11:59:59.0000000+00:00",
                                            "priceBy": "Mike Smith",
                                            "quantity": 500,
                                            "deliveredQuantity": 500,
                                            "pricedQuantity": 500,
                                            "settledQuantity": 100,
                                            "futures": 5,
                                            "basis": 0.01012,
                                            "cash": 5.01012,
                                            "priceAdjustments": 0,
                                            "netPrice": 5.01012,
                                            "fobPoint": "EFC Systems",
                                            "comments": "30 Days Net",
                                            "otherTerms": "Due By 5PM",
                                            "futuresMonth": "2312",
                                            "exchangeCode": "ZCZ23",
                                            "deliveryPeriod": "2023",
                                            "freightRate": 1.5,
                                            "adjustments": [
                                                {
                                                    "adjustmentName": "TN Corn Checkoff",
                                                    "quantity": 4687.1377,
                                                    "amount": -5,
                                                    "extendedAmount": -5,
                                                    "ratePerQuantity": 0.025,
                                                    "pricingSequence": "1"
                                                }
                                            ],
                                            "version": "0x00000000009059D6"
                                        }
                                    ],
                                    "amendments": [
                                        {
                                            "contractPk": -99999999987456,
                                            "sequence": "A01",
                                            "reasonCode": "Incorrect Contract Number",
                                            "reasonCodeBy": "Mike Eisenhower",
                                            "pricingFrom": "P01",
                                            "pricingTo": "P02",
                                            "amendmentDate": "2023-01-01T12:00:00.0000000+00:00",
                                            "confirmedDate": "2023-01-01T12:00:00.0000000+00:00",
                                            "changes": [
                                                {
                                                    "field": "Basis",
                                                    "oldValue": "0.01011",
                                                    "newValue": "0.01012"
                                                }
                                            ]
                                        }
                                    ],
                                    "defaultAdjustment": "Storage Charge"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/positionbalances/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Commodities"
                ],
                "summary": "Commodity Position Balances",
                "description": "Commodity Position Balances represent customer delivered grain balances by commodity, location, and disposition. This endpoint will return all current balances for all customers.",
                "operationId": "get-api-commodities-positionbalances-v1",
                "responses": {
                    "200": {
                        "description": "Returns the list of position balances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PositionBalanceResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "itemId": "3",
                                        "itemDescription": "Corn",
                                        "unitOfMeasure": "Bushel",
                                        "positionId": "1130",
                                        "positionDescription": "Grain Bank",
                                        "balance": 1234.5677
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/scaletickets/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Commodities"
                ],
                "summary": "Commodity Scale Tickets",
                "description": "Commodity Scale Tickets are deliveries of commodities (both inbound and outbound) including details of whom, what, when, where, and how. This endpoint will return all ticket vehicle information, weights, grade readings, splits, application details, discounts, and adjustments changed since a given date.",
                "operationId": "get-api-commodities-scaletickets-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of scale tickets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ScaleTicketResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "customerId": "108990",
                                        "customerShipTo": "00",
                                        "customerName": "George Mason",
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "scaleTicketId": "105178",
                                        "scaleTicketUnique": "-99999999979536",
                                        "scaleTicketType": "Inbound",
                                        "ticketDate": "2023-10-12T12:00:00.0000000+00:00",
                                        "commodityId": "3",
                                        "commodityDescription": "Corn",
                                        "grossWeight": 57000,
                                        "tareWeight": 1000,
                                        "netWeight": 56000,
                                        "referenceNumber": "1233",
                                        "transportationMode": "Truck",
                                        "shipperId": "3768",
                                        "shipperName": "Peter Zoe",
                                        "freightRate": 0,
                                        "vehicleReference": "LMN786",
                                        "tareWeightWeighed": "2023-10-12T02:45:11.0000000+00:00",
                                        "tareWeightWeighMaster": "John Smith",
                                        "grossWeightWeighed": "2023-10-12T02:45:11.0000000+00:00",
                                        "grossWeightWeighMaster": "John Smith",
                                        "netWetQuantity": 0,
                                        "discountQuantity": 0,
                                        "quantityNet": 0,
                                        "discountAmount": 0,
                                        "grades": [
                                            {
                                                "gradeFactorCode": "Damage",
                                                "gradeFactorValue": 2
                                            }
                                        ],
                                        "quantityUnitOfMeasure": "Bushel",
                                        "driverName": "Mike",
                                        "license": "JHG765",
                                        "truckName": "Ford",
                                        "basis": 0.01011,
                                        "cash": 5.01011,
                                        "futures": 5,
                                        "status": "Active",
                                        "splitName": "Farmer Brothers - Back 40",
                                        "field": "Ima Landlord's 40 acre field",
                                        "farm": "22",
                                        "splits": [
                                            {
                                                "customer": "107990",
                                                "customerShipTo": "00",
                                                "customerName": "Peter Jones",
                                                "netWetQuantity": 0,
                                                "netDryQuantity": 0,
                                                "percentage": 0,
                                                "applications": [
                                                    {
                                                        "sequence": "0",
                                                        "applicationReference": "102066-P00",
                                                        "applicationType": "Purchase Contract",
                                                        "netWetQuantity": 500,
                                                        "netDryQuantity": 500,
                                                        "percentage": 50,
                                                        "adjustments": [
                                                            {
                                                                "sequence": 1,
                                                                "adjustmentName": "Inspection Fee",
                                                                "rate": -5,
                                                                "startDate": "2023-01-01T12:00:00.0000000+00:00",
                                                                "endDate": "2023-10-01T12:00:00.0000000+00:00",
                                                                "extendedAmount": -5,
                                                                "calculationType": "Flat Dollar Amount",
                                                                "assessDate": "2023-01-01T12:00:00.0000000+00:00"
                                                            }
                                                        ],
                                                        "discounts": [
                                                            {
                                                                "factor": "TW",
                                                                "factorName": "Test Weight",
                                                                "sequence": 2,
                                                                "reading": 54,
                                                                "rate": -0.3,
                                                                "calculationType": "$ / Net Quantity",
                                                                "extendedAmount": -150,
                                                                "extendedQuantity": 0
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/settlements/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Commodities"
                ],
                "summary": "Commodity Settlements",
                "description": "Commodity Settlements are transactions that represent the purchase or sell of commodities (quantity and/or dollars), adjustments (dollars), and discounts (dollars). This endpoint will return settlement details, splits, adjustments, details of tickets applications, and related payments changed since a given date.",
                "operationId": "get-api-commodities-settlements-v1",
                "parameters": [
                    {
                        "name": "settlementType",
                        "in": "query",
                        "description": "Format - int32.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of settlements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SettlementResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "settlementId": "CG100100",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "settlementType": "Purchase Settlement",
                                        "commodityId": "3",
                                        "commodityDescription": "Corn",
                                        "dateSettled": "2022-04-13T05:12:00.0000000+00:00",
                                        "settledQuantity": 1234.5677,
                                        "unitOfMeasure": "Bushel",
                                        "settledAmount": 1234.56,
                                        "splits": [
                                            {
                                                "customerId": "188280",
                                                "customerName": "David Webb",
                                                "splitPercentage": 100,
                                                "settledAmount": 1234.56,
                                                "netAmount": 1234.56,
                                                "adjustments": [
                                                    {
                                                        "description": "Adjustment Fee",
                                                        "amount": 1234.56
                                                    }
                                                ]
                                            }
                                        ],
                                        "ticketApplications": [
                                            {
                                                "site": "1",
                                                "siteName": "Nashville",
                                                "ticketNumber": "100000",
                                                "settledAmount": 1234.56,
                                                "settledQuantity": 1234.5677
                                            }
                                        ],
                                        "payments": [
                                            {
                                                "reference": "Ck# AR 1941769",
                                                "date": "1234.5678",
                                                "amount": 1234.56,
                                                "quantity": 1234.5677
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/fieldreps/v1": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Field Representatives",
                "description": "Field Representatives are individuals in the organization who work \"in the field\" with customers.  These individuals are usually responsible for sales or customer relationship management for the customers for whom they are responsible.  This endpoint will return all valid Field Representatives and supports differential syncing by filtering to records changed since a given date.",
                "operationId": "get-api-company-fieldreps-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of field representatives",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FieldRepresentativeResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "1081",
                                        "name": "John Doe",
                                        "type": "Agronomy",
                                        "phone": "458-458-4589",
                                        "locations": [
                                            {
                                                "id": "1",
                                                "name": "Brentwood TN"
                                            }
                                        ],
                                        "customers": [
                                            {
                                                "id": "188280",
                                                "name": "John Doe",
                                                "startDate": "string",
                                                "endDate": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/locations/v1": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Locations",
                "description": "Locations are the physical sites of the company at which inventory may be stored, manufacturing may occur,\r\n                     deliveries may originate, and/or sales happen. This endpoint will return all valid locations and supports\r\n                     differential syncing by filtering to records changed since a given date and status (Active, Inactive, Delete, or All).",
                "operationId": "get-api-company-locations-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "Active"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LocationResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "1",
                                        "name": "Brentwood TN",
                                        "address": "123 John Doe Dr.",
                                        "city": "Brentwood",
                                        "state": "TN",
                                        "zip": "37027",
                                        "phone": "458-458-4589",
                                        "email": "JohnDoe@johndoe.com",
                                        "status": "Active"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{customerId}/accountsreceivable/payments/v1": {
            "post": {
                "tags": [
                    "Customers",
                    "Accounts Receivable"
                ],
                "summary": "Customer Payment Create",
                "description": "Payments are a transfer of funds from a customer to an outstanding receivable balance. Payments may be for specific invoices or general pay on credit balance which will be applied against the customer's open transactions.",
                "operationId": "post-api-customers-customerid-accountsreceivable-payments-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerPaymentRequest"
                            },
                            "example": {
                                "amount": 1234.56,
                                "creditCards": [
                                    {
                                        "brand": "Visa",
                                        "reference": "9999",
                                        "approvalNumber": "123456",
                                        "amount": 1234.56
                                    }
                                ],
                                "achs": [
                                    {
                                        "reference": "123456",
                                        "amount": 1234.56
                                    }
                                ],
                                "transactions": [
                                    {
                                        "transactionId": {
                                            "source": "Transactions",
                                            "unique": -99945687451234
                                        },
                                        "amount": 1234.56
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/accountsreceivable/transactions/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Accounts Receivable"
                ],
                "summary": "Customers AR Transactions",
                "description": "Accounts Receivable (AR) Transactions are transactions that have occurred in the system which affect a customer's credit balance. Examples of these would be sales orders, payments, corrections in the form of credit or debit memos, etc...",
                "operationId": "get-api-customers-accountsreceivable-transactions-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountsReceivableTransactionResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "referenceNumber": "1494748",
                                        "transactionType": "OE",
                                        "transactionTypeName": "Order Entry",
                                        "transactionDate": "2022-09-02T03:11:00.0000000+00:00",
                                        "totalAmount": 250,
                                        "paidAmount": 50,
                                        "dueAmount": 200,
                                        "dueDate": "2022-09-30T11:59:00.0000000+00:00",
                                        "discountAmount": 10,
                                        "discountDate": "2022-09-15T11:59:00.0000000+00:00",
                                        "transactionId": {
                                            "source": "Transactions",
                                            "unique": -99945687451234
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/bookings/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customers Bookings",
                "description": "Bookings are reservations with a customer for items at an agreed upon price but no advance payment is received.",
                "operationId": "get-api-customers-contracts-bookings-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookingResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "bookingId": "100100",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "itemId": "2140020",
                                        "operatorName": "John Smith",
                                        "operatorId": 1001,
                                        "effectiveDate": "2022-04-13T12:00:00.0000000+00:00",
                                        "expirationDate": "2022-04-13T11:59:59.0000000+00:00",
                                        "signedAgreementDate": "2022-04-13T12:00:00.0000000+00:00",
                                        "status": "Open",
                                        "wholesaleReference": "WR#2457863",
                                        "comment": "This is a comment",
                                        "bookingQuantity": 1234.5677,
                                        "soldQuantity": 1234.5677,
                                        "remainingQuantity": 1234.5677,
                                        "isPricedAtSale": true,
                                        "price": 1234.5613,
                                        "directOrderCost": 98.12,
                                        "isFeedMillManagerIngredient": false,
                                        "growerPlanningId": "Spring 2024",
                                        "version": "0x000000000014BE08",
                                        "primaryLocationId": "1",
                                        "primaryLocationName": "Nashville",
                                        "locations": [
                                            {
                                                "locationId": "Nash",
                                                "isPrimary": true
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customers Booking Create",
                "description": "Bookings are reservations with a customer for items at an agreed upon price but no advance payment is received.\r\n            \r\n             An API implementing the POST pattern of creating bookings allows you to create bookings reliably.",
                "operationId": "post-api-customers-contracts-bookings-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingCreateRequest"
                            },
                            "example": {
                                "customerId": "188280",
                                "itemId": "2140020",
                                "operatorId": 1001,
                                "effectiveDate": "2022-04-13T12:00:00.0000000+00:00",
                                "expirationDate": "2023-04-13T12:00:00.0000000+00:00",
                                "signedAgreementDate": "2022-04-14T12:00:00.0000000+00:00",
                                "wholesaleReference": "WR#2457863",
                                "comment": "This is a comment",
                                "isQuote": false,
                                "bookingQuantity": 43124.125,
                                "isPricedAtSale": true,
                                "price": 198.12,
                                "directOrderCost": 98.12,
                                "isFeedMillManagerIngredient": false,
                                "locations": [
                                    {
                                        "locationId": "Nash",
                                        "isPrimary": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the ID of the created booking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customers Booking Update",
                "description": "Bookings are reservations with a customer for items at an agreed upon price but no advance payment is received.\r\n            \r\n             An API implementing the PUT pattern of creating bookings allows you to update bookings reliably.",
                "operationId": "put-api-customers-contracts-bookings-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingUpdateRequest"
                            },
                            "example": {
                                "bookingId": "100100",
                                "expirationDate": "2020-01-30T12:00:00.0000000+00:00",
                                "signedAgreementDate": "2020-01-30T12:00:00.0000000+00:00",
                                "status": "Open",
                                "wholesaleReference": "WR#2457863",
                                "comment": "This is a comment",
                                "isQuote": false,
                                "bookingQuantity": 43124.125,
                                "isPricedAtSale": true,
                                "price": 198.12,
                                "directOrderCost": 98.12,
                                "isFeedMillManagerIngredient": false,
                                "version": "0x000000000014BE08",
                                "locations": [
                                    {
                                        "locationId": "Nash",
                                        "isPrimary": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the updated booking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingResponse"
                                },
                                "example": {
                                    "bookingId": "100100",
                                    "customerId": "188280",
                                    "customerName": "David Webb",
                                    "itemId": "2140020",
                                    "operatorName": "John Smith",
                                    "operatorId": 1001,
                                    "effectiveDate": "2022-04-13T12:00:00.0000000+00:00",
                                    "expirationDate": "2022-04-13T11:59:59.0000000+00:00",
                                    "signedAgreementDate": "2022-04-13T12:00:00.0000000+00:00",
                                    "status": "Open",
                                    "wholesaleReference": "WR#2457863",
                                    "comment": "This is a comment",
                                    "bookingQuantity": 1234.5677,
                                    "soldQuantity": 1234.5677,
                                    "remainingQuantity": 1234.5677,
                                    "isPricedAtSale": true,
                                    "price": 1234.5613,
                                    "directOrderCost": 98.12,
                                    "isFeedMillManagerIngredient": false,
                                    "growerPlanningId": "Spring 2024",
                                    "version": "0x000000000014BE08",
                                    "primaryLocationId": "1",
                                    "primaryLocationName": "Nashville",
                                    "locations": [
                                        {
                                            "locationId": "Nash",
                                            "isPrimary": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/prepaids/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customers Prepaids",
                "description": "Prepaids are customer deposits in any amount to be used to settle sales. A Prepaid can be limited to certain items or services and may have specific application rates.",
                "operationId": "get-api-customers-contracts-prepaids-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date/time in UTC that Prepaids have been changed since.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Array of Prepaid Types to include (No type or None, Fertilizer, Seed, Chemical, Feed, Sponsored).",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Array of Prepaid Statuses to include (Open, Pending, Closed). If no statuses are sent, only Open and Closed Prepaids will be retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Customer ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerName",
                        "in": "query",
                        "description": "Customer Name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agreementStart",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Agreement Date Range Start in local time zone",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "agreementEnd",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Agreement Date Range End in local time zone",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of prepaids",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PrepaidResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "10000001",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "operatorName": "John Smith",
                                        "operatorId": 1001,
                                        "agreementDate": "2022-04-13T05:12:00.0000000+00:00",
                                        "expirationDate": "2022-04-13T05:12:00.0000000+00:00",
                                        "comment": "This is a comment",
                                        "contact": "John Smith",
                                        "primaryLocationId": "1",
                                        "primaryLocationName": "Nashville",
                                        "status": "Open",
                                        "isFixedPrice": true,
                                        "isLimitSales": true,
                                        "isLimitItems": true,
                                        "usageRate": 50,
                                        "prepaidAmount": 1234.56,
                                        "usedAmount": 1234.56,
                                        "movedToArAmount": 1234.56,
                                        "availableForProductsAmount": 1234.56,
                                        "availableForUnspecifiedProductsAmount": 1234.56,
                                        "netAvailableAmount": 1234.56,
                                        "items": [
                                            {
                                                "itemId": "3",
                                                "itemDescription": "Corn",
                                                "unitOfMeasure": "Bushel",
                                                "prepaidQuantity": 1234.5677,
                                                "unitPrice": 1234.5677,
                                                "quantityOutstanding": 1234.5677,
                                                "usageRate": 100,
                                                "usePrepaidPrice": true,
                                                "limitSalesQuantity": true,
                                                "limitToPrepaidItems": true
                                            }
                                        ],
                                        "prepaidEligiblePurchaseSummaries": [
                                            {
                                                "purchaseSummaryId": "11",
                                                "purchaseSummaryName": "General Products",
                                                "prepaidAmount": 1234.56,
                                                "soldAmount": 1234.56
                                            }
                                        ],
                                        "prepaidSettlements": [
                                            {
                                                "settlementId": "1",
                                                "locationId": "1",
                                                "locationName": "Nashville",
                                                "date": "2022-04-13T05:12:00.0000000+00:00",
                                                "operatorName": "John Smith",
                                                "type": "Check",
                                                "reference": "1440",
                                                "amount": 1234.56
                                            }
                                        ],
                                        "isDeliveryApplied": true,
                                        "businessUnit": "RETAIL",
                                        "dateAgreement": "2022-04-13T05:12:00.0000000+00:00",
                                        "isAgreementSigned": true,
                                        "rowVersion": "0x123",
                                        "isFuelSales": true,
                                        "quoteExpireDates": 1,
                                        "isQuoteSendEmail": true,
                                        "quoteEmail": "test@testemail.com",
                                        "dateQuoted": "2022-04-13T05:12:00.0000000+00:00",
                                        "isSponsored": true,
                                        "energyForceContract": "123455",
                                        "moneyOnlyAmount": 1234.23
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customer Prepaid Create",
                "description": "Prepaids are customer deposits in any amount to be used to settle sales. A Prepaid can be limited to certain items or services and may have specific application rates.",
                "operationId": "post-api-customers-contracts-prepaids-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePrepaidRequest"
                            },
                            "example": {
                                "customerId": "ABC123",
                                "agreementDate": "2020-01-30T12:00:00.0000000+00:00",
                                "isAgreementSigned": true,
                                "expirationDate": "2020-01-30T12:00:00.0000000+00:00",
                                "comment": "This is a comment",
                                "contact": "Johan Johannson",
                                "primaryLocationId": "ABC123",
                                "usePrepaidPrices": true,
                                "limitSalesQty": true,
                                "limitUseToPrepaidItems": true,
                                "forFuelSales": true,
                                "forFertilizerOnly": true,
                                "sponsored": true,
                                "usageRate": 100,
                                "moneyOnlyAmount": 50,
                                "signature": "string",
                                "operator": "123",
                                "items": [
                                    {
                                        "itemId": "ABC123",
                                        "prepaidQuantity": 50,
                                        "unitPrice": 50,
                                        "usageRate": 50,
                                        "usePrepaidPrices": true,
                                        "limitSalesQty": true,
                                        "limitUseToPrepaidItems": true,
                                        "programType": "ABC123"
                                    }
                                ],
                                "prepaidEligiblePurchaseSummaries": [
                                    {
                                        "purchaseSummaryId": "ABC123",
                                        "purchaseSummaryAmount": 50
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/fields/v1": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customers Fields",
                "description": "Customer Fields are areas of land the customer is associated with. This endpoint will return all fields associated with valid customers and supports differential syncing by filtering to records changed since a given date.",
                "operationId": "get-api-customers-fields-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FieldResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "customerId": "string",
                                        "customerName": "string",
                                        "id": "string",
                                        "description": "string",
                                        "acres": 0,
                                        "location": "string",
                                        "status": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/statements/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Accounts Receivable"
                ],
                "summary": "Customers Statements",
                "description": "Customer Statements show details of relevant prior, current, and future due transactions related to a customer's outstanding accounts receivable balance. Customer Statements are generated each month for updates from the prior month's activity and delivered printed or digitally as needed.",
                "operationId": "get-api-customers-statements-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date used to check if a row has been changed recently",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of statements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerStatementResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "statementPeriod": "2022-05-01",
                                        "totalDue": 25789.12,
                                        "pdf": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/v1": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customers",
                "description": "Customers are individuals or organizations who do business with this company. They may make purchases, have lines of credit (accounts receivable), enter into contracts, and more. This endpoint will return all valid customers and supports differential syncing by filtering to records changed since a given date.",
                "operationId": "get-api-customers-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "Active"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "188280",
                                        "externalId": "134670",
                                        "name1": "David Webb",
                                        "name2": "Dave Webb",
                                        "status": "Active",
                                        "billingAddress": {
                                            "address1": " 123 John Doe Dr.",
                                            "address2": "PO Box 23",
                                            "city": "Franklin",
                                            "state": "TN",
                                            "zip": "37027",
                                            "country": "string",
                                            "phone1": "615-890-2237",
                                            "phone2": "615-890-2237",
                                            "cell": "615-890-2237",
                                            "email": "JohnDoe@johndoe.com"
                                        },
                                        "credit": {
                                            "available": 468,
                                            "balance": 1657,
                                            "limit": 2000
                                        },
                                        "creditManager": "1234",
                                        "fieldRepresentatives": [
                                            {
                                                "id": "1ABC",
                                                "name": "John Smith",
                                                "type": "Bulk Feed",
                                                "startDate": "2023-12-31T11:59:59.0000000+00:00",
                                                "endDate": "2023-12-31T11:59:59.0000000+00:00",
                                                "primary": "1"
                                            }
                                        ],
                                        "responsibleLocation": "11",
                                        "managementRegion": "1234",
                                        "shippingAddresses": [
                                            {
                                                "id": "188280",
                                                "name1": "David Webb",
                                                "name2": "David Webb",
                                                "address1": " 123 John Doe Dr.",
                                                "address2": "PO Box 23",
                                                "city": "Franklin",
                                                "state": "TN",
                                                "zip": "37027",
                                                "phone": "615-890-2237",
                                                "fieldRepresentatives": [
                                                    {
                                                        "id": "1ABC",
                                                        "name": "John Smith",
                                                        "type": "Bulk Feed",
                                                        "startDate": "2023-12-31T11:59:59.0000000+00:00",
                                                        "endDate": "2023-12-31T11:59:59.0000000+00:00",
                                                        "primary": "1"
                                                    }
                                                ]
                                            }
                                        ],
                                        "buyers": [
                                            {
                                                "name": "John Doe",
                                                "cell": "615-890-2237"
                                            }
                                        ],
                                        "optOutMarketingEmails": true
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customer Create",
                "description": "Customers are individuals or organizations who do business with this company. They may make purchases, have lines of credit (accounts receivable), enter into contracts, and more. This endpoint will create a new customer",
                "operationId": "post-api-customers-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerCreateRequest"
                            },
                            "example": {
                                "name1": "John Doe",
                                "name2": "John Doe",
                                "billingAddress": {
                                    "address1": " 123 John Doe Dr.",
                                    "address2": "PO Box 23",
                                    "city": "Franklin",
                                    "state": "TN",
                                    "zip": "37027",
                                    "country": "string",
                                    "phone1": "string",
                                    "phone2": "string",
                                    "cell": "string",
                                    "email": "JohnDoe@johndoe.com"
                                },
                                "responsibleLocation": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the customer ID of the new customer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/items/v1": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Items",
                "description": "Items represent a combination of physical products, that may be stored in inventory or shipped direct from a vendor, and virtual representations of things, an example of which may be a labor charge or a discount that could be used in a sale.  Items may also be inventory-only and not individually sellable as is sometimes the case for components of assemblies or kits.",
                "operationId": "get-api-inventory-items-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date/time in UTC that items have been changed since.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "isCommodity",
                        "in": "query",
                        "description": "Commodity Items Filter: true=commodity items only; false = non-commodity items only. Leave this filter off to get both commodity and non-commodity items.",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "getSites",
                        "in": "query",
                        "description": "Include sites and pricing",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Optional status (Active, Inactive, Delete, or All)",
                        "schema": {
                            "type": "string",
                            "default": "Active"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ItemResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "10025",
                                        "description": "Corn",
                                        "type": "Inventory",
                                        "attribute": "None",
                                        "unitOfMeasure": "Ton",
                                        "weight": 2000,
                                        "categoryId": "D605",
                                        "categoryName": "Assembly Feeds",
                                        "purchaseSummaryId": "34",
                                        "purchaseSummaryName": "Bulk feed",
                                        "replacementCost": 0,
                                        "manufacturerId": 80002,
                                        "manufacturerName": "Wrangler",
                                        "epaNumber": "2749-530",
                                        "pricePrecision": 2,
                                        "quantityPrecision": 2,
                                        "status": "Active",
                                        "discontinued": false,
                                        "lotTracking": "Bulk",
                                        "commodity": true,
                                        "fertilizerIngredient": false,
                                        "customerIdRequired": false,
                                        "comments": "string",
                                        "energyType": "Tank",
                                        "cashDiscount": {
                                            "value": 9.75,
                                            "type": "Amount"
                                        },
                                        "classifications": [
                                            {
                                                "id": "IP24",
                                                "description": "Incentive Program 2024"
                                            }
                                        ],
                                        "sites": [
                                            {
                                                "id": "0112",
                                                "onHandQuantity": 23747.19,
                                                "priceBreaks": [
                                                    {
                                                        "minimumQuantity": 10,
                                                        "price": 23.67
                                                    }
                                                ],
                                                "weightedAverageCost": 1.23,
                                                "saleFlag": true,
                                                "allowOnPurchaseOrder": true,
                                                "liquidDensity": 2,
                                                "dryDensity": 15,
                                                "minimumPrice": 190,
                                                "minimumExtendedPrice": 190,
                                                "oePriceEdit": "Optional",
                                                "suggestedRetailPrice": 13,
                                                "arDiscount": {
                                                    "value": 0.2,
                                                    "type": "Percent"
                                                },
                                                "tierPricing": [
                                                    {
                                                        "name": "Tier H",
                                                        "price": 45
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Sales"
                ],
                "summary": "Sales",
                "description": "Sales are transactions between a customer and the retailer in which products or services are exchanged for payment.",
                "operationId": "get-api-sales-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date used to check if a row has been changed recently",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Filter results to a single customer",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enteredDateStart",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date to indicate earliest entered date to be included",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "enteredDateEnd",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date to indicate latest entered date to be included",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "saleDateStart",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date to indicate earliest sale date to be included",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "saleDateEnd",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date to indicate latest sale date to be included",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of sales",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SaleResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "748523",
                                        "module": "Order Entry",
                                        "transactionType": "OE",
                                        "transactionTypeName": "Order Entry",
                                        "type": "Sale",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "operatorId": 1001,
                                        "customerShipToId": "00",
                                        "customerShipToName": "David Webb",
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "status": "Closed",
                                        "operatorName": "Wren Wilson",
                                        "enteredDate": "2014-11-14T12:00:00.0000000+00:00",
                                        "soldDate": "2014-11-15T12:00:00.0000000+00:00",
                                        "purchaseOrderNumber": "97",
                                        "comment": "Leave at front door.",
                                        "taxAmount": 15,
                                        "totalAmount": 165,
                                        "settlements": [
                                            {
                                                "type": "Check",
                                                "reference": "CK#1034",
                                                "amount": 165
                                            }
                                        ],
                                        "lineItems": [
                                            {
                                                "type": "Item",
                                                "itemId": "80511",
                                                "description": "Ky Fescue",
                                                "quantity": 25,
                                                "unitOfMeasure": "Bags",
                                                "extendedWeight": 50000,
                                                "unitPrice": 566,
                                                "extendedPrice": 14150,
                                                "prepaidId": "701153",
                                                "bookingId": "801295",
                                                "salesContractId": "8074321",
                                                "id": {
                                                    "source": "Ingredient",
                                                    "unique": 1000
                                                }
                                            }
                                        ],
                                        "fields": [
                                            {
                                                "id": "ec773089-067d-4795-b501-d59ee3c17427",
                                                "name": "Field 1",
                                                "vehicles": [
                                                    {
                                                        "id": "1245",
                                                        "acres": 123.56
                                                    }
                                                ],
                                                "applicators": [
                                                    {
                                                        "id": "1245",
                                                        "acres": 123.56
                                                    }
                                                ],
                                                "acres": 100
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/salescontracts/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Sales Contracts",
                "description": "Sales contracts are a contract between the retailer and a customer for sales of a specific quantity of a specific product for an agreed upon price.",
                "operationId": "get-api-customers-contracts-salescontracts-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of sales contracts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SalesContractResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "10000002",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "itemId": "3",
                                        "itemDescription": "Corn",
                                        "unitOfMeasure": "Bushel",
                                        "operatorName": "John Smith",
                                        "operatorId": 1001,
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "quantity": 1234.5677,
                                        "priceType": "Index",
                                        "price": 1234.56,
                                        "amountDown": 1234.56,
                                        "amountDownType": "Percent",
                                        "agreementDate": "2022-04-13T05:12:00.0000000+00:00",
                                        "startDate": "2022-04-13T05:12:00.0000000+00:00",
                                        "endDate": "2022-04-13T05:12:00.0000000+00:00",
                                        "comment": "This is a comment",
                                        "status": "Open",
                                        "settledAmount": 1234.56,
                                        "usageAmount": 1234.56,
                                        "movedToArAmount": 1234.56,
                                        "netAvailableAmount": 1234.56,
                                        "pendingOrdersQuantity": 1234.5677,
                                        "usageQuantity": 1234.5677,
                                        "netAvailableQuantity": 1234.5677,
                                        "tanks": [
                                            {
                                                "tankId": "100002",
                                                "tankName": "Webb Barn 1",
                                                "productType": "Liquid",
                                                "capacity": 1440,
                                                "placement": "Above Ground",
                                                "serialNumber": "15MM4587TKR"
                                            }
                                        ],
                                        "settlements": [
                                            {
                                                "date": "2022-04-13T05:12:00.0000000+00:00",
                                                "operatorName": "John Smith",
                                                "type": "Check",
                                                "reference": "1440",
                                                "amount": 1234.56
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{customerId}/v1": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customer",
                "description": "Customers are individuals or organizations who do business with this company. They may make purchases, have lines of credit (accounts receivable), enter into contracts, and more. This endpoint will return a customer with the provided ID.",
                "operationId": "get-api-customers-customerid-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the requested customer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResponse"
                                },
                                "example": {
                                    "id": "188280",
                                    "externalId": "134670",
                                    "name1": "David Webb",
                                    "name2": "Dave Webb",
                                    "status": "Active",
                                    "billingAddress": {
                                        "address1": " 123 John Doe Dr.",
                                        "address2": "PO Box 23",
                                        "city": "Franklin",
                                        "state": "TN",
                                        "zip": "37027",
                                        "country": "string",
                                        "phone1": "615-890-2237",
                                        "phone2": "615-890-2237",
                                        "cell": "615-890-2237",
                                        "email": "JohnDoe@johndoe.com"
                                    },
                                    "credit": {
                                        "available": 468,
                                        "balance": 1657,
                                        "limit": 2000
                                    },
                                    "creditManager": "1234",
                                    "fieldRepresentatives": [
                                        {
                                            "id": "1ABC",
                                            "name": "John Smith",
                                            "type": "Bulk Feed",
                                            "startDate": "2023-12-31T11:59:59.0000000+00:00",
                                            "endDate": "2023-12-31T11:59:59.0000000+00:00",
                                            "primary": "1"
                                        }
                                    ],
                                    "responsibleLocation": "11",
                                    "managementRegion": "1234",
                                    "shippingAddresses": [
                                        {
                                            "id": "188280",
                                            "name1": "David Webb",
                                            "name2": "David Webb",
                                            "address1": " 123 John Doe Dr.",
                                            "address2": "PO Box 23",
                                            "city": "Franklin",
                                            "state": "TN",
                                            "zip": "37027",
                                            "phone": "615-890-2237",
                                            "fieldRepresentatives": [
                                                {
                                                    "id": "1ABC",
                                                    "name": "John Smith",
                                                    "type": "Bulk Feed",
                                                    "startDate": "2023-12-31T11:59:59.0000000+00:00",
                                                    "endDate": "2023-12-31T11:59:59.0000000+00:00",
                                                    "primary": "1"
                                                }
                                            ]
                                        }
                                    ],
                                    "buyers": [
                                        {
                                            "name": "John Doe",
                                            "cell": "615-890-2237"
                                        }
                                    ],
                                    "optOutMarketingEmails": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/contracts/{id}/amendments/{sequence}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Commodities"
                ],
                "summary": "Commodity Contract Amendment",
                "description": "Commodity Contract Amendments represent changes to original purchase or sales contracts. This endpoint will return details of the requested existing contract amendment.",
                "operationId": "get-api-commodities-contracts-id-amendments-sequence-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "sequence",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a contract amendment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractAmendmentResponse"
                                },
                                "example": {
                                    "contractPk": -99999999987456,
                                    "sequence": "A01",
                                    "reasonCode": "Incorrect Contract Number",
                                    "reasonCodeBy": "Mike Eisenhower",
                                    "pricingFrom": "P01",
                                    "pricingTo": "P02",
                                    "amendmentDate": "2023-01-01T12:00:00.0000000+00:00",
                                    "confirmedDate": "2023-01-01T12:00:00.0000000+00:00",
                                    "changes": [
                                        {
                                            "field": "Basis",
                                            "oldValue": "0.01011",
                                            "newValue": "0.01012"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Commodities"
                ],
                "summary": "Commodity Contract Amendment Update",
                "description": "Commodity Contract Amendments represent changes to original purchase or sales contracts. This endpoint will return details of the requested existing contract amendment.",
                "operationId": "put-api-commodities-contracts-id-amendments-sequence-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "sequence",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContractAmendmentRequest"
                            },
                            "example": {
                                "confirmedDate": "2023-01-10T06:00:00.0000000+00:00"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Returns a no content response"
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/contracts/{id}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Commodities"
                ],
                "summary": "Commodity Contract",
                "description": "Commodity Contracts represent agreements to purchase or sell a specific quantity of a specific commodity delivered to or from a specific location during a specified date range. This endpoint will return all contract details for a specific contract ID.",
                "operationId": "get-api-commodities-contracts-id-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a contract matching the id passed in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractResponse"
                                },
                                "example": {
                                    "pk": -99999999987455,
                                    "customerId": "107990",
                                    "customerShipTo": "00",
                                    "customerName": "John Lennon",
                                    "contractId": "102066",
                                    "contractDate": "2023-10-12T12:00:00.0000000+00:00",
                                    "status": "Filled",
                                    "locationId": "1",
                                    "locationName": "Nashville",
                                    "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                    "shipmentPeriodEnd": "2023-12-31T11:59:59.0000000+00:00",
                                    "commodityId": "3",
                                    "commodityDescription": "Corn",
                                    "quantityUnitOfMeasure": "Bushels",
                                    "originator": "Mike Lennon",
                                    "contractSource": "Purchase",
                                    "contractType": "Basis Only",
                                    "contractSubType": "Min / Max",
                                    "contractedQuantity": 1000,
                                    "deliveredQuantity": 1000,
                                    "undeliveredQuantity": 0,
                                    "pricedQuantity": 500,
                                    "settledQuantity": 0,
                                    "fobPoint": "Nashville TN",
                                    "deliveryLocation": "Kansas City-ADM",
                                    "deliveryPeriod": "2023",
                                    "futures": 5,
                                    "basis": 0.01012,
                                    "cash": 5.01012,
                                    "comments": "30 Days Net",
                                    "otherTerms": "By 5PM",
                                    "futuresMonth": "202312",
                                    "exchangeCode": "ZCZ23",
                                    "confirmedDate": "2023-12-31T11:59:59.0000000+00:00",
                                    "freightRate": 1.5,
                                    "version": "0x00000000009059D6",
                                    "pricings": [
                                        {
                                            "contractPK": -99999999989941,
                                            "sequence": "P00",
                                            "status": "Filled",
                                            "type": "Basis Only",
                                            "site": "1",
                                            "siteName": "Nashville",
                                            "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                            "shipmentPeriodEnd": "2023-12-31T11:59:59.0000000+00:00",
                                            "pricedDate": "2023-12-31T11:59:59.0000000+00:00",
                                            "priceBy": "Mike Smith",
                                            "quantity": 500,
                                            "deliveredQuantity": 500,
                                            "pricedQuantity": 500,
                                            "settledQuantity": 100,
                                            "futures": 5,
                                            "basis": 0.01012,
                                            "cash": 5.01012,
                                            "priceAdjustments": 0,
                                            "netPrice": 5.01012,
                                            "fobPoint": "EFC Systems",
                                            "comments": "30 Days Net",
                                            "otherTerms": "Due By 5PM",
                                            "futuresMonth": "2312",
                                            "exchangeCode": "ZCZ23",
                                            "deliveryPeriod": "2023",
                                            "freightRate": 1.5,
                                            "adjustments": [
                                                {
                                                    "adjustmentName": "TN Corn Checkoff",
                                                    "quantity": 4687.1377,
                                                    "amount": -5,
                                                    "extendedAmount": -5,
                                                    "ratePerQuantity": 0.025,
                                                    "pricingSequence": "1"
                                                }
                                            ],
                                            "version": "0x00000000009059D6"
                                        }
                                    ],
                                    "amendments": [
                                        {
                                            "contractPk": -99999999987456,
                                            "sequence": "A01",
                                            "reasonCode": "Incorrect Contract Number",
                                            "reasonCodeBy": "Mike Eisenhower",
                                            "pricingFrom": "P01",
                                            "pricingTo": "P02",
                                            "amendmentDate": "2023-01-01T12:00:00.0000000+00:00",
                                            "confirmedDate": "2023-01-01T12:00:00.0000000+00:00",
                                            "changes": [
                                                {
                                                    "field": "Basis",
                                                    "oldValue": "0.01011",
                                                    "newValue": "0.01012"
                                                }
                                            ]
                                        }
                                    ],
                                    "defaultAdjustment": "Storage Charge"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Commodities"
                ],
                "summary": "Commodity Contract Update",
                "description": "Commodity Contracts represent agreements to purchase or sell a specific quantity of a specific commodity delivered to or from a specific location during a specified date range. This endpoint will update an existing contract.",
                "operationId": "put-api-commodities-contracts-id-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContractRequest"
                            },
                            "example": {
                                "confirmedDate": "2023-01-01T12:00:00.0000000+00:00",
                                "contractDate": "2023-01-01T12:00:00.0000000+00:00",
                                "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                "shipmentPeriodEnd": "2023-12-01T12:00:00.0000000+00:00",
                                "comments": "Corn Contract",
                                "otherTerms": "30 days net",
                                "version": "0x000000000014BE08",
                                "optionPremium": 5.01,
                                "rollFee": 5.01,
                                "futuresOnlyFee": 5.01,
                                "serviceFee": 5.01,
                                "structureFee": 5.01
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{customerId}/accountsreceivable/transactions/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Accounts Receivable"
                ],
                "summary": "Customer AR Transactions",
                "description": "Accounts Receivable (AR) Transactions are transactions that have occurred in the system which affect a customer's credit balance. Examples of these would be sales orders, payments, corrections in the form of credit or debit memos, etc...",
                "operationId": "get-api-customers-customerid-accountsreceivable-transactions-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "invoiceDateStart",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "invoiceDateEnd",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "dueDateStart",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "dueDateEnd",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "showOutstandingOnly",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountsReceivableTransactionResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "referenceNumber": "1494748",
                                        "transactionType": "OE",
                                        "transactionTypeName": "Order Entry",
                                        "transactionDate": "2022-09-02T03:11:00.0000000+00:00",
                                        "totalAmount": 250,
                                        "paidAmount": 50,
                                        "dueAmount": 200,
                                        "dueDate": "2022-09-30T11:59:00.0000000+00:00",
                                        "discountAmount": 10,
                                        "discountDate": "2022-09-15T11:59:00.0000000+00:00",
                                        "transactionId": {
                                            "source": "Transactions",
                                            "unique": -99945687451234
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{customerId}/shippingaddresses/{shippingAddressId}/v1": {
            "put": {
                "tags": [
                    "Customers",
                    "Accounts Receivable"
                ],
                "summary": "Customer Address Update",
                "description": "Customer shipping addresses represent the location addresses that a customer uses to conduct business. This endpoint will update details on an existing shipping address.",
                "operationId": "put-api-customers-customerid-shippingaddresses-shippingaddressid-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shippingAddressId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerAddressRequest"
                            },
                            "example": {
                                "name1": "John Doe",
                                "name2": "John Doe",
                                "address1": "123 First Street",
                                "address2": "STE 101",
                                "city": "Nashville",
                                "state": "TN",
                                "zip": "12345",
                                "phone": "5555555555"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Returns a no content response"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Customers",
                    "Accounts Receivable"
                ],
                "summary": "Customer Address",
                "description": "Customer shipping addresses represent the location addresses that a customer uses to conduct business. This endpoint will return details on an existing shipping address.",
                "operationId": "get-api-customers-customerid-shippingaddresses-shippingaddressid-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shippingAddressId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerShippingAddressResponse"
                                },
                                "example": {
                                    "id": "188280",
                                    "name1": "David Webb",
                                    "name2": "David Webb",
                                    "address1": " 123 John Doe Dr.",
                                    "address2": "PO Box 23",
                                    "city": "Franklin",
                                    "state": "TN",
                                    "zip": "37027",
                                    "phone": "615-890-2237",
                                    "fieldRepresentatives": [
                                        {
                                            "id": "1ABC",
                                            "name": "John Smith",
                                            "type": "Bulk Feed",
                                            "startDate": "2023-12-31T11:59:59.0000000+00:00",
                                            "endDate": "2023-12-31T11:59:59.0000000+00:00",
                                            "primary": "1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/customers/{customerId}/shippingaddresses/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Accounts Receivable"
                ],
                "summary": "Customer Addresses",
                "description": "Customer shipping addresses represent the location addresses that a customer uses to conduct business. This endpoint will return details on all existing shipping addresses for the given customer.",
                "operationId": "get-api-customers-customerid-shippingaddresses-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerShippingAddressResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "188280",
                                        "name1": "David Webb",
                                        "name2": "David Webb",
                                        "address1": " 123 John Doe Dr.",
                                        "address2": "PO Box 23",
                                        "city": "Franklin",
                                        "state": "TN",
                                        "zip": "37027",
                                        "phone": "615-890-2237",
                                        "fieldRepresentatives": [
                                            {
                                                "id": "1ABC",
                                                "name": "John Smith",
                                                "type": "Bulk Feed",
                                                "startDate": "2023-12-31T11:59:59.0000000+00:00",
                                                "endDate": "2023-12-31T11:59:59.0000000+00:00",
                                                "primary": "1"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers",
                    "Accounts Receivable"
                ],
                "summary": "Customer Address Create",
                "description": "Customer shipping addresses represent the location addresses that a customer uses to conduct business. This endpoint will add a new shipping address to the given customer and return the assigned shipping address ID.",
                "operationId": "post-api-customers-customerid-shippingaddresses-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerAddressRequest"
                            },
                            "example": {
                                "name1": "John Doe",
                                "name2": "John Doe",
                                "address1": "123 First Street",
                                "address2": "STE 101",
                                "city": "Nashville",
                                "state": "TN",
                                "zip": "12345",
                                "phone": "5555555555"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerShippingAddressResponse"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerShippingAddressResponse"
                                },
                                "example": {
                                    "id": "188280",
                                    "name1": "David Webb",
                                    "name2": "David Webb",
                                    "address1": " 123 John Doe Dr.",
                                    "address2": "PO Box 23",
                                    "city": "Franklin",
                                    "state": "TN",
                                    "zip": "37027",
                                    "phone": "615-890-2237",
                                    "fieldRepresentatives": [
                                        {
                                            "id": "1ABC",
                                            "name": "John Smith",
                                            "type": "Bulk Feed",
                                            "startDate": "2023-12-31T11:59:59.0000000+00:00",
                                            "endDate": "2023-12-31T11:59:59.0000000+00:00",
                                            "primary": "1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{customerId}/statements/{statementPeriodId}/pdf/v1": {
            "get": {
                "tags": [
                    "Statements"
                ],
                "summary": "Customer Statement PDF",
                "description": "Get a customer statement PDF document for given customer and period",
                "operationId": "get-api-customers-customerid-statements-statementperiodid-pdf-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "statementPeriodId",
                        "in": "path",
                        "description": "Statement Period ID is a year and month formatted as YYYYMM indicating the fiscal period for which the statement was generated. For example, a statement for account activity during October 2022 would be for the statement period of 202210.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 202210
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a statement PDF",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{customerId}/statements/{statementPeriodId}/v1": {
            "get": {
                "tags": [
                    "Statements"
                ],
                "summary": "Customer Statement",
                "description": "Get a customer statement summary with statement document for given customer and period",
                "operationId": "get-api-customers-customerid-statements-statementperiodid-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "statementPeriodId",
                        "in": "path",
                        "description": "Statement Period is a year and month formatted as YYYYMM indicating the fiscal period for which the statement was generated. For example, a statement for account activity during October 2022 would be for the statement period of 202210.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 202210
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a statement summary and PDF",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerStatementWithSummaryResponse"
                                },
                                "example": {
                                    "statementPeriod": "2022-05-01",
                                    "statementPeriodId": "202205",
                                    "totalDue": 200.2,
                                    "pdf": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{customerId}/statements/v1": {
            "get": {
                "tags": [
                    "Statements"
                ],
                "summary": "Customer Statements Detail",
                "description": "Get summaries of customer statements for a given customer for each period in which they have statements due",
                "operationId": "get-api-customers-customerid-statements-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of statement summaries.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerStatementSummaryResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "statementPeriod": "2022-05-01",
                                        "statementPeriodId": "202205",
                                        "totalDue": 200.2
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/contracts/{id}/pricings/{sequence}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Commodities"
                ],
                "summary": "Commodity Contract Pricing",
                "description": "Commodity Contract Pricings represent specific quantities of a specific commodity contract which have specific price factors and delivery terms set.\r\n            This endpoint will create a contract pricing or set the price factors on an existing contract pricing.\r\n            If quantity priced is less than the pricing's quantity, then a new pricing sequence will be created.",
                "operationId": "get-api-commodities-contracts-id-pricings-sequence-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "sequence",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a contract pricing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractPricingResponse"
                                },
                                "example": {
                                    "contractPK": -99999999989941,
                                    "sequence": "P00",
                                    "status": "Filled",
                                    "type": "Basis Only",
                                    "site": "1",
                                    "siteName": "Nashville",
                                    "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                    "shipmentPeriodEnd": "2023-12-31T11:59:59.0000000+00:00",
                                    "pricedDate": "2023-12-31T11:59:59.0000000+00:00",
                                    "priceBy": "Mike Smith",
                                    "quantity": 500,
                                    "deliveredQuantity": 500,
                                    "pricedQuantity": 500,
                                    "settledQuantity": 100,
                                    "futures": 5,
                                    "basis": 0.01012,
                                    "cash": 5.01012,
                                    "priceAdjustments": 0,
                                    "netPrice": 5.01012,
                                    "fobPoint": "EFC Systems",
                                    "comments": "30 Days Net",
                                    "otherTerms": "Due By 5PM",
                                    "futuresMonth": "2312",
                                    "exchangeCode": "ZCZ23",
                                    "deliveryPeriod": "2023",
                                    "freightRate": 1.5,
                                    "adjustments": [
                                        {
                                            "adjustmentName": "TN Corn Checkoff",
                                            "quantity": 4687.1377,
                                            "amount": -5,
                                            "extendedAmount": -5,
                                            "ratePerQuantity": 0.025,
                                            "pricingSequence": "1"
                                        }
                                    ],
                                    "version": "0x00000000009059D6"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Commodities"
                ],
                "summary": "Commodity Contract Pricing Create",
                "description": "Commodity Contract Pricings represent specific quantities of a specific commodity contract which have specific price factors and delivery terms set. This endpoint will update the price of an existing contract sequence or will create a brand new contract pricing sequence based on if a quantity is passed into the request of the endpoint.\r\n            \r\nFor example if sequence P00 has a quantity of 1000 and a call is made to this endpoint with no quantity in the request we will update the pricing of sequence P00 for the full 1000 quantity and no new sequence will be created. If you pass a quantity of 500 in the request for P00 we will deduct 500 quantity from P00 and create a new sequence P01 for a quantity of 500 with the new pricing that you have sent in the request.",
                "operationId": "put-api-commodities-contracts-id-pricings-sequence-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "sequence",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContractPricingRequest"
                            },
                            "example": {
                                "quantity": 1000,
                                "futures": 5.00001,
                                "basis": 0,
                                "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                "shipmentPeriodEnd": "2023-12-01T12:00:00.0000000+00:00",
                                "version": "0x000000000014BE08"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{customerId}/contracts/bookings/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customer Bookings",
                "description": "Bookings are reservations with a customer for items at an agreed upon price but no advance payment is received.",
                "operationId": "get-api-customers-customerid-contracts-bookings-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookingResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "bookingId": "100100",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "itemId": "2140020",
                                        "operatorName": "John Smith",
                                        "operatorId": 1001,
                                        "effectiveDate": "2022-04-13T12:00:00.0000000+00:00",
                                        "expirationDate": "2022-04-13T11:59:59.0000000+00:00",
                                        "signedAgreementDate": "2022-04-13T12:00:00.0000000+00:00",
                                        "status": "Open",
                                        "wholesaleReference": "WR#2457863",
                                        "comment": "This is a comment",
                                        "bookingQuantity": 1234.5677,
                                        "soldQuantity": 1234.5677,
                                        "remainingQuantity": 1234.5677,
                                        "isPricedAtSale": true,
                                        "price": 1234.5613,
                                        "directOrderCost": 98.12,
                                        "isFeedMillManagerIngredient": false,
                                        "growerPlanningId": "Spring 2024",
                                        "version": "0x000000000014BE08",
                                        "primaryLocationId": "1",
                                        "primaryLocationName": "Nashville",
                                        "locations": [
                                            {
                                                "locationId": "Nash",
                                                "isPrimary": true
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/search/v1": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customers Search",
                "description": "Customers are individuals or organizations who do business with this company. They may make purchases, have lines of credit (accounts receivable), enter into contracts, and more. This endpoint will return all valid customers and supports differential syncing by filtering to records changed since a given date (with pagination).\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-customers-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00",
                                "status": "Active"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created customer search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/items/search/v1": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Items Search",
                "description": "Items represent a combination of physical products, that may be stored in inventory or shipped direct from a vendor, and virtual representations of things, an example of which may be a labor charge or a discount that could be used in a sale.  Items may also be inventory-only and not individually sellable as is sometimes the case for components of assemblies or kits.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-inventory-items-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ItemSearchRequest"
                            },
                            "example": {
                                "isCommodity": true,
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00",
                                "itemIds": [
                                    "ABC",
                                    "DEF",
                                    "123"
                                ],
                                "categories": [
                                    "ABC",
                                    "DEF",
                                    "123"
                                ],
                                "status": "Active"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created item search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/orders/{id}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Sales",
                    "Orders"
                ],
                "summary": "Order",
                "description": "Orders represent a list of items for sale between a customer and the retailer in which products or services are exchanged for payment.",
                "operationId": "get-api-sales-orders-id-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the requested order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResponse"
                                },
                                "example": {
                                    "externalOrderId": "string",
                                    "id": "748523",
                                    "module": "Standard",
                                    "type": "Sale",
                                    "customerId": "188280",
                                    "customerName": "David Webb",
                                    "customerShipToId": "00",
                                    "customerShipToName": "David Webb",
                                    "locationId": "1",
                                    "locationName": "Nashville",
                                    "status": "Closed",
                                    "operatorName": "Wren Wilson",
                                    "operatorId": 1001,
                                    "enteredDate": "2014-11-14T12:00:00.0000000+00:00",
                                    "soldDate": "2014-11-15T12:00:00.0000000+00:00",
                                    "purchaseOrderNumber": "97",
                                    "comment": "Leave at front door.",
                                    "taxAmount": 15,
                                    "totalAmount": 165,
                                    "settlements": [
                                        {
                                            "type": "Check",
                                            "reference": "CK#1034",
                                            "amount": 165
                                        }
                                    ],
                                    "lineItems": [
                                        {
                                            "sequence": 1000,
                                            "type": "Item",
                                            "itemId": "80511",
                                            "description": "Ky Fescue",
                                            "quantity": 25,
                                            "unitOfMeasure": "Bags",
                                            "extendedWeight": 50000,
                                            "unitPrice": 566,
                                            "extendedPrice": 14150,
                                            "prepaidId": "701153",
                                            "bookingId": "801295",
                                            "salesContractId": "8074321",
                                            "externalSequence": "1"
                                        }
                                    ],
                                    "eCommercePointOfSale": "Delivery",
                                    "customerContactInformation": {
                                        "name": "John Doe",
                                        "phone": "444-444-4444",
                                        "email": "JohnDoe@JohnDoe.com",
                                        "address1": "123 John Doe Dr.",
                                        "address2": "Apt. 203",
                                        "city": "Franklin",
                                        "state": "TN",
                                        "zip": "37027"
                                    },
                                    "version": "97",
                                    "customerInstructions": "string",
                                    "workOrderStatus": "Entered"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers",
                    "Sales",
                    "Orders"
                ],
                "summary": "Order Update",
                "description": "Orders are requests from Customers to purchase goods and services. This endpoint will update an existing open order.",
                "operationId": "put-api-sales-orders-id-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderUpdateRequest"
                            },
                            "example": {
                                "externalOrderId": "string",
                                "type": "Sale",
                                "customerId": "188280",
                                "customerShipToId": "00",
                                "locationId": "1",
                                "purchaseOrderNumber": "string",
                                "comment": "string",
                                "eCommercePointOfSale": "Delivery",
                                "taxAmount": 0,
                                "externalRefundStatus": "string",
                                "lineItems": [
                                    {
                                        "sequence": "1",
                                        "type": "Item",
                                        "id": "80511",
                                        "description": "Ky Fescue",
                                        "quantity": 25,
                                        "unitPrice": 566,
                                        "externalSequence": "1"
                                    }
                                ],
                                "preAuth": {
                                    "amount": 14150.78,
                                    "creditCardToken": "string"
                                },
                                "customerContactInformation": {
                                    "name": "John Doe",
                                    "phone": "444-444-4444",
                                    "email": "JohnDoe@JohnDoe.com",
                                    "address1": "123 John Doe Dr.",
                                    "address2": "Apt. 203",
                                    "city": "Franklin",
                                    "state": "TN",
                                    "zip": "37027"
                                },
                                "rowVersion": "0x123",
                                "customerInstructions": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Returns the updated order"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/sales/orders/draft/v1": {
            "post": {
                "tags": [
                    "Customers",
                    "Sales",
                    "Orders"
                ],
                "summary": "Order Draft",
                "description": "A Draft Order returns an accurate pro-forma sales order for the given list of items for the given customer and location.",
                "operationId": "post-api-sales-orders-draft-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DraftOrderCreateRequest"
                            },
                            "example": {
                                "type": "Sale",
                                "customerId": "00",
                                "customerShipToId": "00",
                                "locationId": "1",
                                "lineItems": [
                                    {
                                        "type": "Item",
                                        "id": "80511",
                                        "description": "Ky Fescue",
                                        "quantity": 25,
                                        "unitPrice": 566,
                                        "externalSequence": "1"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the updated order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DraftOrderResponse"
                                },
                                "example": {
                                    "type": "Sale",
                                    "customerId": "188280",
                                    "customerName": "David Webb",
                                    "customerShipToId": "00",
                                    "customerShipToName": "David Webb",
                                    "locationId": "1",
                                    "locationName": "Nashville",
                                    "taxAmount": 65,
                                    "totalAmount": 65,
                                    "lineItems": [
                                        {
                                            "type": "Item",
                                            "id": "80511",
                                            "description": "Ky Fescue",
                                            "quantity": 25,
                                            "unitOfMeasurement": "Bags",
                                            "extendedWeight": 5000,
                                            "unitPrice": 566,
                                            "extendedPrice": 14150
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/orders/v1": {
            "post": {
                "tags": [
                    "Customers",
                    "Sales",
                    "Orders"
                ],
                "summary": "Order Create",
                "description": "Orders represent a list of items for sale between a customer and the retailer in which products or services are exchanged for payment. This endpoint will create a new order",
                "operationId": "post-api-sales-orders-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderCreateRequest"
                            },
                            "example": {
                                "externalOrderId": "string",
                                "type": "Sale",
                                "customerId": "188280",
                                "customerShipToId": "00",
                                "locationId": "string",
                                "purchaseOrderNumber": "string",
                                "comment": "string",
                                "eCommercePointOfSale": "Delivery",
                                "taxAmount": 0,
                                "lineItems": [
                                    {
                                        "type": "Item",
                                        "id": "80511",
                                        "description": "Ky Fescue",
                                        "quantity": 25,
                                        "unitPrice": 566,
                                        "externalSequence": "1"
                                    }
                                ],
                                "preAuth": {
                                    "amount": 14150.78,
                                    "creditCardToken": "string"
                                },
                                "customerContactInformation": {
                                    "name": "John Doe",
                                    "phone": "444-444-4444",
                                    "email": "JohnDoe@JohnDoe.com",
                                    "address1": "123 John Doe Dr.",
                                    "address2": "Apt. 203",
                                    "city": "Franklin",
                                    "state": "TN",
                                    "zip": "37027"
                                },
                                "customerInstructions": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the ID of created order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/futures/v1": {
            "post": {
                "tags": [
                    "Futures"
                ],
                "summary": "Futures Contracts Create",
                "description": "Futures represent filled market trades (hedges) for a specific quantity of a specific commodity typically fulfilled by a broker on a board of trade, over the counter, or other commodity exchange.",
                "operationId": "post-api-commodities-futures-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFuturesRequest"
                            },
                            "example": {
                                "orderNumber": "1234",
                                "locationId": "1",
                                "commodityId": "3",
                                "dateFilled": "2023-04-13T12:00:00.0000000+00:00",
                                "futuresMonth": "2312",
                                "filledQuantity": 10,
                                "futuresPrice": 3,
                                "brokerId": "1000",
                                "brokerageAccount": "",
                                "exchange": "CBOT",
                                "comment": "A comment."
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the futures contract ID of the new futures contract",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/contracts/search/v1": {
            "post": {
                "tags": [
                    "Commodities",
                    "Contracts",
                    "Customers"
                ],
                "summary": "Commodity Contracts Search",
                "description": "Commodity Contracts represent agreements to purchase or sell a specific quantity of a specific commodity delivered to or from a specific location during a specified date range. This endpoint will return all contract details, pricings, amendments, and adjustments changed since a given date.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-commodities-contracts-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID of search results set along with expiration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/accountsreceivable/transactions/search/v1": {
            "post": {
                "tags": [
                    "Accounts Receivable",
                    "Customers"
                ],
                "summary": "Customers AR Transactions Search",
                "description": "Accounts Receivable (AR) Transactions are transactions that have occurred in the system which affect a customer's credit balance. Examples of these would be sales orders, payments, corrections in the form of credit or debit memos, etc...\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-customers-accountsreceivable-transactions-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created transaction search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/bookings/search/v1": {
            "post": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customers Bookings Search",
                "description": "Bookings are reservations with a customer for items at an agreed upon price but no advance payment is received.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-customers-contracts-bookings-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created booking search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/prepaids/search/v1": {
            "post": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customers Prepaids Search",
                "description": "Prepaids are customer deposits in any amount to be used to settle sales. A Prepaid can be limited to certain items or services and may have specific application rates.\r\n            \r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-customers-contracts-prepaids-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PrepaidSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00",
                                "type": [
                                    "string"
                                ],
                                "status": [
                                    "string"
                                ],
                                "customerId": "188280",
                                "customerName": "David Webb",
                                "agreementStart": "2020-01-30T12:00:00.0000000+00:00",
                                "agreementEnd": "2020-01-30T12:00:00.0000000+00:00"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created prepaids search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/search/v1": {
            "post": {
                "tags": [
                    "Customers",
                    "Sales"
                ],
                "summary": "Sales Search",
                "description": "Sales are transactions between a customer and the retailer in which products or services are exchanged for payment.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-sales-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaleSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2022-01-01T12:00:00.0000000+00:00",
                                "customerId": "ABCD1234",
                                "enteredDateStart": "2022-01-01T12:00:00.0000000+00:00",
                                "enteredDateEnd": "2022-01-01T12:00:00.0000000+00:00",
                                "saleDateStart": "2022-01-01T12:00:00.0000000+00:00",
                                "saleDateEnd": "2022-01-01T12:00:00.0000000+00:00"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created sales search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/scaletickets/search/v1": {
            "post": {
                "tags": [
                    "Commodities",
                    "Customers"
                ],
                "summary": "Scale Ticket Search",
                "description": "Commodity Scale Tickets are deliveries of commodities (both inbound and outbound) including details of whom, what, when, where, and how. This endpoint will return all valid scale tickets and supports differential syncing by filtering to records changed since a given date (with pagination).\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-commodities-scaletickets-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScaleTicketSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created scale ticket search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/settlements/search/v1": {
            "post": {
                "tags": [
                    "Commodities",
                    "Customers"
                ],
                "summary": "Commodity Settlements Search",
                "description": "Commodity Settlements are transactions that represent the purchase or sell of commodities (quantity and/or dollars), adjustments (dollars), and discounts (dollars). This endpoint will return settlement details, splits, adjustments, details of tickets applications, and related payments changed since a given date.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-commodities-settlements-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettlementSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00",
                                "settlementType": 1
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created customer search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/prepaidtypes/v1": {
            "get": {
                "tags": [
                    "Company",
                    "Customers",
                    "Inventory",
                    "Sales"
                ],
                "summary": "Prepaid Types",
                "description": "Prepaid Types are set up to allow for specialists in the field to effect decisions in the office or retail environment by setting usage rates for prepaids.  A usage rate is the amount of the prepaid that must be paid before a customer may use the prepaid to secure a price for an item. Prepaid Types automatically set a usage rate when an item is added to a prepaid.",
                "operationId": "get-api-company-prepaidtypes-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "availableStartDate",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "availableEndDate",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "shippingStartDate",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "shippingEndDate",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "fundingClass",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "itemId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of Prepaid Types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PrepaidTypeResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "1000",
                                        "description": "Feed Items",
                                        "availableStartDate": "2020-01-30T12:00:00.0000000+00:00",
                                        "availableEndDate": "2020-12-30T12:00:00.0000000+00:00",
                                        "shippingStartDate": "2020-01-30T12:00:00.0000000+00:00",
                                        "shippingEndDate": "2020-12-30T12:00:00.0000000+00:00",
                                        "fundingClass": "FC1000",
                                        "items": [
                                            {
                                                "id": "10025",
                                                "name": "Corn",
                                                "usageRate": 100
                                            }
                                        ],
                                        "categories": [
                                            {
                                                "id": "D605",
                                                "name": "Assembly Feeds",
                                                "usageRate": 100
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/purchasesummaries/v1": {
            "get": {
                "tags": [
                    "Company",
                    "Customers",
                    "Inventory",
                    "Sales"
                ],
                "summary": "Purchase Summaries",
                "description": "Purchase Summaries are groups of inventory categories. These purchase summaries allow you to quickly break your business sales, costs, etc up into different segments. For example Chemicals, Fertilizer, and Feed may all be considered purchase summaries. This endpoint will return all valid Purchase Summaries.",
                "operationId": "get-api-company-purchasesummaries-v1",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status to filter Purchase Summaries (blank or null = All Purchase Summaries, Active = Active Purchase Summaries, Inactive = Inactive Purchase Summaries).",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of Purchase Summaries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PurchaseSummaryResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "10",
                                        "status": "Active",
                                        "name": "Feed"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/prepaids/{prepaidId}/signature/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customer Prepaid Signature",
                "description": "Gets the signature for a given prepaid",
                "operationId": "get-api-customers-contracts-prepaids-prepaidid-signature-v1",
                "parameters": [
                    {
                        "name": "prepaidId",
                        "in": "path",
                        "description": "Prepaid ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the signature for prepaid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/prepaids/{prepaidId}/void/v1": {
            "post": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customer Prepaid Void",
                "description": "Prepaids are customer deposits in any amount to be used to settle sales. A Prepaid can be limited to certain items or services and may have specific application rates.\r\n            An API implementing the void functionality of prepaids that have not been settled or previously voided",
                "operationId": "post-api-customers-contracts-prepaids-prepaidid-void-v1",
                "parameters": [
                    {
                        "name": "prepaidId",
                        "in": "path",
                        "description": "ID of prepaid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "ID of User voiding the prepaid",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Client Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/match/v1": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customer Match",
                "description": "Customers are individuals or organizations who do business with this company. They may make purchases, have lines of credit (accounts receivable), enter into contracts, and more.<br /><br />\r\n            This endpoint returns a single customer ID that matches the search criteria.<br />\r\n            If no customers match the search criteria, no customer IDs are returned.<br />\r\n            If multiple customers match the search criteria, no customer IDs are returned.",
                "operationId": "post-api-customers-match-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerMatchRequest"
                            },
                            "example": {
                                "merchantId": "188280",
                                "phoneNumber": "5554443333",
                                "name": "John Doe, Sr.",
                                "emailAddress": "johndoe1989@example.com"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns a customer ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "A matching customer could not be found or the search criteria matched multiple customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/statements/{statementPeriodId}/v1": {
            "get": {
                "tags": [
                    "Statements"
                ],
                "summary": "Customers Statements by Period",
                "description": "Get all customer statements for a specified statement period.  This data includes a PDF for each statement which may result in a large amount of data returned; consider utilizing pagination.",
                "operationId": "get-api-customers-statements-statementperiodid-v1",
                "parameters": [
                    {
                        "name": "statementPeriodId",
                        "in": "path",
                        "description": "Statement Period is a year and month formatted as YYYYMM indicating the fiscal period for which the statement was generated. For example, a statement for account activity during October 2022 would be for the statement period of 202210.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 202210
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of statements.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerStatementResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "statementPeriod": "2022-05-01",
                                        "totalDue": 25789.12,
                                        "pdf": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/items/availabilityWithPricing/v1": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Item Availability With Specific Prices",
                "description": "Items represent a combination of physical products, that may be stored in inventory or shipped direct from a vendor, and virtual representations of things, an example of which may be a labor charge or a discount that could be used in a sale.  Items may also be inventory-only and not individually sellable as is sometimes the case for components of assemblies or kits.",
                "operationId": "post-api-inventory-items-availabilitywithpricing-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ItemAvailabilityWithCustomerPricingRequest"
                            },
                            "example": {
                                "customerId": "188280",
                                "items": [
                                    "ABC",
                                    "DEF",
                                    "123"
                                ],
                                "locations": [
                                    "ABC",
                                    "DEF",
                                    "123"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the list of items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ItemAvailabilityWithPricingResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "itemId": "3",
                                        "description": "Corn",
                                        "unitOfMeasure": "Ton",
                                        "prepaidPrice": 23747.18,
                                        "prepaidPrecision": 2,
                                        "suggestedRetailPrice": 9.99,
                                        "imapPrice": 9.99,
                                        "locations": [
                                            {
                                                "locationId": "1",
                                                "onHand": 23747.184,
                                                "allocated": 23747.184,
                                                "outboundTransfers": 23747.184,
                                                "inboundTransfers": 23747.184,
                                                "prepaid": 23747.184,
                                                "booked": 23747.184,
                                                "onPurchaseOrders": 23747.184,
                                                "priceBreaks": [
                                                    {
                                                        "minimumQuantity": 10,
                                                        "price": 23.67
                                                    }
                                                ],
                                                "prices": [
                                                    {
                                                        "type": "Booking",
                                                        "unitPrice": 23747.18,
                                                        "precision": 2
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/oilenergy/tanks/{tankId}/v1": {
            "get": {
                "tags": [
                    "Oil & Energy"
                ],
                "summary": "Tank",
                "description": "Tanks are used to contain gasoline, distillates or propane and may be owned by customers, the company, or a third party. This end point can be used to retrieve tank in the Merchant Ag software.",
                "operationId": "get-api-oilenergy-tanks-tankid-v1",
                "parameters": [
                    {
                        "name": "tankId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the requested tank",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TankResponse"
                                },
                                "example": {
                                    "tankId": "100005",
                                    "status": "Active",
                                    "product": "Propane",
                                    "productType": "Liquid",
                                    "tankType": "ASME",
                                    "serialNumber": "123ABC",
                                    "tankName": "Main Tank",
                                    "purpose": "Customer",
                                    "useType": "Residential",
                                    "site": "1",
                                    "capacity": 1000,
                                    "usableGallons": 800,
                                    "tier": "1",
                                    "currentPercent": 50,
                                    "currentPercentDate": "2023-11-14T12:00:00.0000000+00:00",
                                    "gallonsRemaining": 500,
                                    "ownerCustomerId": "101429600",
                                    "locationCustomerId": "18828000",
                                    "locationDescription": "Brentwood Farm Supplies",
                                    "latitude": 36.07012,
                                    "longitude": -87.37365,
                                    "billingCustomerId": "101429600",
                                    "deliveryType": "Degree Day Base",
                                    "kFactor": 1.02,
                                    "lastDelivery": "2023-11-14T12:00:00.0000000+00:00",
                                    "nextDelivery": "2023-12-14T12:00:00.0000000+00:00"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested tank was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/oilenergy/tanks/search/v1": {
            "post": {
                "tags": [
                    "Oil & Energy"
                ],
                "summary": "Tanks Search",
                "description": "Tanks are used to contain gasoline, distillates or propane and may be owned by customers, the company, or a third party.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-oilenergy-tanks-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TankSearchRequest"
                            },
                            "example": {
                                "customerId": "188280",
                                "product": "Propane",
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created tank search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/contracts/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Commodities",
                    "Contracts",
                    "Customers"
                ],
                "summary": "Commodity Contracts Search",
                "description": "Commodity Contracts represent agreements to purchase or sell a specific quantity of a specific commodity delivered to or from a specific location during a specified date range. This endpoint will return all contract details, pricings, amendments, and adjustments changed since a given date.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-commodities-contracts-search-searchid-v1-pagesize-pagesize-pagenumbe",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of contracts from the result set matching the id passed in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "pk": -99999999987455,
                                        "customerId": "107990",
                                        "customerShipTo": "00",
                                        "customerName": "John Lennon",
                                        "contractId": "102066",
                                        "contractDate": "2023-10-12T12:00:00.0000000+00:00",
                                        "status": "Filled",
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                        "shipmentPeriodEnd": "2023-12-31T11:59:59.0000000+00:00",
                                        "commodityId": "3",
                                        "commodityDescription": "Corn",
                                        "quantityUnitOfMeasure": "Bushels",
                                        "originator": "Mike Lennon",
                                        "contractSource": "Purchase",
                                        "contractType": "Basis Only",
                                        "contractSubType": "Min / Max",
                                        "contractedQuantity": 1000,
                                        "deliveredQuantity": 1000,
                                        "undeliveredQuantity": 0,
                                        "pricedQuantity": 500,
                                        "settledQuantity": 0,
                                        "fobPoint": "Nashville TN",
                                        "deliveryLocation": "Kansas City-ADM",
                                        "deliveryPeriod": "2023",
                                        "futures": 5,
                                        "basis": 0.01012,
                                        "cash": 5.01012,
                                        "comments": "30 Days Net",
                                        "otherTerms": "By 5PM",
                                        "futuresMonth": "202312",
                                        "exchangeCode": "ZCZ23",
                                        "confirmedDate": "2023-12-31T11:59:59.0000000+00:00",
                                        "freightRate": 1.5,
                                        "version": "0x00000000009059D6",
                                        "pricings": [
                                            {
                                                "contractPK": -99999999989941,
                                                "sequence": "P00",
                                                "status": "Filled",
                                                "type": "Basis Only",
                                                "site": "1",
                                                "siteName": "Nashville",
                                                "shipmentPeriodStart": "2023-01-01T12:00:00.0000000+00:00",
                                                "shipmentPeriodEnd": "2023-12-31T11:59:59.0000000+00:00",
                                                "pricedDate": "2023-12-31T11:59:59.0000000+00:00",
                                                "priceBy": "Mike Smith",
                                                "quantity": 500,
                                                "deliveredQuantity": 500,
                                                "pricedQuantity": 500,
                                                "settledQuantity": 100,
                                                "futures": 5,
                                                "basis": 0.01012,
                                                "cash": 5.01012,
                                                "priceAdjustments": 0,
                                                "netPrice": 5.01012,
                                                "fobPoint": "EFC Systems",
                                                "comments": "30 Days Net",
                                                "otherTerms": "Due By 5PM",
                                                "futuresMonth": "2312",
                                                "exchangeCode": "ZCZ23",
                                                "deliveryPeriod": "2023",
                                                "freightRate": 1.5,
                                                "adjustments": [
                                                    {
                                                        "adjustmentName": "TN Corn Checkoff",
                                                        "quantity": 4687.1377,
                                                        "amount": -5,
                                                        "extendedAmount": -5,
                                                        "ratePerQuantity": 0.025,
                                                        "pricingSequence": "1"
                                                    }
                                                ],
                                                "version": "0x00000000009059D6"
                                            }
                                        ],
                                        "amendments": [
                                            {
                                                "contractPk": -99999999987456,
                                                "sequence": "A01",
                                                "reasonCode": "Incorrect Contract Number",
                                                "reasonCodeBy": "Mike Eisenhower",
                                                "pricingFrom": "P01",
                                                "pricingTo": "P02",
                                                "amendmentDate": "2023-01-01T12:00:00.0000000+00:00",
                                                "confirmedDate": "2023-01-01T12:00:00.0000000+00:00",
                                                "changes": [
                                                    {
                                                        "field": "Basis",
                                                        "oldValue": "0.01011",
                                                        "newValue": "0.01012"
                                                    }
                                                ]
                                            }
                                        ],
                                        "defaultAdjustment": "Storage Charge"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/scaletickets/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Commodities",
                    "Customers"
                ],
                "summary": "Scale Ticket Search",
                "description": "Commodity Scale Tickets are deliveries of commodities (both inbound and outbound) including details of whom, what, when, where, and how. This endpoint will return all valid scale tickets and supports differential syncing by filtering to records changed since a given date (with pagination).\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-commodities-scaletickets-search-searchid-v1-pagesize-pagesize-pagenu",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of scale tickets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ScaleTicketResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "customerId": "108990",
                                        "customerShipTo": "00",
                                        "customerName": "George Mason",
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "scaleTicketId": "105178",
                                        "scaleTicketUnique": "-99999999979536",
                                        "scaleTicketType": "Inbound",
                                        "ticketDate": "2023-10-12T12:00:00.0000000+00:00",
                                        "commodityId": "3",
                                        "commodityDescription": "Corn",
                                        "grossWeight": 57000,
                                        "tareWeight": 1000,
                                        "netWeight": 56000,
                                        "referenceNumber": "1233",
                                        "transportationMode": "Truck",
                                        "shipperId": "3768",
                                        "shipperName": "Peter Zoe",
                                        "freightRate": 0,
                                        "vehicleReference": "LMN786",
                                        "tareWeightWeighed": "2023-10-12T02:45:11.0000000+00:00",
                                        "tareWeightWeighMaster": "John Smith",
                                        "grossWeightWeighed": "2023-10-12T02:45:11.0000000+00:00",
                                        "grossWeightWeighMaster": "John Smith",
                                        "netWetQuantity": 0,
                                        "discountQuantity": 0,
                                        "quantityNet": 0,
                                        "discountAmount": 0,
                                        "grades": [
                                            {
                                                "gradeFactorCode": "Damage",
                                                "gradeFactorValue": 2
                                            }
                                        ],
                                        "quantityUnitOfMeasure": "Bushel",
                                        "driverName": "Mike",
                                        "license": "JHG765",
                                        "truckName": "Ford",
                                        "basis": 0.01011,
                                        "cash": 5.01011,
                                        "futures": 5,
                                        "status": "Active",
                                        "splitName": "Farmer Brothers - Back 40",
                                        "field": "Ima Landlord's 40 acre field",
                                        "farm": "22",
                                        "splits": [
                                            {
                                                "customer": "107990",
                                                "customerShipTo": "00",
                                                "customerName": "Peter Jones",
                                                "netWetQuantity": 0,
                                                "netDryQuantity": 0,
                                                "percentage": 0,
                                                "applications": [
                                                    {
                                                        "sequence": "0",
                                                        "applicationReference": "102066-P00",
                                                        "applicationType": "Purchase Contract",
                                                        "netWetQuantity": 500,
                                                        "netDryQuantity": 500,
                                                        "percentage": 50,
                                                        "adjustments": [
                                                            {
                                                                "sequence": 1,
                                                                "adjustmentName": "Inspection Fee",
                                                                "rate": -5,
                                                                "startDate": "2023-01-01T12:00:00.0000000+00:00",
                                                                "endDate": "2023-10-01T12:00:00.0000000+00:00",
                                                                "extendedAmount": -5,
                                                                "calculationType": "Flat Dollar Amount",
                                                                "assessDate": "2023-01-01T12:00:00.0000000+00:00"
                                                            }
                                                        ],
                                                        "discounts": [
                                                            {
                                                                "factor": "TW",
                                                                "factorName": "Test Weight",
                                                                "sequence": 2,
                                                                "reading": 54,
                                                                "rate": -0.3,
                                                                "calculationType": "$ / Net Quantity",
                                                                "extendedAmount": -150,
                                                                "extendedQuantity": 0
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commodities/settlements/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Commodities",
                    "Customers"
                ],
                "summary": "Commodity Settlements Search",
                "description": "Commodity Settlements are transactions that represent the purchase or sell of commodities (quantity and/or dollars), adjustments (dollars), and discounts (dollars). This endpoint will return settlement details, splits, adjustments, details of tickets applications, and related payments changed since a given date.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-commodities-settlements-search-searchid-v1-pagesize-pagesize-pagenum",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of settlements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SettlementResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "settlementId": "CG100100",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "settlementType": "Purchase Settlement",
                                        "commodityId": "3",
                                        "commodityDescription": "Corn",
                                        "dateSettled": "2022-04-13T05:12:00.0000000+00:00",
                                        "settledQuantity": 1234.5677,
                                        "unitOfMeasure": "Bushel",
                                        "settledAmount": 1234.56,
                                        "splits": [
                                            {
                                                "customerId": "188280",
                                                "customerName": "David Webb",
                                                "splitPercentage": 100,
                                                "settledAmount": 1234.56,
                                                "netAmount": 1234.56,
                                                "adjustments": [
                                                    {
                                                        "description": "Adjustment Fee",
                                                        "amount": 1234.56
                                                    }
                                                ]
                                            }
                                        ],
                                        "ticketApplications": [
                                            {
                                                "site": "1",
                                                "siteName": "Nashville",
                                                "ticketNumber": "100000",
                                                "settledAmount": 1234.56,
                                                "settledQuantity": 1234.5677
                                            }
                                        ],
                                        "payments": [
                                            {
                                                "reference": "Ck# AR 1941769",
                                                "date": "1234.5678",
                                                "amount": 1234.56,
                                                "quantity": 1234.5677
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/accountsreceivable/transactions/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Accounts Receivable",
                    "Customers"
                ],
                "summary": "Customers AR Transactions Search",
                "description": "Accounts Receivable (AR) Transactions are transactions that have occurred in the system which affect a customer's credit balance. Examples of these would be sales orders, payments, corrections in the form of credit or debit memos, etc...\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-customers-accountsreceivable-transactions-search-searchid-v1-pagesiz",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountsReceivableTransactionResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "referenceNumber": "1494748",
                                        "transactionType": "OE",
                                        "transactionTypeName": "Order Entry",
                                        "transactionDate": "2022-09-02T03:11:00.0000000+00:00",
                                        "totalAmount": 250,
                                        "paidAmount": 50,
                                        "dueAmount": 200,
                                        "dueDate": "2022-09-30T11:59:00.0000000+00:00",
                                        "discountAmount": 10,
                                        "discountDate": "2022-09-15T11:59:00.0000000+00:00",
                                        "transactionId": {
                                            "source": "Transactions",
                                            "unique": -99945687451234
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/bookings/{bookingId}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customers Booking",
                "description": "Bookings are reservations with a customer for items at an agreed upon price but no advance payment is received.",
                "operationId": "GetBookingAsync",
                "parameters": [
                    {
                        "name": "bookingId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return the booking",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookingResponse"
                                },
                                "example": {
                                    "bookingId": "100100",
                                    "customerId": "188280",
                                    "customerName": "David Webb",
                                    "itemId": "2140020",
                                    "operatorName": "John Smith",
                                    "operatorId": 1001,
                                    "effectiveDate": "2022-04-13T12:00:00.0000000+00:00",
                                    "expirationDate": "2022-04-13T11:59:59.0000000+00:00",
                                    "signedAgreementDate": "2022-04-13T12:00:00.0000000+00:00",
                                    "status": "Open",
                                    "wholesaleReference": "WR#2457863",
                                    "comment": "This is a comment",
                                    "bookingQuantity": 1234.5677,
                                    "soldQuantity": 1234.5677,
                                    "remainingQuantity": 1234.5677,
                                    "isPricedAtSale": true,
                                    "price": 1234.5613,
                                    "directOrderCost": 98.12,
                                    "isFeedMillManagerIngredient": false,
                                    "growerPlanningId": "Spring 2024",
                                    "version": "0x000000000014BE08",
                                    "primaryLocationId": "1",
                                    "primaryLocationName": "Nashville",
                                    "locations": [
                                        {
                                            "locationId": "Nash",
                                            "isPrimary": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/bookings/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customers Bookings Search",
                "description": "Bookings are reservations with a customer for items at an agreed upon price but no advance payment is received.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-customers-contracts-bookings-search-searchid-v1-pagesize-pagesize-pa",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookingResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "bookingId": "100100",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "itemId": "2140020",
                                        "operatorName": "John Smith",
                                        "operatorId": 1001,
                                        "effectiveDate": "2022-04-13T12:00:00.0000000+00:00",
                                        "expirationDate": "2022-04-13T11:59:59.0000000+00:00",
                                        "signedAgreementDate": "2022-04-13T12:00:00.0000000+00:00",
                                        "status": "Open",
                                        "wholesaleReference": "WR#2457863",
                                        "comment": "This is a comment",
                                        "bookingQuantity": 1234.5677,
                                        "soldQuantity": 1234.5677,
                                        "remainingQuantity": 1234.5677,
                                        "isPricedAtSale": true,
                                        "price": 1234.5613,
                                        "directOrderCost": 98.12,
                                        "isFeedMillManagerIngredient": false,
                                        "growerPlanningId": "Spring 2024",
                                        "version": "0x000000000014BE08",
                                        "primaryLocationId": "1",
                                        "primaryLocationName": "Nashville",
                                        "locations": [
                                            {
                                                "locationId": "Nash",
                                                "isPrimary": true
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/growerplannings/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Grower Plannings",
                    "Customers",
                    "Contracts"
                ],
                "summary": "Grower Plannings Search",
                "description": "A grower planning is a collection of bookings for items that a customer has grouped together, typically, for use for on a particular field. The collection of bookings is thought to be the \"grower's plan\" for that field for the upcoming season. This endpoint will return all non-expired grower plannings and their associated booked items for the customer ID that is passed into the route of the endpoint.\r\n            \r\nAn API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration.Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-customers-contracts-growerplannings-search-searchid-v1-pagesize-page",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of grower plannings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GrowerPlanningResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "growerPlanningId": "2025-04-01",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "effectiveDate": "2022-04-13T12:00:00.0000000+00:00",
                                        "expirationDate": "2022-04-13T11:59:59.0000000+00:00",
                                        "items": [
                                            {
                                                "bookingId": "12423",
                                                "itemId": "Fert19Z",
                                                "status": "Open",
                                                "vendor": {
                                                    "vendorId": "1010",
                                                    "vendorName": "Bob Supplies"
                                                },
                                                "operatorId": 1000,
                                                "operatorName": "Jeff Henderson",
                                                "bookedQuantity": 100,
                                                "price": 100,
                                                "isPricedAtSale": true,
                                                "remainingQuantity": 50,
                                                "version": "0x000000000014BE08"
                                            }
                                        ],
                                        "locations": [
                                            {
                                                "locationId": "Warehouse1",
                                                "orderingSite": true
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/growerplannings/search/v1": {
            "post": {
                "tags": [
                    "Grower Plannings",
                    "Customers",
                    "Contracts"
                ],
                "summary": "Grower Plannings Search",
                "description": "A grower planning is a collection of bookings for items that a customer has grouped together, typically, for use for on a particular field. The collection of bookings is thought to be the \"grower's plan\" for that field for the upcoming season. This endpoint will return all non-expired grower plannings and their associated booked items for the customer ID that is passed into the route of the endpoint.\r\n            \r\nAn API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration.Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-customers-contracts-growerplannings-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GrowerPlanningSearchRequest"
                            },
                            "example": {
                                "customerId": "188280",
                                "effectiveDateStart": "2023-04-13T12:00:00.0000000+00:00",
                                "effectiveDateEnd": "2023-04-13T12:00:00.0000000+00:00",
                                "expiredDateBegin": "2023-04-13T12:00:00.0000000+00:00",
                                "expiredDateEnd": "2023-04-13T12:00:00.0000000+00:00",
                                "changedSinceUtc": "2020-01-30T04:21:34.0000000+00:00"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created grower planning search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/contracts/prepaids/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts"
                ],
                "summary": "Customers Prepaids Search",
                "description": "Prepaids are customer deposits in any amount to be used to settle sales. A Prepaid can be limited to certain items or services and may have specific application rates.\r\n            \r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-customers-contracts-prepaids-search-searchid-v1-pagesize-pagesize-pa",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of prepaids",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PrepaidResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "10000001",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "operatorName": "John Smith",
                                        "operatorId": 1001,
                                        "agreementDate": "2022-04-13T05:12:00.0000000+00:00",
                                        "expirationDate": "2022-04-13T05:12:00.0000000+00:00",
                                        "comment": "This is a comment",
                                        "contact": "John Smith",
                                        "primaryLocationId": "1",
                                        "primaryLocationName": "Nashville",
                                        "status": "Open",
                                        "isFixedPrice": true,
                                        "isLimitSales": true,
                                        "isLimitItems": true,
                                        "usageRate": 50,
                                        "prepaidAmount": 1234.56,
                                        "usedAmount": 1234.56,
                                        "movedToArAmount": 1234.56,
                                        "availableForProductsAmount": 1234.56,
                                        "availableForUnspecifiedProductsAmount": 1234.56,
                                        "netAvailableAmount": 1234.56,
                                        "items": [
                                            {
                                                "itemId": "3",
                                                "itemDescription": "Corn",
                                                "unitOfMeasure": "Bushel",
                                                "prepaidQuantity": 1234.5677,
                                                "unitPrice": 1234.5677,
                                                "quantityOutstanding": 1234.5677,
                                                "usageRate": 100,
                                                "usePrepaidPrice": true,
                                                "limitSalesQuantity": true,
                                                "limitToPrepaidItems": true
                                            }
                                        ],
                                        "prepaidEligiblePurchaseSummaries": [
                                            {
                                                "purchaseSummaryId": "11",
                                                "purchaseSummaryName": "General Products",
                                                "prepaidAmount": 1234.56,
                                                "soldAmount": 1234.56
                                            }
                                        ],
                                        "prepaidSettlements": [
                                            {
                                                "settlementId": "1",
                                                "locationId": "1",
                                                "locationName": "Nashville",
                                                "date": "2022-04-13T05:12:00.0000000+00:00",
                                                "operatorName": "John Smith",
                                                "type": "Check",
                                                "reference": "1440",
                                                "amount": 1234.56
                                            }
                                        ],
                                        "isDeliveryApplied": true,
                                        "businessUnit": "RETAIL",
                                        "dateAgreement": "2022-04-13T05:12:00.0000000+00:00",
                                        "isAgreementSigned": true,
                                        "rowVersion": "0x123",
                                        "isFuelSales": true,
                                        "quoteExpireDates": 1,
                                        "isQuoteSendEmail": true,
                                        "quoteEmail": "test@testemail.com",
                                        "dateQuoted": "2022-04-13T05:12:00.0000000+00:00",
                                        "isSponsored": true,
                                        "energyForceContract": "123455",
                                        "moneyOnlyAmount": 1234.23
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Customers Search",
                "description": "Customers are individuals or organizations who do business with this company. They may make purchases, have lines of credit (accounts receivable), enter into contracts, and more. This endpoint will return all valid customers and supports differential syncing by filtering to records changed since a given date (with pagination).\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-customers-search-searchid-v1-pagesize-pagesize-pagenumber-pagenumber",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "188280",
                                        "externalId": "134670",
                                        "name1": "David Webb",
                                        "name2": "Dave Webb",
                                        "status": "Active",
                                        "billingAddress": {
                                            "address1": " 123 John Doe Dr.",
                                            "address2": "PO Box 23",
                                            "city": "Franklin",
                                            "state": "TN",
                                            "zip": "37027",
                                            "country": "string",
                                            "phone1": "615-890-2237",
                                            "phone2": "615-890-2237",
                                            "cell": "615-890-2237",
                                            "email": "JohnDoe@johndoe.com"
                                        },
                                        "credit": {
                                            "available": 468,
                                            "balance": 1657,
                                            "limit": 2000
                                        },
                                        "creditManager": "1234",
                                        "fieldRepresentatives": [
                                            {
                                                "id": "1ABC",
                                                "name": "John Smith",
                                                "type": "Bulk Feed",
                                                "startDate": "2023-12-31T11:59:59.0000000+00:00",
                                                "endDate": "2023-12-31T11:59:59.0000000+00:00",
                                                "primary": "1"
                                            }
                                        ],
                                        "responsibleLocation": "11",
                                        "managementRegion": "1234",
                                        "shippingAddresses": [
                                            {
                                                "id": "188280",
                                                "name1": "David Webb",
                                                "name2": "David Webb",
                                                "address1": " 123 John Doe Dr.",
                                                "address2": "PO Box 23",
                                                "city": "Franklin",
                                                "state": "TN",
                                                "zip": "37027",
                                                "phone": "615-890-2237",
                                                "fieldRepresentatives": [
                                                    {
                                                        "id": "1ABC",
                                                        "name": "John Smith",
                                                        "type": "Bulk Feed",
                                                        "startDate": "2023-12-31T11:59:59.0000000+00:00",
                                                        "endDate": "2023-12-31T11:59:59.0000000+00:00",
                                                        "primary": "1"
                                                    }
                                                ]
                                            }
                                        ],
                                        "buyers": [
                                            {
                                                "name": "John Doe",
                                                "cell": "615-890-2237"
                                            }
                                        ],
                                        "optOutMarketingEmails": true
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/items/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Items Search",
                "description": "Items represent a combination of physical products, that may be stored in inventory or shipped direct from a vendor, and virtual representations of things, an example of which may be a labor charge or a discount that could be used in a sale.  Items may also be inventory-only and not individually sellable as is sometimes the case for components of assemblies or kits.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-inventory-items-search-searchid-v1-pagesize-pagesize-pagenumber-page",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    },
                    {
                        "name": "getSites",
                        "in": "query",
                        "description": "Include sites and pricing",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ItemResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "10025",
                                        "description": "Corn",
                                        "type": "Inventory",
                                        "attribute": "None",
                                        "unitOfMeasure": "Ton",
                                        "weight": 2000,
                                        "categoryId": "D605",
                                        "categoryName": "Assembly Feeds",
                                        "purchaseSummaryId": "34",
                                        "purchaseSummaryName": "Bulk feed",
                                        "replacementCost": 0,
                                        "manufacturerId": 80002,
                                        "manufacturerName": "Wrangler",
                                        "epaNumber": "2749-530",
                                        "pricePrecision": 2,
                                        "quantityPrecision": 2,
                                        "status": "Active",
                                        "discontinued": false,
                                        "lotTracking": "Bulk",
                                        "commodity": true,
                                        "fertilizerIngredient": false,
                                        "customerIdRequired": false,
                                        "comments": "string",
                                        "energyType": "Tank",
                                        "cashDiscount": {
                                            "value": 9.75,
                                            "type": "Amount"
                                        },
                                        "classifications": [
                                            {
                                                "id": "IP24",
                                                "description": "Incentive Program 2024"
                                            }
                                        ],
                                        "sites": [
                                            {
                                                "id": "0112",
                                                "onHandQuantity": 23747.19,
                                                "priceBreaks": [
                                                    {
                                                        "minimumQuantity": 10,
                                                        "price": 23.67
                                                    }
                                                ],
                                                "weightedAverageCost": 1.23,
                                                "saleFlag": true,
                                                "allowOnPurchaseOrder": true,
                                                "liquidDensity": 2,
                                                "dryDensity": 15,
                                                "minimumPrice": 190,
                                                "minimumExtendedPrice": 190,
                                                "oePriceEdit": "Optional",
                                                "suggestedRetailPrice": 13,
                                                "arDiscount": {
                                                    "value": 0.2,
                                                    "type": "Percent"
                                                },
                                                "tierPricing": [
                                                    {
                                                        "name": "Tier H",
                                                        "price": 45
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/oilenergy/tanks/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Oil & Energy"
                ],
                "summary": "Tanks Search",
                "description": "Tanks are used to contain gasoline, distillates or propane and may be owned by customers, the company, or a third party.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-oilenergy-tanks-search-searchid-v1-pagesize-pagesize-pagenumber-page",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of tanks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TankResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "tankId": "100005",
                                        "status": "Active",
                                        "product": "Propane",
                                        "productType": "Liquid",
                                        "tankType": "ASME",
                                        "serialNumber": "123ABC",
                                        "tankName": "Main Tank",
                                        "purpose": "Customer",
                                        "useType": "Residential",
                                        "site": "1",
                                        "capacity": 1000,
                                        "usableGallons": 800,
                                        "tier": "1",
                                        "currentPercent": 50,
                                        "currentPercentDate": "2023-11-14T12:00:00.0000000+00:00",
                                        "gallonsRemaining": 500,
                                        "ownerCustomerId": "101429600",
                                        "locationCustomerId": "18828000",
                                        "locationDescription": "Brentwood Farm Supplies",
                                        "latitude": 36.07012,
                                        "longitude": -87.37365,
                                        "billingCustomerId": "101429600",
                                        "deliveryType": "Degree Day Base",
                                        "kFactor": 1.02,
                                        "lastDelivery": "2023-11-14T12:00:00.0000000+00:00",
                                        "nextDelivery": "2023-12-14T12:00:00.0000000+00:00"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Sales"
                ],
                "summary": "Sales Search",
                "description": "Sales are transactions between a customer and the retailer in which products or services are exchanged for payment.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-sales-search-searchid-v1-pagesize-pagesize-pagenumber-pagenumber",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of sales",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SaleResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "748523",
                                        "module": "Order Entry",
                                        "transactionType": "OE",
                                        "transactionTypeName": "Order Entry",
                                        "type": "Sale",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "operatorId": 1001,
                                        "customerShipToId": "00",
                                        "customerShipToName": "David Webb",
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "status": "Closed",
                                        "operatorName": "Wren Wilson",
                                        "enteredDate": "2014-11-14T12:00:00.0000000+00:00",
                                        "soldDate": "2014-11-15T12:00:00.0000000+00:00",
                                        "purchaseOrderNumber": "97",
                                        "comment": "Leave at front door.",
                                        "taxAmount": 15,
                                        "totalAmount": 165,
                                        "settlements": [
                                            {
                                                "type": "Check",
                                                "reference": "CK#1034",
                                                "amount": 165
                                            }
                                        ],
                                        "lineItems": [
                                            {
                                                "type": "Item",
                                                "itemId": "80511",
                                                "description": "Ky Fescue",
                                                "quantity": 25,
                                                "unitOfMeasure": "Bags",
                                                "extendedWeight": 50000,
                                                "unitPrice": 566,
                                                "extendedPrice": 14150,
                                                "prepaidId": "701153",
                                                "bookingId": "801295",
                                                "salesContractId": "8074321",
                                                "id": {
                                                    "source": "Ingredient",
                                                    "unique": 1000
                                                }
                                            }
                                        ],
                                        "fields": [
                                            {
                                                "id": "ec773089-067d-4795-b501-d59ee3c17427",
                                                "name": "Field 1",
                                                "vehicles": [
                                                    {
                                                        "id": "1245",
                                                        "acres": 123.56
                                                    }
                                                ],
                                                "applicators": [
                                                    {
                                                        "id": "1245",
                                                        "acres": 123.56
                                                    }
                                                ],
                                                "acres": 100
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/settings/version": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Merchant API versions",
                "description": "Merchant API versions",
                "operationId": "get-api-settings-version",
                "responses": {
                    "200": {
                        "description": "Returns an array of Merchant API asset versions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VersionResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "asset": "string",
                                        "version": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vendors/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Vendors Search",
                "description": "Vendors represent businesses that render a good or service to a retailer.  This can come in the form of purchasing inventory, maintenance and repairs on equipment or licensing of software for use by the retailer.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way.In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration.Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-vendors-search-searchid-v1-pagesize-pagesize-pagenumber-pagenumber",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of vendors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VendorResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "101004",
                                        "name": "Hill Country Fertilizer",
                                        "status": "Active"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/vendors/search/v1": {
            "post": {
                "tags": [
                    "Vendors"
                ],
                "summary": "Vendors Search",
                "description": "Vendors represent businesses that render a good or service to a retailer.  This can come in the form of purchasing inventory, maintenance and repairs on equipment or licensing of software for use by the retailer.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way.In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration.Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-vendors-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VendorSearchRequest"
                            },
                            "example": {
                                "eFulfillment": "EFulfillmentVendors",
                                "vendorIds": [
                                    "string"
                                ],
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID and expiration of the created item search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers/{customerId}/contracts/growerplannings/{growerPlanningId}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Grower Plannings"
                ],
                "summary": "Customers Grower Planning",
                "description": "A grower planning is a collection of bookings for items that a customer has grouped together, typically, for use for on a particular field.  The collection of bookings is thought to be the \"grower's plan\" for that field for the upcoming season.  This endpoint will return a specific grower planning.",
                "operationId": "get-api-customers-customerid-contracts-growerplannings-growerplanningid-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "growerPlanningId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a grower plans"
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Grower Plannings"
                ],
                "summary": "Customers Grower Planning Create",
                "description": "A grower planning is a collection of bookings for items that a customer has grouped together, typically, for use for on a particular field.  The collection of bookings is thought to be the \"grower's plan\" for that field for the upcoming season.  This endpoint will create a new grower planning and return the Id of the newly created grower planning.  Use the Submit Grower Planning endpoint to submit the grower planning to automatically generate bookings and if valid to create vendor orders.\r\n            \r\nAn API implementing the POST pattern of creating a grower plan allows you to create bookings reliably.",
                "operationId": "post-api-customers-customerid-contracts-growerplannings-growerplanningid-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "growerPlanningId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGrowerPlanningRequest"
                            },
                            "example": {
                                "expirationDate": "2024-05-12T11:59:59.0000000+00:00",
                                "items": [
                                    {
                                        "itemId": "2140020",
                                        "vendorId": "1010",
                                        "operatorId": 1001,
                                        "bookedQuantity": 43124.125,
                                        "price": 198.12,
                                        "isPricedAtSale": true
                                    }
                                ],
                                "locations": [
                                    {
                                        "locationId": "Nash",
                                        "orderingSite": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the ID of the created booking"
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers",
                    "Contracts",
                    "Grower Plannings"
                ],
                "summary": "Customers Grower Planning Update",
                "description": "A grower planning is a collection of bookings for items that a customer has grouped together, typically, for use for on a particular field.  The collection of bookings is thought to be the \"grower's plan\" for that field for the upcoming season.  This endpoint will update a specific grower planning based on the grower planning Id that is passed into the route of the endpoint.  Use the Submit Grower Planning endpoint to submit the grower planning to automatically generate bookings and if valid to create vendor orders.\r\n            \r\nAn API implementing the PUT pattern of updating a grower plan allows you to update bookings reliably.",
                "operationId": "put-api-customers-customerid-contracts-growerplannings-growerplanningid-v1",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "growerPlanningId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGrowerPlanningRequest"
                            },
                            "example": {
                                "expirationDate": "2020-01-30T12:00:00.0000000+00:00",
                                "items": [
                                    {
                                        "bookingId": "100100",
                                        "itemId": "2140020",
                                        "vendorId": "1010",
                                        "operatorId": 1001,
                                        "bookedQuantity": 43124.125,
                                        "price": 198.12,
                                        "isPricedAtSale": true,
                                        "version": "0x000000000014BE08"
                                    }
                                ],
                                "locations": [
                                    {
                                        "locationId": "Nash",
                                        "orderingSite": true
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the ID of the created booking"
                    },
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/counting/events/{id}/items/v1": {
            "get": {
                "tags": [
                    "Inventory",
                    "Counting"
                ],
                "summary": "Inventory Counting Event Items",
                "description": "A list of items based on the count event configuration.",
                "operationId": "get-api-inventory-counting-events-id-items-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CountEventItemResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "10025",
                                        "description": "Corn",
                                        "unitOfMeasure": "Ton",
                                        "onHandQuantity": 100
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/counting/events/{id}/v1": {
            "get": {
                "tags": [
                    "Inventory",
                    "Counting"
                ],
                "summary": "Inventory Counting Event",
                "description": "Inventory Counting Event",
                "operationId": "get-api-inventory-counting-events-id-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountEventResponse"
                                },
                                "example": {
                                    "id": "string",
                                    "description": "string",
                                    "locationId": "1",
                                    "includeType": "Include All Active Items With On Hand Plus",
                                    "categories": [
                                        {
                                            "id": "D605",
                                            "name": "Assembly Feeds"
                                        }
                                    ],
                                    "activeOnHand": {
                                        "zeroOnHandWithActivitySince": "string",
                                        "includeItemsWithNoActivity": true,
                                        "ignoreLastAdjustedDate": true,
                                        "inactiveStatusItems": "Include Inactive Items"
                                    },
                                    "dailyCounts": {
                                        "activitySince": "string"
                                    },
                                    "multiBin": {
                                        "snapshot": "string",
                                        "status": "New"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/counting/events/v1": {
            "get": {
                "tags": [
                    "Inventory",
                    "Counting"
                ],
                "summary": "Inventory Counting Events",
                "operationId": "get-api-inventory-counting-events-v1",
                "parameters": [
                    {
                        "name": "LocationId",
                        "in": "query",
                        "description": "Location identifier",
                        "schema": {
                            "type": "string",
                            "example": "1"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CountEventResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "description": "string",
                                        "locationId": "1",
                                        "includeType": "Include All Active Items With On Hand Plus",
                                        "categories": [
                                            {
                                                "id": "D605",
                                                "name": "Assembly Feeds"
                                            }
                                        ],
                                        "activeOnHand": {
                                            "zeroOnHandWithActivitySince": "string",
                                            "includeItemsWithNoActivity": true,
                                            "ignoreLastAdjustedDate": true,
                                            "inactiveStatusItems": "Include Inactive Items"
                                        },
                                        "dailyCounts": {
                                            "activitySince": "string"
                                        },
                                        "multiBin": {
                                            "snapshot": "string",
                                            "status": "New"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/items/{id}/locationstock/v1": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Location Stock",
                "description": "Location Stock provides a snapshot of inventory by location with specific detail for quantity that exists on orders, batches, layaways, prepaids, bookings, purchase orders, and transfers.",
                "operationId": "get-api-inventory-items-id-locationstock-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of location stocks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LocationStockResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "123987",
                                        "name": "Nashville Store",
                                        "onHand": 10,
                                        "orders": 10,
                                        "batches": 10,
                                        "layaway": 10,
                                        "prepaid": 10,
                                        "booking": 10,
                                        "netAvailable": 10,
                                        "onOrder": 10,
                                        "inTransit": 10,
                                        "toTransfer": 10,
                                        "unbilled": 10,
                                        "location1": "Aisle 5",
                                        "location2": "Aisle 5",
                                        "quantityOutboundTransfer": 10,
                                        "quantityInboundTransfer": 10
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/lots/v1": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Lots",
                "description": "Some items are required to be tracked by the government for specific reasons (medicines, chemicals, etc).  A lot is used to track these items to a specific batch or run of the item in the event that a recall or inquiry needs to be made for the item.",
                "operationId": "get-api-inventory-lots-v1",
                "parameters": [
                    {
                        "name": "itemIds",
                        "in": "query",
                        "description": "Array of item ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "locations",
                        "in": "query",
                        "description": "Array of location ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of lots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LotItemResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "itemId": "072115",
                                        "locations": [
                                            {
                                                "locationId": "102",
                                                "quantityOnHand": 105.36,
                                                "lots": [
                                                    {
                                                        "lotId": "1234",
                                                        "testedDate": "2024-06-13T12:00:00.0000000+00:00",
                                                        "expirationDate": "2024-06-13T12:00:00.0000000+00:00",
                                                        "quantityAvailable": 103.25
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/transfers/{id}/document/{documentType}/pdf/v1": {
            "get": {
                "tags": [
                    "SiteTransfer"
                ],
                "summary": "Inventory Transfer Documents PDF",
                "description": "Get a specific inventory transfer PDF document for a given transfer ID and document type",
                "operationId": "get-api-inventory-transfers-id-document-documenttype-pdf-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Inventory Transfer Number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 100569
                    },
                    {
                        "name": "documentType",
                        "in": "path",
                        "description": "Valid document types include Ship, Receive, and Hazmat",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Ship"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a transfer document PDF",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/transfers/{id}/receipt/v1": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Inventory Transfer Receipt Create",
                "description": "Inventory Transfer Receipt Create",
                "operationId": "post-api-inventory-transfers-id-receipt-v1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryTransferRequest"
                            },
                            "example": {
                                "transferSite": "2",
                                "dateNeeded": "2024-05-10T12:00:00.0000000+00:00",
                                "receivingSite": "1",
                                "receivingContact": "John Doe",
                                "receivedBy": 123,
                                "comment": "Urgent delivery required.",
                                "freightAllocation": "Weight",
                                "otherFee": "12345",
                                "otherFeeAmount": 25,
                                "freightAmount": 25,
                                "products": [
                                    {
                                        "productSequence": 123,
                                        "itemId": "ABC123",
                                        "quantity": 10,
                                        "unitCost": 25,
                                        "unitRevenue": 50,
                                        "lots": [
                                            {
                                                "lotId": "L001",
                                                "lotDescription": "Batch 1",
                                                "itemId": "ABC123",
                                                "itemDescription": "Widget A",
                                                "quantity": 100,
                                                "testedDate": "2024-04-30T12:00:00.0000000+00:00"
                                            }
                                        ]
                                    }
                                ],
                                "rowVersion": ""
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the ID of the received inventory transfer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/transfers/{transferId}/v1": {
            "put": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Inventory Transfers Update",
                "description": "Inventory Transfers Update",
                "operationId": "put-api-inventory-transfers-transferid-v1",
                "parameters": [
                    {
                        "name": "transferId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryTransferRequest"
                            },
                            "example": {
                                "transferSite": "2",
                                "dateNeeded": "2024-05-10T12:00:00.0000000+00:00",
                                "receivingSite": "1",
                                "receivingContact": "John Doe",
                                "receivedBy": 123,
                                "comment": "Urgent delivery required.",
                                "freightAllocation": "Weight",
                                "otherFee": "12345",
                                "otherFeeAmount": 25,
                                "freightAmount": 25,
                                "products": [
                                    {
                                        "productSequence": 123,
                                        "itemId": "ABC123",
                                        "quantity": 10,
                                        "unitCost": 25,
                                        "unitRevenue": 50,
                                        "lots": [
                                            {
                                                "lotId": "L001",
                                                "lotDescription": "Batch 1",
                                                "itemId": "ABC123",
                                                "itemDescription": "Widget A",
                                                "quantity": 100,
                                                "testedDate": "2024-04-30T12:00:00.0000000+00:00"
                                            }
                                        ]
                                    }
                                ],
                                "rowVersion": ""
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the newly updated site transfer ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/transfers/v1": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Inventory Transfers Create",
                "description": "Inventory Transfers Create",
                "operationId": "post-api-inventory-transfers-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryTransferRequest"
                            },
                            "example": {
                                "transferSite": "2",
                                "dateNeeded": "2024-05-10T12:00:00.0000000+00:00",
                                "receivingSite": "1",
                                "receivingContact": "John Doe",
                                "receivedBy": 123,
                                "comment": "Urgent delivery required.",
                                "freightAllocation": "Weight",
                                "otherFee": "12345",
                                "otherFeeAmount": 25,
                                "freightAmount": 25,
                                "products": [
                                    {
                                        "productSequence": 123,
                                        "itemId": "ABC123",
                                        "quantity": 10,
                                        "unitCost": 25,
                                        "unitRevenue": 50,
                                        "lots": [
                                            {
                                                "lotId": "L001",
                                                "lotDescription": "Batch 1",
                                                "itemId": "ABC123",
                                                "itemDescription": "Widget A",
                                                "quantity": 100,
                                                "testedDate": "2024-04-30T12:00:00.0000000+00:00"
                                            }
                                        ]
                                    }
                                ],
                                "rowVersion": ""
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the newly created site transfer ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Inventory Transfers",
                "description": "Inventory Transfers",
                "operationId": "get-api-inventory-transfers-v1",
                "parameters": [
                    {
                        "name": "searchText",
                        "in": "query",
                        "description": "The full or partial transfer number for which to search.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Array of Transfer Statuses to include (Cancelled, Entered, Received, Shipped). If no statuses are sent all Transfer Statuses will be retrieved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "receivingSite",
                        "in": "query",
                        "description": "The receiving site for the transfers.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "transferSite",
                        "in": "query",
                        "description": "The site from which the transfers are made.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "neededByBeginning",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The beginning date range for when the transfers are needed.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "neededByEnd",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The ending date range for when the transfers are needed.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "transferType",
                        "in": "query",
                        "description": "The type of the transfer. null for all, empty = standard transfer, PF = fuel transfer",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "changedSince",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). The date indicating any changes made since.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "inventorySites",
                        "in": "query",
                        "description": "A list of inventory site IDs for transfers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SiteTransferResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "12345678",
                                        "status": "Active",
                                        "transferSite": "1",
                                        "transferSiteName": "Nashville",
                                        "dateNeeded": "2024-05-02T12:00:00.0000000+00:00",
                                        "shippedDate": "2024-05-02T12:00:00.0000000+00:00",
                                        "shippedBy": "123",
                                        "shippedCost": 1.59,
                                        "shippedRevenue": 1.52,
                                        "receivingSite": "1",
                                        "receivingSiteName": "Nashville",
                                        "receivingContact": "Bob Tester",
                                        "receivedDate": "2024-05-02T12:00:00.0000000+00:00",
                                        "receivedBy": "Bob Tester",
                                        "receivedCost": 1.54,
                                        "comment": "This is a comment about a site transfer",
                                        "freightAllocation": "Weight",
                                        "freightAmount": 1.3,
                                        "otherFee": "OtherFeeID",
                                        "otherFeeAmount": 1.3,
                                        "totalWeight": 200,
                                        "rowVersion": "0x000000000014BE08",
                                        "products": "200"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/fullDetail/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Sales"
                ],
                "summary": "Sales Full Detail",
                "description": "Sales are transactions between a customer and the retailer in which products or services are exchanged for payment.",
                "operationId": "get-api-sales-fulldetail-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date used to check if a row has been changed recently",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Filter results to a single customer",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enteredDateStart",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date to indicate earliest entered date to be included",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "enteredDateEnd",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date to indicate latest entered date to be included",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "saleDateStart",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date to indicate earliest sale date to be included",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "saleDateEnd",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Date to indicate latest sale date to be included",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of sales",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SaleResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "748523",
                                        "module": "Order Entry",
                                        "transactionType": "OE",
                                        "transactionTypeName": "Order Entry",
                                        "type": "Sale",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "operatorId": 1001,
                                        "customerShipToId": "00",
                                        "customerShipToName": "David Webb",
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "status": "Closed",
                                        "operatorName": "Wren Wilson",
                                        "enteredDate": "2014-11-14T12:00:00.0000000+00:00",
                                        "soldDate": "2014-11-15T12:00:00.0000000+00:00",
                                        "purchaseOrderNumber": "97",
                                        "comment": "Leave at front door.",
                                        "taxAmount": 15,
                                        "totalAmount": 165,
                                        "settlements": [
                                            {
                                                "type": "Check",
                                                "reference": "CK#1034",
                                                "amount": 165
                                            }
                                        ],
                                        "lineItems": [
                                            {
                                                "type": "Item",
                                                "itemId": "80511",
                                                "description": "Ky Fescue",
                                                "quantity": 25,
                                                "unitOfMeasure": "Bags",
                                                "extendedWeight": 50000,
                                                "unitPrice": 566,
                                                "extendedPrice": 14150,
                                                "prepaidId": "701153",
                                                "bookingId": "801295",
                                                "salesContractId": "8074321",
                                                "id": {
                                                    "source": "Ingredient",
                                                    "unique": 1000
                                                }
                                            }
                                        ],
                                        "fields": [
                                            {
                                                "id": "ec773089-067d-4795-b501-d59ee3c17427",
                                                "name": "Field 1",
                                                "vehicles": [
                                                    {
                                                        "id": "1245",
                                                        "acres": 123.56
                                                    }
                                                ],
                                                "applicators": [
                                                    {
                                                        "id": "1245",
                                                        "acres": 123.56
                                                    }
                                                ],
                                                "acres": 100
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/orders/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Sales",
                    "Orders"
                ],
                "summary": "Orders Search",
                "description": "Orders represent a list of items for sale between a customer and the retailer in which products or services are exchanged for payment.\r\n            \r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-sales-orders-search-searchid-v1-pagesize-pagesize-pagenumber-pagenum",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "externalOrderId": "string",
                                        "id": "748523",
                                        "module": "Standard",
                                        "type": "Sale",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "customerShipToId": "00",
                                        "customerShipToName": "David Webb",
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "status": "Closed",
                                        "operatorName": "Wren Wilson",
                                        "operatorId": 1001,
                                        "enteredDate": "2014-11-14T12:00:00.0000000+00:00",
                                        "soldDate": "2014-11-15T12:00:00.0000000+00:00",
                                        "purchaseOrderNumber": "97",
                                        "comment": "Leave at front door.",
                                        "taxAmount": 15,
                                        "totalAmount": 165,
                                        "settlements": [
                                            {
                                                "type": "Check",
                                                "reference": "CK#1034",
                                                "amount": 165
                                            }
                                        ],
                                        "lineItems": [
                                            {
                                                "sequence": 1000,
                                                "type": "Item",
                                                "itemId": "80511",
                                                "description": "Ky Fescue",
                                                "quantity": 25,
                                                "unitOfMeasure": "Bags",
                                                "extendedWeight": 50000,
                                                "unitPrice": 566,
                                                "extendedPrice": 14150,
                                                "prepaidId": "701153",
                                                "bookingId": "801295",
                                                "salesContractId": "8074321",
                                                "externalSequence": "1"
                                            }
                                        ],
                                        "eCommercePointOfSale": "Delivery",
                                        "customerContactInformation": {
                                            "name": "John Doe",
                                            "phone": "444-444-4444",
                                            "email": "JohnDoe@JohnDoe.com",
                                            "address1": "123 John Doe Dr.",
                                            "address2": "Apt. 203",
                                            "city": "Franklin",
                                            "state": "TN",
                                            "zip": "37027"
                                        },
                                        "version": "97",
                                        "customerInstructions": "string",
                                        "workOrderStatus": "Entered"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/orders/search/v1": {
            "post": {
                "tags": [
                    "Customers",
                    "Sales",
                    "Orders"
                ],
                "summary": "Orders Search",
                "description": "Orders represent a list of items for sale between a customer and the retailer in which products or services are exchanged for payment.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-sales-orders-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00",
                                "status": "Open",
                                "customerId": "ABCD1234",
                                "enteredDateStart": "2022-01-01T12:00:00.0000000+00:00",
                                "enteredDateEnd": "2022-01-01T12:00:00.0000000+00:00",
                                "saleDateStart": "2022-01-01T12:00:00.0000000+00:00",
                                "saleDateEnd": "2022-01-01T12:00:00.0000000+00:00",
                                "module": "Standard",
                                "workOrderStatus": "Entered"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created order search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/regulatory/checks/v1": {
            "post": {
                "tags": [
                    "Customers",
                    "Regulatory"
                ],
                "summary": "Sales Regulatory Checks",
                "description": "Checks that a customer has a valid Chemical License, Tech License, or Permit where applicable for the provided customer and list of items.",
                "operationId": "post-api-sales-regulatory-checks-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckLicenseRequest"
                            },
                            "example": {
                                "customerId": "188280",
                                "customerShipToId": "00",
                                "lineItems": [
                                    {
                                        "itemId": "80511",
                                        "quantity": 25
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Regulator check result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckLicensesResponse"
                                },
                                "example": {
                                    "lineItems": [
                                        {
                                            "itemId": "80511",
                                            "chemicalLicense": {
                                                "result": "passed",
                                                "reason": "license expired"
                                            },
                                            "permit": {
                                                "result": "passed",
                                                "reason": "license expired"
                                            },
                                            "techLicense": {
                                                "result": "passed",
                                                "reason": "license expired",
                                                "techLicenseResults": [
                                                    {
                                                        "license": "Bayer",
                                                        "result": "passed",
                                                        "reason": "license expired"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/applicators/v1": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Applicators",
                "description": "This endpoint will return a list of active applicators for the organization.  These applicators are individuals who work for the organization that spread or handle chemicals/materials that require a special license by the government.  Not all customers or growers have the licenses and sometimes when they purchase these products they have to have one of these applicators spread the chemicals/materials on their fields for them.",
                "operationId": "get-api-company-applicators-v1",
                "parameters": [
                    {
                        "name": "changedSinceUtc",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of applicators",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApplicatorResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "100",
                                        "name": "Johnny Applicator",
                                        "primaryLocation": "1"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/vehicles/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Vehicles Search",
                "description": "Vehicles are trucks that deliver items.\r\n            \r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-company-vehicles-search-searchid-v1-pagesize-pagesize-pagenumber-pag",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of Vehicles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "10",
                                        "name": "Feed truck",
                                        "year": "2020",
                                        "make": "Feed",
                                        "model": "Ford",
                                        "status": "Active",
                                        "driver": "Jessica"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/company/vehicles/search/v1": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Vehicles Search",
                "description": "Vehicles like trucks\r\n            \r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-company-vehicles-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00",
                                "status": [
                                    "string"
                                ],
                                "location": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns the search ID of the created Vehicles search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/transactions/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get Inventory Transactions Search",
                "description": "An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair. This endpoint will return a paginated list of inventory transactions for the organization.These inventory transactions may include things like purchasing receipts, sales orders, site transfers, counting adjustments, non purchasing receipts, direct orders and other internal inventory transfers for accounting purposes.",
                "operationId": "get-api-inventory-transactions-search-searchid-v1-pagesize-pagesize-pagenumb",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionSearchResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "site": "string",
                                        "itemId": "string",
                                        "type": "string",
                                        "transactionDate": "string",
                                        "reference": "string",
                                        "customerId": "string",
                                        "vendorId": "string",
                                        "transferFromSite": "string",
                                        "transferToSite": "string",
                                        "quantity": 0,
                                        "unitPrice": 0,
                                        "extendedRevenue": 0,
                                        "unitCost": 0,
                                        "extendedCost": 0,
                                        "comment": "string",
                                        "onHand": 0
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inventory/transactions/search/v1": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Inventory Transactions Search",
                "description": "An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair. This endpoint will return a paginated list of inventory transactions for the organization.These inventory transactions may include things like purchasing receipts, sales orders, site transfers, counting adjustments, non purchasing receipts, direct orders and other internal inventory transfers for accounting purposes.",
                "operationId": "post-api-inventory-transactions-search-v1",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventoryTransactionSearchRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2020-01-30T12:00:00.0000000+00:00",
                                "transactionStartDateUtc": "2020-01-30T12:00:00.0000000+00:00",
                                "transactionEndDateUtc": "2020-01-30T12:00:00.0000000+00:00",
                                "transactionTypes": [
                                    "Grain",
                                    "PurchaseOrder",
                                    "SiteTransfer",
                                    "Sales",
                                    "ManufacturingAndFeed",
                                    "InventoryAdjustments"
                                ],
                                "sites": [
                                    "456",
                                    "159",
                                    "123"
                                ],
                                "items": [
                                    "ABC",
                                    "DEF",
                                    "123"
                                ],
                                "vendors": [
                                    "ABC",
                                    "DEF",
                                    "123"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/fullDetail/search/{searchId}/v1": {
            "get": {
                "tags": [
                    "Customers",
                    "Sales"
                ],
                "summary": "Sales Full Detail Search",
                "description": "Sales are transactions between a customer and the retailer in which products or services are exchanged for payment.\r\n            \r\n            An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "get-api-sales-fulldetail-search-searchid-v1-pagesize-pagesize-pagenumber-pag",
                "parameters": [
                    {
                        "name": "searchId",
                        "in": "path",
                        "description": "Format - int64. ID of search results group",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Format - int32. Page size specifies the maximum return results per page",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1000
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Format - int32. Page number specifies the page for which results will be returned.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of sales",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SaleResponse"
                                    }
                                },
                                "example": [
                                    {
                                        "id": "748523",
                                        "module": "Order Entry",
                                        "transactionType": "OE",
                                        "transactionTypeName": "Order Entry",
                                        "type": "Sale",
                                        "customerId": "188280",
                                        "customerName": "David Webb",
                                        "operatorId": 1001,
                                        "customerShipToId": "00",
                                        "customerShipToName": "David Webb",
                                        "locationId": "1",
                                        "locationName": "Nashville",
                                        "status": "Closed",
                                        "operatorName": "Wren Wilson",
                                        "enteredDate": "2014-11-14T12:00:00.0000000+00:00",
                                        "soldDate": "2014-11-15T12:00:00.0000000+00:00",
                                        "purchaseOrderNumber": "97",
                                        "comment": "Leave at front door.",
                                        "taxAmount": 15,
                                        "totalAmount": 165,
                                        "settlements": [
                                            {
                                                "type": "Check",
                                                "reference": "CK#1034",
                                                "amount": 165
                                            }
                                        ],
                                        "lineItems": [
                                            {
                                                "type": "Item",
                                                "itemId": "80511",
                                                "description": "Ky Fescue",
                                                "quantity": 25,
                                                "unitOfMeasure": "Bags",
                                                "extendedWeight": 50000,
                                                "unitPrice": 566,
                                                "extendedPrice": 14150,
                                                "prepaidId": "701153",
                                                "bookingId": "801295",
                                                "salesContractId": "8074321",
                                                "id": {
                                                    "source": "Ingredient",
                                                    "unique": 1000
                                                }
                                            }
                                        ],
                                        "fields": [
                                            {
                                                "id": "ec773089-067d-4795-b501-d59ee3c17427",
                                                "name": "Field 1",
                                                "vehicles": [
                                                    {
                                                        "id": "1245",
                                                        "acres": 123.56
                                                    }
                                                ],
                                                "applicators": [
                                                    {
                                                        "id": "1245",
                                                        "acres": 123.56
                                                    }
                                                ],
                                                "acres": 100
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication attempt failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Search results could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sales/fullDetail/search/v1": {
            "post": {
                "tags": [
                    "Customers",
                    "Sales"
                ],
                "summary": "Sales Full Detail Search",
                "description": "Sales are transactions between a customer and the retailer in which products or services are exchanged for payment.\r\n            \r\n             An API implementing the POST / GET pattern of searching allows you to perform queries and retrieve results in a flexible and efficient way. In this case the caller can use the POST method to send a JSON request body with the search parameters, and in its response, they would receive a JSON object with a search ID and expiration. Search results may then be retrieved reliably so that they may be consistently paged through via the GET method associated with this POST/GET pair.",
                "operationId": "post-api-sales-fulldetail-search-v1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaleRequest"
                            },
                            "example": {
                                "changedSinceUtc": "2022-01-01T12:00:00.0000000+00:00",
                                "customerId": "ABCD1234",
                                "enteredDateStart": "2022-01-01T12:00:00.0000000+00:00",
                                "enteredDateEnd": "2022-01-01T12:00:00.0000000+00:00",
                                "saleDateStart": "2022-01-01T12:00:00.0000000+00:00",
                                "saleDateEnd": "2022-01-01T12:00:00.0000000+00:00",
                                "searchId": 15,
                                "pageSize": 1000,
                                "pageNumber": 4
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                },
                                "example": {
                                    "searchId": 0,
                                    "expirationDate": "string"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Returns the search ID of the created sales search results"
                    },
                    "400": {
                        "description": "Returns the list of errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication attempt failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "type": "string",
                                    "title": "string",
                                    "status": 0,
                                    "detail": "string",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ARDiscountResponse": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "Discount value when AR is used as a settlement type",
                        "format": "double",
                        "example": 0.2
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of AR discount value: Amount/Percent",
                        "nullable": true,
                        "example": "Percent"
                    }
                },
                "additionalProperties": false,
                "description": "AR Discount Response"
            },
            "AccountsReceivableTransactionIdentifierResponse": {
                "required": [
                    "source",
                    "unique"
                ],
                "type": "object",
                "properties": {
                    "source": {
                        "minLength": 1,
                        "type": "string",
                        "description": "AR transaction identifier source",
                        "example": "Transactions"
                    },
                    "unique": {
                        "type": "integer",
                        "description": "AR transaction identifier auto-generated number for uniqueness",
                        "format": "int64",
                        "example": -99945687451234
                    }
                },
                "additionalProperties": false,
                "description": "Accounts Receivable Transaction Identifier"
            },
            "AccountsReceivableTransactionResponse": {
                "required": [
                    "customerId",
                    "customerName",
                    "discountAmount",
                    "dueAmount",
                    "dueDate",
                    "paidAmount",
                    "referenceNumber",
                    "totalAmount",
                    "transactionDate",
                    "transactionId",
                    "transactionType",
                    "transactionTypeName"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer identifier",
                        "example": "188280"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer name",
                        "example": "David Webb"
                    },
                    "referenceNumber": {
                        "minLength": 1,
                        "type": "string",
                        "description": "AR transaction reference number",
                        "example": "1494748"
                    },
                    "transactionType": {
                        "minLength": 1,
                        "type": "string",
                        "description": "AR transaction types: \r\n            CA=Cash Application, \r\n            CM=Credit Memo, \r\n            CP=Close Prepaid, \r\n            DA=Discount Allowed, \r\n            DM=Debit Memo, \r\n            FC=Finance Charge, \r\n            GI=Gift Card Settlement, \r\n            IC=Interest Charge, \r\n            ID=Delayed Terms Interest, \r\n            IN=Invoice (Invoice Sub-types: CG=Commodities and Grain Merchandising, DO=Direct Order, FB=Fertilizer Batch, GS=Gas Sale, OE=Order Entry) \r\n            IT=Interest, \r\n            LP=Late Payment Fee, \r\n            MD=Manual Discount\r\n            Payment\r\n            PC=Sales Contract Completion\r\n            PP=Prepaid Purchase\r\n            PR=Prepaid Reduction\r\n            PS=Sales Contract Settlement\r\n            RP=Route Truck Payment",
                        "example": "OE"
                    },
                    "transactionTypeName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "AR transaction type name",
                        "example": "Order Entry"
                    },
                    "transactionDate": {
                        "type": "string",
                        "description": "Date of AR transaction",
                        "format": "date-time",
                        "example": "2022-09-02T03:11:00.0000000+00:00"
                    },
                    "totalAmount": {
                        "type": "number",
                        "description": "Total amount of AR transaction",
                        "format": "double",
                        "example": 250
                    },
                    "paidAmount": {
                        "type": "number",
                        "description": "Paid amount of AR transaction",
                        "format": "double",
                        "example": 50
                    },
                    "dueAmount": {
                        "type": "number",
                        "description": "Due amount of AR transaction",
                        "format": "double",
                        "example": 200
                    },
                    "dueDate": {
                        "type": "string",
                        "description": "Due date for the AR transaction",
                        "format": "date-time",
                        "example": "2022-09-30T11:59:00.0000000+00:00"
                    },
                    "discountAmount": {
                        "type": "number",
                        "description": "Discount amount for the AR transaction",
                        "format": "double",
                        "example": 10
                    },
                    "discountDate": {
                        "type": "string",
                        "description": "Discount date for the AR transaction",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-09-15T11:59:00.0000000+00:00"
                    },
                    "transactionId": {
                        "$ref": "#/components/schemas/AccountsReceivableTransactionIdentifierResponse"
                    }
                },
                "additionalProperties": false,
                "description": "Accounts Receivable Transaction"
            },
            "ApplicatorResponse": {
                "required": [
                    "id",
                    "name",
                    "primaryLocation"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The ID of the applicator.",
                        "example": "100"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The name of the person doing application.",
                        "example": "Johnny Applicator"
                    },
                    "primaryLocation": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The site the applicator is assigned to.",
                        "example": "1"
                    }
                },
                "additionalProperties": false,
                "description": "Applicator Response"
            },
            "BookingCreateRequest": {
                "required": [
                    "customerId",
                    "directOrderCost",
                    "effectiveDate",
                    "expirationDate",
                    "isPricedAtSale",
                    "isQuote",
                    "itemId",
                    "locations",
                    "signedAgreementDate"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer ID is the identifier of the customer that is associated with the booking",
                        "example": "188280"
                    },
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Item ID is the identifier of the item that is associated with the booking",
                        "example": "2140020"
                    },
                    "operatorId": {
                        "type": "integer",
                        "description": "Booking's operator identifier",
                        "format": "int32",
                        "nullable": true,
                        "example": 1001
                    },
                    "effectiveDate": {
                        "type": "string",
                        "description": "When the booking becomes effective",
                        "format": "date-time",
                        "example": "2022-04-13T12:00:00.0000000+00:00"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "When the booking expires",
                        "format": "date-time",
                        "example": "2023-04-13T12:00:00.0000000+00:00"
                    },
                    "signedAgreementDate": {
                        "type": "string",
                        "description": "Agreement date is the date the agreement was signed",
                        "format": "date-time",
                        "example": "2022-04-14T12:00:00.0000000+00:00"
                    },
                    "wholesaleReference": {
                        "type": "string",
                        "description": "Wholesale reference is a reference number that is used to identify the booking in the wholesale system",
                        "nullable": true,
                        "example": "WR#2457863"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment on the booking",
                        "nullable": true,
                        "example": "This is a comment"
                    },
                    "isQuote": {
                        "type": "boolean",
                        "description": "Quotes do not have a quantity limit",
                        "example": false
                    },
                    "bookingQuantity": {
                        "type": "number",
                        "description": "Quantity is the amount of the item that is associated with the booking",
                        "format": "double",
                        "nullable": true,
                        "example": 43124.125
                    },
                    "isPricedAtSale": {
                        "type": "boolean",
                        "description": "Priced-at-sale bookings do not have a price established",
                        "example": true
                    },
                    "price": {
                        "type": "number",
                        "description": "The price to use on orders, direct orders, and fertilizer sales. Only valid if the booking is not flagged to be priced at sale",
                        "format": "double",
                        "nullable": true,
                        "example": 198.12
                    },
                    "directOrderCost": {
                        "type": "number",
                        "description": "The cost to use on direct orders",
                        "format": "double",
                        "example": 98.12
                    },
                    "isFeedMillManagerIngredient": {
                        "type": "boolean",
                        "description": "Is the booking a feed mill manager ingredient?",
                        "nullable": true,
                        "example": false
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BookingLocationCreateRequest"
                        },
                        "description": "The locations associated with the booking"
                    }
                },
                "additionalProperties": false,
                "description": "Booking Create Request"
            },
            "BookingLocationCreateRequest": {
                "required": [
                    "isPrimary",
                    "locationId"
                ],
                "type": "object",
                "properties": {
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location ID is the identifier of the location",
                        "example": "Nash"
                    },
                    "isPrimary": {
                        "type": "boolean",
                        "description": "A booking must have exactly one primary location",
                        "example": true
                    }
                },
                "additionalProperties": false,
                "description": "Booking Location Create Request"
            },
            "BookingLocationResponse": {
                "required": [
                    "isPrimary",
                    "locationId"
                ],
                "type": "object",
                "properties": {
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Nash"
                    },
                    "isPrimary": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "additionalProperties": false,
                "description": "Booking Location Response"
            },
            "BookingResponse": {
                "required": [
                    "bookingId",
                    "bookingQuantity",
                    "customerId",
                    "customerName",
                    "directOrderCost",
                    "effectiveDate",
                    "isPricedAtSale",
                    "itemId",
                    "locations",
                    "operatorId",
                    "operatorName",
                    "price",
                    "remainingQuantity",
                    "soldQuantity",
                    "status",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "bookingId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Booking ID is the identifier of the booking",
                        "example": "100100"
                    },
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer ID is the identifier of the customer that is associated with the booking",
                        "example": "188280"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer name",
                        "example": "David Webb"
                    },
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Item ID is the identifier of the item that is associated with the booking",
                        "example": "2140020"
                    },
                    "operatorName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Operator name",
                        "example": "John Smith"
                    },
                    "operatorId": {
                        "type": "integer",
                        "description": "Operator identifier associated with the booking.",
                        "format": "int32",
                        "example": 1001
                    },
                    "effectiveDate": {
                        "type": "string",
                        "description": "Date when the booking becomes effective",
                        "format": "date-time",
                        "example": "2022-04-13T12:00:00.0000000+00:00"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "Date when the booking expires",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-04-13T11:59:59.0000000+00:00"
                    },
                    "signedAgreementDate": {
                        "type": "string",
                        "description": "Agreement date is the date the agreement was signed",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-04-13T12:00:00.0000000+00:00"
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Valid values: Open, Closed",
                        "example": "Open"
                    },
                    "wholesaleReference": {
                        "type": "string",
                        "description": "Wholesale reference is a reference number that is used to identify the booking in the wholesale system",
                        "nullable": true,
                        "example": "WR#2457863"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Custom comment for the booking",
                        "nullable": true,
                        "example": "This is a comment"
                    },
                    "bookingQuantity": {
                        "type": "number",
                        "description": "The quantity of the item that is booked",
                        "format": "double",
                        "example": 1234.5677
                    },
                    "soldQuantity": {
                        "type": "number",
                        "description": "The quantity that has been sold so far from the booking",
                        "format": "double",
                        "example": 1234.5677
                    },
                    "remainingQuantity": {
                        "type": "number",
                        "description": "The remaining quantity on the booking",
                        "format": "double",
                        "readOnly": true,
                        "example": 1234.5677
                    },
                    "isPricedAtSale": {
                        "type": "boolean",
                        "description": "Priced-at-sale bookings do not have a price established",
                        "example": true
                    },
                    "price": {
                        "type": "number",
                        "description": "The price to use on orders, direct orders, and fertilizer sales. Only valid if the booking is not flagged to be priced at sale",
                        "format": "double",
                        "example": 1234.5613
                    },
                    "directOrderCost": {
                        "type": "number",
                        "description": "The cost to use on direct orders",
                        "format": "double",
                        "example": 98.12
                    },
                    "isFeedMillManagerIngredient": {
                        "type": "boolean",
                        "description": "Is the booking a feed mill manager ingredient?",
                        "nullable": true,
                        "example": false
                    },
                    "growerPlanningId": {
                        "type": "string",
                        "description": "A grower planning is a collection of line items and sites representing products a grower plans to purchase. The posting of a grower planning results in the creation of bookings that are tied to the grower planning by this ID.",
                        "nullable": true,
                        "example": "Spring 2024"
                    },
                    "version": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Row version",
                        "example": "0x000000000014BE08"
                    },
                    "primaryLocationId": {
                        "type": "string",
                        "description": "Primary location identifier associated with booking",
                        "nullable": true,
                        "example": "1"
                    },
                    "primaryLocationName": {
                        "type": "string",
                        "description": "Primary location name",
                        "nullable": true,
                        "example": "Nashville"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BookingLocationResponse"
                        },
                        "description": "The locations associated with the booking"
                    }
                },
                "additionalProperties": false,
                "description": "Booking"
            },
            "BookingSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC that bookings have been changed since",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Booking Search Request"
            },
            "BookingUpdateRequest": {
                "required": [
                    "bookingId",
                    "directOrderCost",
                    "expirationDate",
                    "isPricedAtSale",
                    "isQuote",
                    "locations",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "bookingId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Booking ID is the identifier of the booking",
                        "example": "100100"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "When the booking expires",
                        "format": "date-time",
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "signedAgreementDate": {
                        "type": "string",
                        "description": "Agreement date is the date the agreement was signed",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Valid values: Open, Closed",
                        "example": "Open"
                    },
                    "wholesaleReference": {
                        "type": "string",
                        "description": "Wholesale reference is a reference number that is used to identify the booking in the wholesale system",
                        "nullable": true,
                        "example": "WR#2457863"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment on the booking",
                        "nullable": true,
                        "example": "This is a comment"
                    },
                    "isQuote": {
                        "type": "boolean",
                        "description": "Quotes do not have a quantity limit",
                        "example": false
                    },
                    "bookingQuantity": {
                        "type": "number",
                        "description": "Quantity is the amount of the item that is associated with the booking",
                        "format": "double",
                        "nullable": true,
                        "example": 43124.125
                    },
                    "isPricedAtSale": {
                        "type": "boolean",
                        "description": "Priced-at-sale bookings do not have a price established",
                        "example": true
                    },
                    "price": {
                        "type": "number",
                        "description": "The price to use on orders, direct orders, and fertilizer sales. Only valid if the booking is not flagged to be priced at sale",
                        "format": "double",
                        "nullable": true,
                        "example": 198.12
                    },
                    "directOrderCost": {
                        "type": "number",
                        "description": "The cost to use on direct orders",
                        "format": "double",
                        "example": 98.12
                    },
                    "isFeedMillManagerIngredient": {
                        "type": "boolean",
                        "description": "Is the booking a feed mill manager ingredient?",
                        "nullable": true,
                        "example": false
                    },
                    "version": {
                        "type": "string",
                        "description": "Row version",
                        "nullable": true,
                        "example": "0x000000000014BE08"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BookingLocationCreateRequest"
                        },
                        "description": "The locations associated with the booking"
                    }
                },
                "additionalProperties": false,
                "description": "Booking Update Request"
            },
            "CashBidResponse": {
                "required": [
                    "basis",
                    "cashPrice",
                    "deliveryBegin",
                    "deliveryEnd",
                    "deliveryPeriod",
                    "futuresMonth",
                    "futuresPrice",
                    "itemDescription",
                    "itemId",
                    "locationId",
                    "locationName",
                    "uom"
                ],
                "type": "object",
                "properties": {
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "80511"
                    },
                    "itemDescription": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Corn"
                    },
                    "uom": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unit of Measure",
                        "example": "Bushel"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    },
                    "locationName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Brentwood TN"
                    },
                    "futuresMonth": {
                        "minLength": 1,
                        "type": "string",
                        "example": "2312"
                    },
                    "deliveryPeriod": {
                        "minLength": 1,
                        "type": "string",
                        "example": "2023"
                    },
                    "deliveryBegin": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "deliveryEnd": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-31T11:59:59.0000000+00:00"
                    },
                    "futuresPrice": {
                        "type": "number",
                        "format": "double",
                        "example": 5
                    },
                    "basis": {
                        "type": "number",
                        "format": "double",
                        "example": 0.01001
                    },
                    "cashPrice": {
                        "type": "number",
                        "format": "double",
                        "example": 5.01001
                    }
                },
                "additionalProperties": false,
                "description": "Cash Bid"
            },
            "CashDiscountResponse": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "Cash discount value for the item",
                        "format": "double",
                        "example": 9.75
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of cash discount value: Amount/Percent",
                        "nullable": true,
                        "example": "Amount"
                    }
                },
                "additionalProperties": false,
                "description": "Cash Discount Response"
            },
            "CheckLicenseLineItemRequest": {
                "required": [
                    "itemId",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Item ID",
                        "example": "80511"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Quantity",
                        "format": "double",
                        "example": 25
                    }
                },
                "additionalProperties": false,
                "description": "Check License Line Item Request"
            },
            "CheckLicenseRequest": {
                "required": [
                    "customerId",
                    "customerShipToId",
                    "lineItems"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer ID",
                        "example": "188280"
                    },
                    "customerShipToId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer Ship To ID",
                        "example": "00"
                    },
                    "lineItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CheckLicenseLineItemRequest"
                        },
                        "description": "Check License line items"
                    }
                },
                "additionalProperties": false,
                "description": "Check License and Permit Request"
            },
            "CheckLicenseResponse": {
                "required": [
                    "chemicalLicense",
                    "itemId",
                    "permit",
                    "techLicense"
                ],
                "type": "object",
                "properties": {
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Item ID",
                        "example": "80511"
                    },
                    "chemicalLicense": {
                        "$ref": "#/components/schemas/LicenseResponse"
                    },
                    "permit": {
                        "$ref": "#/components/schemas/LicenseResponse"
                    },
                    "techLicense": {
                        "$ref": "#/components/schemas/TechLicensesResponse"
                    }
                },
                "additionalProperties": false,
                "description": "Check License Response"
            },
            "CheckLicensesResponse": {
                "required": [
                    "lineItems"
                ],
                "type": "object",
                "properties": {
                    "lineItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CheckLicenseResponse"
                        },
                        "description": "Line Items"
                    }
                },
                "additionalProperties": false,
                "description": "Check Licenses Response"
            },
            "ClassificationResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Classification Id",
                        "nullable": true,
                        "example": "IP24"
                    },
                    "description": {
                        "type": "string",
                        "description": "Classification Description",
                        "nullable": true,
                        "example": "Incentive Program 2024"
                    }
                },
                "additionalProperties": false,
                "description": "Classification"
            },
            "ContractAdjustmentResponse": {
                "required": [
                    "adjustmentName",
                    "amount",
                    "extendedAmount",
                    "pricingSequence",
                    "quantity",
                    "ratePerQuantity"
                ],
                "type": "object",
                "properties": {
                    "adjustmentName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "TN Corn Checkoff"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "example": 4687.1377
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "example": -5
                    },
                    "extendedAmount": {
                        "type": "number",
                        "format": "double",
                        "example": -5
                    },
                    "ratePerQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 0.025
                    },
                    "pricingSequence": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    }
                },
                "additionalProperties": false,
                "description": "Contract Adjustment"
            },
            "ContractAmendmentChangeResponse": {
                "required": [
                    "field",
                    "newValue",
                    "oldValue"
                ],
                "type": "object",
                "properties": {
                    "field": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Basis"
                    },
                    "oldValue": {
                        "minLength": 1,
                        "type": "string",
                        "example": "0.01011"
                    },
                    "newValue": {
                        "minLength": 1,
                        "type": "string",
                        "example": "0.01012"
                    }
                },
                "additionalProperties": false,
                "description": "Changes related to the Amendment"
            },
            "ContractAmendmentResponse": {
                "required": [
                    "amendmentDate",
                    "contractPk",
                    "pricingFrom",
                    "pricingTo",
                    "reasonCode",
                    "reasonCodeBy",
                    "sequence"
                ],
                "type": "object",
                "properties": {
                    "contractPk": {
                        "type": "integer",
                        "description": "Contract Primary Key",
                        "format": "int64",
                        "example": -99999999987456
                    },
                    "sequence": {
                        "minLength": 1,
                        "type": "string",
                        "example": "A01"
                    },
                    "reasonCode": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Incorrect Contract Number"
                    },
                    "reasonCodeBy": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Mike Eisenhower"
                    },
                    "pricingFrom": {
                        "minLength": 1,
                        "type": "string",
                        "example": "P01"
                    },
                    "pricingTo": {
                        "minLength": 1,
                        "type": "string",
                        "example": "P02"
                    },
                    "amendmentDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "confirmedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "changes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractAmendmentChangeResponse"
                        },
                        "description": "Changes related to the Amendment",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Contract Amendment"
            },
            "ContractPricingResponse": {
                "required": [
                    "basis",
                    "cash",
                    "contractPK",
                    "deliveredQuantity",
                    "deliveryPeriod",
                    "exchangeCode",
                    "fobPoint",
                    "freightRate",
                    "futures",
                    "futuresMonth",
                    "netPrice",
                    "priceAdjustments",
                    "pricedQuantity",
                    "quantity",
                    "sequence",
                    "settledQuantity",
                    "site",
                    "siteName",
                    "status",
                    "type",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "contractPK": {
                        "type": "integer",
                        "description": "Contract Primary Key",
                        "format": "int64",
                        "example": -99999999989941
                    },
                    "sequence": {
                        "minLength": 1,
                        "type": "string",
                        "example": "P00"
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Filled"
                    },
                    "type": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Basis Only"
                    },
                    "site": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    },
                    "siteName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Nashville"
                    },
                    "shipmentPeriodStart": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "shipmentPeriodEnd": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-12-31T11:59:59.0000000+00:00"
                    },
                    "pricedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-12-31T11:59:59.0000000+00:00"
                    },
                    "priceBy": {
                        "type": "string",
                        "nullable": true,
                        "example": "Mike Smith"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "example": 500
                    },
                    "deliveredQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 500
                    },
                    "pricedQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 500
                    },
                    "settledQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 100
                    },
                    "futures": {
                        "type": "number",
                        "format": "double",
                        "example": 5
                    },
                    "basis": {
                        "type": "number",
                        "format": "double",
                        "example": 0.01012
                    },
                    "cash": {
                        "type": "number",
                        "format": "double",
                        "example": 5.01012
                    },
                    "priceAdjustments": {
                        "type": "number",
                        "format": "double",
                        "example": 0
                    },
                    "netPrice": {
                        "type": "number",
                        "format": "double",
                        "example": 5.01012
                    },
                    "fobPoint": {
                        "minLength": 1,
                        "type": "string",
                        "example": "EFC Systems"
                    },
                    "comments": {
                        "type": "string",
                        "nullable": true,
                        "example": "30 Days Net"
                    },
                    "otherTerms": {
                        "type": "string",
                        "nullable": true,
                        "example": "Due By 5PM"
                    },
                    "futuresMonth": {
                        "minLength": 1,
                        "type": "string",
                        "example": "2312"
                    },
                    "exchangeCode": {
                        "minLength": 1,
                        "type": "string",
                        "example": "ZCZ23"
                    },
                    "deliveryPeriod": {
                        "minLength": 1,
                        "type": "string",
                        "example": "2023"
                    },
                    "freightRate": {
                        "type": "number",
                        "format": "double",
                        "example": 1.5
                    },
                    "adjustments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractAdjustmentResponse"
                        },
                        "description": "Adjustments related to the Adjustment",
                        "nullable": true
                    },
                    "version": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Row version",
                        "example": "0x00000000009059D6"
                    }
                },
                "additionalProperties": false,
                "description": "Contract Pricing"
            },
            "ContractResponse": {
                "required": [
                    "basis",
                    "cash",
                    "commodityDescription",
                    "commodityId",
                    "contractDate",
                    "contractedQuantity",
                    "contractId",
                    "contractSource",
                    "contractType",
                    "customerId",
                    "customerName",
                    "customerShipTo",
                    "deliveredQuantity",
                    "deliveryLocation",
                    "deliveryPeriod",
                    "exchangeCode",
                    "fobPoint",
                    "freightRate",
                    "futures",
                    "futuresMonth",
                    "locationId",
                    "locationName",
                    "originator",
                    "pk",
                    "pricedQuantity",
                    "quantityUnitOfMeasure",
                    "settledQuantity",
                    "status",
                    "undeliveredQuantity",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "description": "Contract Primary Key",
                        "format": "int64",
                        "example": -99999999987455
                    },
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "107990"
                    },
                    "customerShipTo": {
                        "minLength": 1,
                        "type": "string",
                        "example": "00"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "John Lennon"
                    },
                    "contractId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "102066"
                    },
                    "contractDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-12T12:00:00.0000000+00:00"
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Filled"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    },
                    "locationName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Nashville"
                    },
                    "shipmentPeriodStart": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "shipmentPeriodEnd": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-12-31T11:59:59.0000000+00:00"
                    },
                    "commodityId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "3"
                    },
                    "commodityDescription": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Corn"
                    },
                    "quantityUnitOfMeasure": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Bushels"
                    },
                    "originator": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Mike Lennon"
                    },
                    "contractSource": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Purchase"
                    },
                    "contractType": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Basis Only"
                    },
                    "contractSubType": {
                        "type": "string",
                        "nullable": true,
                        "example": "Min / Max"
                    },
                    "contractedQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 1000
                    },
                    "deliveredQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 1000
                    },
                    "undeliveredQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 0
                    },
                    "pricedQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 500
                    },
                    "settledQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 0
                    },
                    "fobPoint": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Nashville TN"
                    },
                    "deliveryLocation": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Kansas City-ADM"
                    },
                    "deliveryPeriod": {
                        "minLength": 1,
                        "type": "string",
                        "example": "2023"
                    },
                    "futures": {
                        "type": "number",
                        "format": "double",
                        "example": 5
                    },
                    "basis": {
                        "type": "number",
                        "format": "double",
                        "example": 0.01012
                    },
                    "cash": {
                        "type": "number",
                        "format": "double",
                        "example": 5.01012
                    },
                    "comments": {
                        "type": "string",
                        "nullable": true,
                        "example": "30 Days Net"
                    },
                    "otherTerms": {
                        "type": "string",
                        "nullable": true,
                        "example": "By 5PM"
                    },
                    "futuresMonth": {
                        "minLength": 1,
                        "type": "string",
                        "example": "202312"
                    },
                    "exchangeCode": {
                        "minLength": 1,
                        "type": "string",
                        "example": "ZCZ23"
                    },
                    "confirmedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-12-31T11:59:59.0000000+00:00"
                    },
                    "freightRate": {
                        "type": "number",
                        "format": "double",
                        "example": 1.5
                    },
                    "version": {
                        "minLength": 1,
                        "type": "string",
                        "example": "0x00000000009059D6"
                    },
                    "pricings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractPricingResponse"
                        },
                        "description": "Pricings related to the Contract",
                        "nullable": true
                    },
                    "amendments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractAmendmentResponse"
                        },
                        "description": "Amendments related to the Contract",
                        "nullable": true
                    },
                    "defaultAdjustment": {
                        "type": "string",
                        "description": "Default pricing adjustment",
                        "nullable": true,
                        "example": "Storage Charge"
                    }
                },
                "additionalProperties": false,
                "description": "Contract"
            },
            "ContractSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Contract Search"
            },
            "CountEventActiveOnHandResponse": {
                "required": [
                    "ignoreLastAdjustedDate",
                    "inactiveStatusItems",
                    "includeItemsWithNoActivity"
                ],
                "type": "object",
                "properties": {
                    "zeroOnHandWithActivitySince": {
                        "type": "string",
                        "description": "Includes items with zero on hand that have activity since the specified date.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "includeItemsWithNoActivity": {
                        "type": "boolean",
                        "description": "Describes whether to include items with no activity when filtering items."
                    },
                    "ignoreLastAdjustedDate": {
                        "type": "boolean",
                        "description": "Ignores the last adjusted date."
                    },
                    "inactiveStatusItems": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Describes how to handle inactive items\r\nValid Values: Include Inactive Items, Include Only Inactive Items with Quantity On Hand, Do Not Include Inactive Items",
                        "example": "Include Inactive Items"
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "CountEventCategoryResponse": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Category identifier",
                        "example": "D605"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Category name",
                        "example": "Assembly Feeds"
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "CountEventDailyCountsResponse": {
                "type": "object",
                "properties": {
                    "activitySince": {
                        "type": "string",
                        "description": "Only items with activity since this date/time will be included in the list of items for this count event.",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "CountEventItemResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Item identifier",
                        "nullable": true,
                        "example": "10025"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the item",
                        "nullable": true,
                        "example": "Corn"
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "description": "Stocking/selling unit of measure of the item",
                        "nullable": true,
                        "example": "Ton"
                    },
                    "onHandQuantity": {
                        "type": "number",
                        "description": "Quantity of the item on hand",
                        "format": "double",
                        "example": 100
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "CountEventMultiBinResponse": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "snapshot": {
                        "type": "string",
                        "description": "Date/Time a snapshot of the inventory was taken",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Status of the count event.\r\nValid Values:Status of the count event. New, Items Entered - Not Adjusted",
                        "example": "New"
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "CountEventResponse": {
                "required": [
                    "categories",
                    "description",
                    "id",
                    "includeType",
                    "locationId",
                    "multiBin"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Count Event Identifier"
                    },
                    "description": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Count event description."
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location identifier of inventory site where the count event is taking place.",
                        "example": "1"
                    },
                    "includeType": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Controls the items that are included in the count event and determines if the \"ActiveOnHand\" or \"DailyCounts\" property is populated.\r\nValid values: Include All Active Items With On Hand Plus, Daily Counts Only Items With Activity.",
                        "example": "Include All Active Items With On Hand Plus"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CountEventCategoryResponse"
                        },
                        "description": "Categories associated with the count event"
                    },
                    "activeOnHand": {
                        "$ref": "#/components/schemas/CountEventActiveOnHandResponse"
                    },
                    "dailyCounts": {
                        "$ref": "#/components/schemas/CountEventDailyCountsResponse"
                    },
                    "multiBin": {
                        "$ref": "#/components/schemas/CountEventMultiBinResponse"
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "CreateContractRequest": {
                "required": [
                    "basis",
                    "cash",
                    "commodityId",
                    "contractDate",
                    "contractedQuantity",
                    "contractSource",
                    "contractType",
                    "customerId",
                    "customerShipTo",
                    "deliveryLocation",
                    "futures",
                    "futuresMonth",
                    "locationId",
                    "shipmentPeriodEnd",
                    "shipmentPeriodStart"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "100080"
                    },
                    "customerShipTo": {
                        "minLength": 1,
                        "type": "string",
                        "example": "00"
                    },
                    "contractDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-24T12:00:00.0000000+00:00"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    },
                    "shipmentPeriodStart": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "shipmentPeriodEnd": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-31T12:00:00.0000000+00:00"
                    },
                    "commodityId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "3"
                    },
                    "contractSource": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Purchase"
                    },
                    "contractType": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Fixed Price"
                    },
                    "contractSubType": {
                        "type": "string",
                        "nullable": true,
                        "example": "Min / Max"
                    },
                    "contractedQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 1000
                    },
                    "deliveryLocation": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1000"
                    },
                    "futures": {
                        "type": "number",
                        "format": "double",
                        "example": 5
                    },
                    "basis": {
                        "type": "number",
                        "format": "double",
                        "example": 0.01
                    },
                    "cash": {
                        "type": "number",
                        "format": "double",
                        "example": 5.01
                    },
                    "comments": {
                        "type": "string",
                        "nullable": true,
                        "example": "Corn Contract"
                    },
                    "otherTerms": {
                        "type": "string",
                        "nullable": true,
                        "example": "30 days net"
                    },
                    "confirmedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "futuresMonth": {
                        "minLength": 1,
                        "type": "string",
                        "example": "2312"
                    },
                    "optionPremium": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.01
                    },
                    "rollFee": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.01
                    },
                    "futuresOnlyFee": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.01
                    },
                    "serviceFee": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.01
                    },
                    "structureFee": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.01
                    },
                    "freightRate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 1.5
                    }
                },
                "additionalProperties": false,
                "description": "Create Contract"
            },
            "CreateFuturesRequest": {
                "required": [
                    "brokerageAccount",
                    "brokerId",
                    "commodityId",
                    "dateFilled",
                    "exchange",
                    "filledQuantity",
                    "futuresMonth",
                    "futuresPrice",
                    "locationId"
                ],
                "type": "object",
                "properties": {
                    "orderNumber": {
                        "type": "string",
                        "nullable": true,
                        "example": "1234"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    },
                    "commodityId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "3"
                    },
                    "dateFilled": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-13T12:00:00.0000000+00:00"
                    },
                    "futuresMonth": {
                        "minLength": 1,
                        "type": "string",
                        "example": "2312"
                    },
                    "filledQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 10
                    },
                    "futuresPrice": {
                        "type": "number",
                        "format": "double",
                        "example": 3
                    },
                    "brokerId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1000"
                    },
                    "brokerageAccount": {
                        "minLength": 1,
                        "type": "string",
                        "example": ""
                    },
                    "exchange": {
                        "minLength": 1,
                        "type": "string",
                        "example": "CBOT"
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true,
                        "example": "A comment."
                    }
                },
                "additionalProperties": false,
                "description": "Create Futures"
            },
            "CreateGrowerPlanningItemRequest": {
                "required": [
                    "bookedQuantity",
                    "isPricedAtSale",
                    "itemId",
                    "operatorId"
                ],
                "type": "object",
                "properties": {
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Item ID is the identifier of the item",
                        "example": "2140020"
                    },
                    "vendorId": {
                        "type": "string",
                        "description": "Vendor Id",
                        "nullable": true,
                        "example": "1010"
                    },
                    "operatorId": {
                        "type": "integer",
                        "description": "Operator's identifier",
                        "format": "int32",
                        "example": 1001
                    },
                    "bookedQuantity": {
                        "type": "number",
                        "description": "Quantity is the amount of the item that is associated with the item",
                        "format": "double",
                        "example": 43124.125
                    },
                    "price": {
                        "type": "number",
                        "description": "The price to use on orders, direct orders, and fertilizer sales. Only valid if the booking is not flagged to be priced at sale",
                        "format": "double",
                        "nullable": true,
                        "example": 198.12
                    },
                    "isPricedAtSale": {
                        "type": "boolean",
                        "description": "Priced-at-sale bookings do not have a price established",
                        "example": true
                    }
                },
                "additionalProperties": false,
                "description": "Create Grower Planning Item Request"
            },
            "CreateGrowerPlanningRequest": {
                "required": [
                    "expirationDate",
                    "items",
                    "locations"
                ],
                "type": "object",
                "properties": {
                    "expirationDate": {
                        "type": "string",
                        "description": "When the booking expires",
                        "format": "date-time",
                        "example": "2024-05-12T11:59:59.0000000+00:00"
                    },
                    "items": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateGrowerPlanningItemRequest"
                        },
                        "description": "The items associated with the grower plannings"
                    },
                    "locations": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GrowerPlanningLocationRequest"
                        },
                        "description": "The locations associated with the grower plannings"
                    }
                },
                "additionalProperties": false,
                "description": "Grower Planning Request"
            },
            "CreatePrepaidPurchaseSummaryRequest": {
                "type": "object",
                "properties": {
                    "purchaseSummaryId": {
                        "type": "string",
                        "description": "Prepaid purchase summary identifier",
                        "nullable": true,
                        "example": "ABC123"
                    },
                    "purchaseSummaryAmount": {
                        "type": "number",
                        "description": "The amount that the prepaid can apply to the purchase summary",
                        "format": "double",
                        "example": 50
                    }
                },
                "additionalProperties": false,
                "description": "Create Purchase Summary"
            },
            "CreatePrepaidRequest": {
                "required": [
                    "customerId"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid's customer identifier",
                        "example": "ABC123"
                    },
                    "agreementDate": {
                        "type": "string",
                        "description": "The date the prepaid contract was agreed upon",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "isAgreementSigned": {
                        "type": "boolean",
                        "description": "True=The prepaid agreement has been signed, False=The prepaid agreement has not been signed"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "The date the prepaid expires and can no longer be applied",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Custom comment for the prepaid",
                        "nullable": true,
                        "example": "This is a comment"
                    },
                    "contact": {
                        "type": "string",
                        "description": "Prepaid contact name",
                        "nullable": true,
                        "example": "Johan Johannson"
                    },
                    "primaryLocationId": {
                        "type": "string",
                        "description": "Prepaid's primary location identifier",
                        "nullable": true,
                        "example": "ABC123"
                    },
                    "usePrepaidPrices": {
                        "type": "boolean",
                        "description": "Use prepaid prices: True=Yes, prices are guaranteed; False=No, the quantity will be based on the total amount and market price",
                        "example": true
                    },
                    "limitSalesQty": {
                        "type": "boolean",
                        "description": "Limit sales to quantity committed commitments: True=Yes, limited; False=No, the quantity will be unlimited",
                        "example": true
                    },
                    "limitUseToPrepaidItems": {
                        "type": "boolean",
                        "description": "Limit items to those listed on the prepaids: True=Yes, limited; False=No, any item can be applied to the prepaid",
                        "example": true
                    },
                    "forFuelSales": {
                        "type": "boolean",
                        "description": "True=Prepaid can be used for fuel sales, False=No, prepaids cannot be used for fuel sales",
                        "example": true
                    },
                    "forFertilizerOnly": {
                        "type": "boolean",
                        "description": "This prepaid is for fertilizer use: True=Yes, limited to fertilizer; False=No",
                        "example": true
                    },
                    "sponsored": {
                        "type": "boolean",
                        "description": "Prepaid is sponsored: True/False",
                        "example": true
                    },
                    "usageRate": {
                        "type": "number",
                        "description": "Prepaid usage rate",
                        "format": "double",
                        "nullable": true,
                        "example": 100
                    },
                    "moneyOnlyAmount": {
                        "type": "number",
                        "description": "Amount on the prepaid that is not tied to any particular item, etc",
                        "format": "double",
                        "example": 50
                    },
                    "signature": {
                        "type": "string",
                        "description": "Digital signature for prepaid agreement",
                        "format": "byte",
                        "nullable": true
                    },
                    "operator": {
                        "type": "string",
                        "description": "Prepaid operator identifier",
                        "nullable": true,
                        "example": "123"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreatePrepaidTransactionRequest"
                        },
                        "description": "List of Prepaid items",
                        "nullable": true
                    },
                    "prepaidEligiblePurchaseSummaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreatePrepaidPurchaseSummaryRequest"
                        },
                        "description": "List of prepaid eligible purchase summaries",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Create Prepaid Request"
            },
            "CreatePrepaidTransactionRequest": {
                "required": [
                    "itemId",
                    "limitSalesQty",
                    "limitUseToPrepaidItems",
                    "prepaidQuantity",
                    "unitPrice",
                    "usePrepaidPrices"
                ],
                "type": "object",
                "properties": {
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid item identifier",
                        "example": "ABC123"
                    },
                    "prepaidQuantity": {
                        "type": "number",
                        "description": "Quantity allocated for item",
                        "format": "double",
                        "example": 50
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "Prepaid unit price for item",
                        "format": "double",
                        "example": 50
                    },
                    "usageRate": {
                        "type": "number",
                        "description": "Usage rate for item",
                        "format": "double",
                        "example": 50
                    },
                    "usePrepaidPrices": {
                        "type": "boolean",
                        "description": "Use prepaid prices: True=Yes, prices are guaranteed; False=No, the quantity will be based on the total amount and market price",
                        "example": true
                    },
                    "limitSalesQty": {
                        "type": "boolean",
                        "description": "Limit sales to quantity committed commitments: True=Yes, limited; False=No, the quantity will be unlimited",
                        "example": true
                    },
                    "limitUseToPrepaidItems": {
                        "type": "boolean",
                        "description": "Limit items to those listed on the prepaids: True=Yes, limited; False=No, any item can be applied to the prepaid",
                        "example": true
                    },
                    "programType": {
                        "type": "string",
                        "description": "Prepaid program type",
                        "nullable": true,
                        "example": "ABC123"
                    }
                },
                "additionalProperties": false,
                "description": "Create Prepaid Transaction"
            },
            "CustomerAddressRequest": {
                "type": "object",
                "properties": {
                    "name1": {
                        "type": "string",
                        "description": "Customer's primary name",
                        "nullable": true,
                        "example": "John Doe"
                    },
                    "name2": {
                        "type": "string",
                        "description": "Customer's secondary name",
                        "nullable": true,
                        "example": "John Doe"
                    },
                    "address1": {
                        "type": "string",
                        "description": "Customer's street address - line 1",
                        "nullable": true,
                        "example": "123 First Street"
                    },
                    "address2": {
                        "type": "string",
                        "description": "Customer's street address - line 2",
                        "nullable": true,
                        "example": "STE 101"
                    },
                    "city": {
                        "type": "string",
                        "description": "Customer's city",
                        "nullable": true,
                        "example": "Nashville"
                    },
                    "state": {
                        "type": "string",
                        "description": "Customer's state",
                        "nullable": true,
                        "example": "TN"
                    },
                    "zip": {
                        "type": "string",
                        "description": "Customer's zip code",
                        "nullable": true,
                        "example": "12345"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Customer's phone number",
                        "nullable": true,
                        "example": "5555555555"
                    }
                },
                "additionalProperties": false,
                "description": "Customer Address"
            },
            "CustomerBillingAddressRequest": {
                "required": [
                    "address1",
                    "city",
                    "country",
                    "state",
                    "zip"
                ],
                "type": "object",
                "properties": {
                    "address1": {
                        "minLength": 1,
                        "type": "string",
                        "example": " 123 John Doe Dr."
                    },
                    "address2": {
                        "type": "string",
                        "nullable": true,
                        "example": "PO Box 23"
                    },
                    "city": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Franklin"
                    },
                    "state": {
                        "minLength": 1,
                        "type": "string",
                        "description": "State Abbreviation",
                        "example": "TN"
                    },
                    "zip": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Five or nine number zip code.",
                        "example": "37027"
                    },
                    "country": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Country"
                    },
                    "phone1": {
                        "type": "string",
                        "description": "Format XXX-XXX-XXXX",
                        "nullable": true
                    },
                    "phone2": {
                        "type": "string",
                        "description": "Format XXX-XXX-XXXX",
                        "nullable": true
                    },
                    "cell": {
                        "type": "string",
                        "description": "Format XXX-XXX-XXXX",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "example": "JohnDoe@johndoe.com"
                    }
                },
                "additionalProperties": false,
                "description": "Billing Address"
            },
            "CustomerBillingAddressResponse": {
                "required": [
                    "address1",
                    "city",
                    "country",
                    "state",
                    "zip"
                ],
                "type": "object",
                "properties": {
                    "address1": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's street address - line 1",
                        "example": " 123 John Doe Dr."
                    },
                    "address2": {
                        "type": "string",
                        "description": "Customer's street address - line 2",
                        "nullable": true,
                        "example": "PO Box 23"
                    },
                    "city": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's city",
                        "example": "Franklin"
                    },
                    "state": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's state abbreviation",
                        "example": "TN"
                    },
                    "zip": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's five or nine number zip code",
                        "example": "37027"
                    },
                    "country": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's country"
                    },
                    "phone1": {
                        "type": "string",
                        "description": "Customer's primary phone number: Format XXX-XXX-XXXX",
                        "nullable": true,
                        "example": "615-890-2237"
                    },
                    "phone2": {
                        "type": "string",
                        "description": "Customer's secondary phone number: Format XXX-XXX-XXXX",
                        "nullable": true,
                        "example": "615-890-2237"
                    },
                    "cell": {
                        "type": "string",
                        "description": "Customer's cell phone number: Format XXX-XXX-XXXX",
                        "nullable": true,
                        "example": "615-890-2237"
                    },
                    "email": {
                        "type": "string",
                        "description": "Customer's email address",
                        "nullable": true,
                        "example": "JohnDoe@johndoe.com"
                    }
                },
                "additionalProperties": false,
                "description": "Billing Address"
            },
            "CustomerBuyerResponse": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's name",
                        "example": "John Doe"
                    },
                    "cell": {
                        "type": "string",
                        "description": "Customer's cell phone number: Format XXX-XXX-XXXX",
                        "nullable": true,
                        "example": "615-890-2237"
                    }
                },
                "additionalProperties": false,
                "description": "Buyer"
            },
            "CustomerCreateRequest": {
                "required": [
                    "billingAddress",
                    "name1"
                ],
                "type": "object",
                "properties": {
                    "name1": {
                        "minLength": 1,
                        "type": "string",
                        "example": "John Doe"
                    },
                    "name2": {
                        "type": "string",
                        "description": "Alternate name",
                        "nullable": true,
                        "example": "John Doe"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/CustomerBillingAddressRequest"
                    },
                    "responsibleLocation": {
                        "type": "string",
                        "description": "This maybe required based on your merchant configuration",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Customer"
            },
            "CustomerCreditResponse": {
                "type": "object",
                "properties": {
                    "available": {
                        "type": "number",
                        "description": "Customer's available credit",
                        "format": "double",
                        "example": 468
                    },
                    "balance": {
                        "type": "number",
                        "description": "Customer's current balance",
                        "format": "double",
                        "example": 1657
                    },
                    "limit": {
                        "type": "number",
                        "description": "Customer's credit limit",
                        "format": "double",
                        "example": 2000
                    }
                },
                "additionalProperties": false,
                "description": "Credit"
            },
            "CustomerFieldRepresentativeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Field representative's identifier",
                        "nullable": true,
                        "example": "1ABC"
                    },
                    "name": {
                        "type": "string",
                        "description": "Field representative's name",
                        "nullable": true,
                        "example": "John Smith"
                    },
                    "type": {
                        "type": "string",
                        "description": "Field representative's type",
                        "nullable": true,
                        "example": "Bulk Feed"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Field representative's start date",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-12-31T11:59:59.0000000+00:00"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Field representative's end date",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-12-31T11:59:59.0000000+00:00"
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates if this is the primary field rep for the customer.",
                        "example": "1"
                    }
                },
                "additionalProperties": false,
                "description": "Field Representative"
            },
            "CustomerMatchRequest": {
                "type": "object",
                "properties": {
                    "merchantId": {
                        "type": "string",
                        "description": "The customer's ID in Merchant",
                        "nullable": true,
                        "example": "188280"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "The customer's phone number",
                        "nullable": true,
                        "example": "5554443333"
                    },
                    "name": {
                        "type": "string",
                        "description": "The customer's name",
                        "nullable": true,
                        "example": "John Doe, Sr."
                    },
                    "emailAddress": {
                        "type": "string",
                        "description": "The customer's email address",
                        "nullable": true,
                        "example": "johndoe1989@example.com"
                    }
                },
                "additionalProperties": false,
                "description": "Customer Match Request"
            },
            "CustomerPaymentAchRequest": {
                "required": [
                    "amount",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "ACH payment reference number",
                        "example": "123456"
                    },
                    "amount": {
                        "type": "number",
                        "description": "ACH payment amount",
                        "format": "double",
                        "example": 1234.56
                    }
                },
                "additionalProperties": false,
                "description": "Customer Payment Ach"
            },
            "CustomerPaymentCreditCardRequest": {
                "required": [
                    "amount",
                    "approvalNumber",
                    "brand",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "brand": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Valid types: AMEX, Visa, MasterCard, or Discover",
                        "example": "Visa"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Payment reference number",
                        "example": "9999"
                    },
                    "approvalNumber": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Payment approval number",
                        "example": "123456"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Payment amount",
                        "format": "double",
                        "example": 1234.56
                    }
                },
                "additionalProperties": false,
                "description": "Customer Payment Credit Card"
            },
            "CustomerPaymentRequest": {
                "required": [
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Payment amount",
                        "format": "double",
                        "example": 1234.56
                    },
                    "creditCards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerPaymentCreditCardRequest"
                        },
                        "description": "An array of credit card payments",
                        "nullable": true
                    },
                    "achs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerPaymentAchRequest"
                        },
                        "description": "An array of ach payments",
                        "nullable": true
                    },
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerPaymentTransactionRequest"
                        },
                        "description": "An array of transactions",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Customer Payment"
            },
            "CustomerPaymentTransactionIdentifierRequest": {
                "required": [
                    "source",
                    "unique"
                ],
                "type": "object",
                "properties": {
                    "source": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Source identifier of transaction",
                        "example": "Transactions"
                    },
                    "unique": {
                        "type": "integer",
                        "description": "Unique auto-generated number identifier for transaction",
                        "format": "int64",
                        "example": -99945687451234
                    }
                },
                "additionalProperties": false,
                "description": "Customer Payment Transaction Identifier"
            },
            "CustomerPaymentTransactionRequest": {
                "required": [
                    "amount",
                    "transactionId"
                ],
                "type": "object",
                "properties": {
                    "transactionId": {
                        "$ref": "#/components/schemas/CustomerPaymentTransactionIdentifierRequest"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Payment transaction amount",
                        "format": "double",
                        "example": 1234.56
                    }
                },
                "additionalProperties": false,
                "description": "Customer Payment Transaction"
            },
            "CustomerPricing": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Valid customer pricing types: Booking, Prepaid or Regular",
                        "nullable": true,
                        "example": "Booking"
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "The customer's unit price for the associated type",
                        "format": "double",
                        "example": 23747.18
                    },
                    "precision": {
                        "type": "integer",
                        "description": "The number of decimal places the price has (2-6)",
                        "format": "int32",
                        "example": 2
                    }
                },
                "additionalProperties": false,
                "description": "Customer Pricing"
            },
            "CustomerResponse": {
                "required": [
                    "billingAddress",
                    "id",
                    "name1",
                    "shippingAddresses"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's identifier",
                        "example": "188280"
                    },
                    "externalId": {
                        "type": "string",
                        "description": "Customer's external identifier",
                        "nullable": true,
                        "example": "134670"
                    },
                    "name1": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's name",
                        "example": "David Webb"
                    },
                    "name2": {
                        "type": "string",
                        "description": "Customer's alternate name",
                        "nullable": true,
                        "example": "Dave Webb"
                    },
                    "status": {
                        "type": "string",
                        "description": "Customer Status",
                        "nullable": true,
                        "example": "Active"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/CustomerBillingAddressResponse"
                    },
                    "credit": {
                        "$ref": "#/components/schemas/CustomerCreditResponse"
                    },
                    "creditManager": {
                        "type": "string",
                        "description": "Customer's credit manager",
                        "nullable": true,
                        "example": "1234"
                    },
                    "fieldRepresentatives": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerFieldRepresentativeResponse"
                        },
                        "description": "The customer's field representatives",
                        "nullable": true
                    },
                    "responsibleLocation": {
                        "type": "string",
                        "description": "Customer's responsible location",
                        "nullable": true,
                        "example": "11"
                    },
                    "managementRegion": {
                        "type": "string",
                        "description": "Customer's management region",
                        "nullable": true,
                        "example": "1234"
                    },
                    "shippingAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerShippingAddressResponse"
                        },
                        "description": "Customer's shipping addresses"
                    },
                    "buyers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerBuyerResponse"
                        },
                        "description": "Customer's buyers",
                        "nullable": true
                    },
                    "optOutMarketingEmails": {
                        "type": "boolean",
                        "description": "Opt out of marketing emails"
                    }
                },
                "additionalProperties": false,
                "description": "Customer"
            },
            "CustomerSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "status": {
                        "type": "string",
                        "description": "Customer status used to filter the search request",
                        "nullable": true,
                        "example": "Active"
                    }
                },
                "additionalProperties": false,
                "description": "Customer Search Request"
            },
            "CustomerShippingAddressResponse": {
                "required": [
                    "address1",
                    "city",
                    "id",
                    "name1",
                    "state",
                    "zip"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's identifier",
                        "example": "188280"
                    },
                    "name1": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's name",
                        "example": "David Webb"
                    },
                    "name2": {
                        "type": "string",
                        "description": "Customer's alternate name",
                        "nullable": true,
                        "example": "David Webb"
                    },
                    "address1": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's address - line 1",
                        "example": " 123 John Doe Dr."
                    },
                    "address2": {
                        "type": "string",
                        "description": "Customer's address - line 2",
                        "nullable": true,
                        "example": "PO Box 23"
                    },
                    "city": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's city",
                        "example": "Franklin"
                    },
                    "state": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's state abbreviation",
                        "example": "TN"
                    },
                    "zip": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's five or nine number zip code",
                        "example": "37027"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Customer's primary phone number: Format XXX-XXX-XXXX",
                        "nullable": true,
                        "example": "615-890-2237"
                    },
                    "fieldRepresentatives": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerFieldRepresentativeResponse"
                        },
                        "description": "Field Representatives",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Shipping Address"
            },
            "CustomerStatementResponse": {
                "required": [
                    "customerId",
                    "customerName",
                    "pdf",
                    "statementPeriod",
                    "totalDue"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's identifier",
                        "example": "188280"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's name",
                        "example": "David Webb"
                    },
                    "statementPeriod": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The calendar month and year of the statement",
                        "example": "May 2022"
                    },
                    "totalDue": {
                        "type": "number",
                        "description": "Customer's total due amount",
                        "format": "double",
                        "example": 25789.12
                    },
                    "pdf": {
                        "type": "string",
                        "description": "Byte array of the PDF",
                        "format": "byte"
                    }
                },
                "additionalProperties": false,
                "description": "Customer Statement"
            },
            "CustomerStatementSummaryResponse": {
                "required": [
                    "statementPeriod",
                    "statementPeriodId",
                    "totalDue"
                ],
                "type": "object",
                "properties": {
                    "statementPeriod": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Statement Period is formatted as month name + year and is the calendar month and year representation of the statement period",
                        "example": "May 2022"
                    },
                    "statementPeriodId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Statement Period ID is an identifier for the period of the statement. The ID is not intended for display and correlates to the fiscal period of the statement in YYYYMM format. \r\n            The calendar month and year is included in the response body of most customer statement endpoints as statementPeriod and is formatted as month name + year.",
                        "example": "202205"
                    },
                    "totalDue": {
                        "type": "number",
                        "description": "Customer's total due amount",
                        "format": "double",
                        "example": 200.2
                    }
                },
                "additionalProperties": false,
                "description": "Customer Statement Summary"
            },
            "CustomerStatementWithSummaryResponse": {
                "required": [
                    "pdf",
                    "statementPeriod",
                    "statementPeriodId",
                    "totalDue"
                ],
                "type": "object",
                "properties": {
                    "statementPeriod": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Statement Period is formatted as month name + year and is the calendar month and year representation of the statement period",
                        "example": "May 2022"
                    },
                    "statementPeriodId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Statement Period ID is an identifier for the period of the statement. The ID is not intended for display and correlates to the fiscal period of the statement in YYYYMM format. \r\n            The calendar month and year is included in the response body of most customer statement endpoints as statementPeriod and is formatted as month name + year.",
                        "example": "202205"
                    },
                    "totalDue": {
                        "type": "number",
                        "description": "Customer's total due amount",
                        "format": "double",
                        "example": 200.2
                    },
                    "pdf": {
                        "type": "string",
                        "description": "Byte array of the PDF",
                        "format": "byte"
                    }
                },
                "additionalProperties": false,
                "description": "Customer Statement With Summary"
            },
            "DraftOrderCreateRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Order Type: Sale, Return",
                        "nullable": true,
                        "example": "Sale"
                    },
                    "customerId": {
                        "type": "string",
                        "description": "Customer identifier",
                        "nullable": true,
                        "example": "00"
                    },
                    "customerShipToId": {
                        "type": "string",
                        "description": "Customer Ship To identifier",
                        "nullable": true,
                        "example": "00"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "Location identifier",
                        "nullable": true,
                        "example": "1"
                    },
                    "lineItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderCreateLineItemRequest"
                        },
                        "description": "Draft Order's line items",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Order create object"
            },
            "DraftOrderLineItemResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Order line types: Item, Comment",
                        "nullable": true,
                        "example": "Item"
                    },
                    "id": {
                        "type": "string",
                        "description": "Item identifier, leave blank for comments",
                        "nullable": true,
                        "example": "80511"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item description",
                        "nullable": true,
                        "example": "Ky Fescue"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Item quantity",
                        "format": "double",
                        "example": 25
                    },
                    "unitOfMeasurement": {
                        "type": "string",
                        "description": "Item's unit of measure",
                        "nullable": true,
                        "example": "Bags"
                    },
                    "extendedWeight": {
                        "type": "number",
                        "description": "Item's extended weight",
                        "format": "double",
                        "example": 5000
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "Item's unit price",
                        "format": "double",
                        "example": 566
                    },
                    "extendedPrice": {
                        "type": "number",
                        "description": "Item's extended price",
                        "format": "double",
                        "example": 14150
                    }
                },
                "additionalProperties": false,
                "description": "Draft Order Line Item Response"
            },
            "DraftOrderResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Order Type: Sale, Return",
                        "nullable": true,
                        "example": "Sale"
                    },
                    "customerId": {
                        "type": "string",
                        "description": "Customer's identifier",
                        "nullable": true,
                        "example": "188280"
                    },
                    "customerName": {
                        "type": "string",
                        "description": "Customer's name",
                        "nullable": true,
                        "example": "David Webb"
                    },
                    "customerShipToId": {
                        "type": "string",
                        "description": "Customer's ship to identifier",
                        "nullable": true,
                        "example": "00"
                    },
                    "customerShipToName": {
                        "type": "string",
                        "description": "Customer's ship to name",
                        "nullable": true,
                        "example": "David Webb"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The location's identifier",
                        "nullable": true,
                        "example": "1"
                    },
                    "locationName": {
                        "type": "string",
                        "description": "Location's name",
                        "nullable": true,
                        "example": "Nashville"
                    },
                    "taxAmount": {
                        "type": "number",
                        "description": "Draft Order's tax amount",
                        "format": "double",
                        "example": 65
                    },
                    "totalAmount": {
                        "type": "number",
                        "description": "Draft Order's total amount",
                        "format": "double",
                        "example": 65
                    },
                    "lineItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DraftOrderLineItemResponse"
                        },
                        "description": "Draft Order's line items",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Draft Order Response"
            },
            "FieldRepresentativeCustomerResponse": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "example": "188280"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "example": "John Doe"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start Date",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End Date",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Customer"
            },
            "FieldRepresentativeLocationResponse": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Brentwood TN"
                    }
                },
                "additionalProperties": false,
                "description": "Location"
            },
            "FieldRepresentativeResponse": {
                "required": [
                    "id",
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1081"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "example": "John Doe"
                    },
                    "type": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Agronomy"
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true,
                        "example": "458-458-4589"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldRepresentativeLocationResponse"
                        },
                        "description": "List of location the field representative is assigned to.",
                        "nullable": true
                    },
                    "customers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldRepresentativeCustomerResponse"
                        },
                        "description": "List of customers the field representative is assigned to.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Field Representative"
            },
            "FieldResponse": {
                "required": [
                    "customerId",
                    "customerName",
                    "id",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer ID"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer Name"
                    },
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Field ID"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description",
                        "nullable": true
                    },
                    "acres": {
                        "type": "number",
                        "description": "Size of field in acres if specified",
                        "format": "double",
                        "nullable": true
                    },
                    "location": {
                        "type": "string",
                        "description": "Location",
                        "nullable": true
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Active, Inactive, Delete"
                    }
                },
                "additionalProperties": false,
                "description": "Field"
            },
            "GrowerPlanningItemResponse": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "bookingId": {
                        "type": "string",
                        "description": "Booking ID",
                        "nullable": true,
                        "example": "12423"
                    },
                    "itemId": {
                        "type": "string",
                        "description": "Item ID",
                        "nullable": true,
                        "example": "Fert19Z"
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Valid values: Open, Closed",
                        "example": "Open"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/GrowerPlanningVendorResponse"
                    },
                    "operatorId": {
                        "type": "integer",
                        "description": "Operator Id",
                        "format": "int32",
                        "example": 1000
                    },
                    "operatorName": {
                        "type": "string",
                        "description": "Operator name",
                        "nullable": true,
                        "example": "Jeff Henderson"
                    },
                    "bookedQuantity": {
                        "type": "number",
                        "description": "Booked quantity",
                        "format": "double",
                        "example": 100
                    },
                    "price": {
                        "type": "number",
                        "description": "Price",
                        "format": "double",
                        "example": 100
                    },
                    "isPricedAtSale": {
                        "type": "boolean",
                        "description": "Priced at sale",
                        "example": true
                    },
                    "remainingQuantity": {
                        "type": "number",
                        "description": "Remaining quantity",
                        "format": "double",
                        "example": 50
                    },
                    "version": {
                        "type": "string",
                        "description": "Row version",
                        "nullable": true,
                        "example": "0x000000000014BE08"
                    }
                },
                "additionalProperties": false,
                "description": "Grower Planning Item Response"
            },
            "GrowerPlanningLocationRequest": {
                "required": [
                    "locationId",
                    "orderingSite"
                ],
                "type": "object",
                "properties": {
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location ID is the identifier of the location",
                        "example": "Nash"
                    },
                    "orderingSite": {
                        "type": "boolean",
                        "description": "The primary ordering site from the grower planning",
                        "example": true
                    }
                },
                "additionalProperties": false,
                "description": "Grower Planning Location Request"
            },
            "GrowerPlanningLocationResponse": {
                "type": "object",
                "properties": {
                    "locationId": {
                        "type": "string",
                        "description": "Order location",
                        "nullable": true,
                        "example": "Warehouse1"
                    },
                    "orderingSite": {
                        "type": "boolean",
                        "description": "Location can originate orders",
                        "example": true
                    }
                },
                "additionalProperties": false,
                "description": "Grower Planning Location Response"
            },
            "GrowerPlanningResponse": {
                "type": "object",
                "properties": {
                    "growerPlanningId": {
                        "type": "string",
                        "description": "Grower Planning ID",
                        "nullable": true,
                        "example": "April 2025"
                    },
                    "customerId": {
                        "type": "string",
                        "description": "Customer ID is the identifier of the customer that is associated with the booking",
                        "nullable": true,
                        "example": "188280"
                    },
                    "customerName": {
                        "type": "string",
                        "description": "Customer name",
                        "nullable": true,
                        "example": "David Webb"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "description": "Date when the booking becomes effective",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-04-13T12:00:00.0000000+00:00"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "Date when the booking expires",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-04-13T11:59:59.0000000+00:00"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GrowerPlanningItemResponse"
                        },
                        "description": "The items associated with the booking",
                        "nullable": true
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GrowerPlanningLocationResponse"
                        },
                        "description": "The booking sites associated with the Grower Planning",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Grower Planning Response"
            },
            "GrowerPlanningSearchRequest": {
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "string",
                        "description": "The customer's ID in Merchant",
                        "nullable": true,
                        "example": "188280"
                    },
                    "effectiveDateStart": {
                        "type": "string",
                        "description": "When the booking becomes effective",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-04-13T12:00:00.0000000+00:00"
                    },
                    "effectiveDateEnd": {
                        "type": "string",
                        "description": "When the booking expires",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-04-13T12:00:00.0000000+00:00"
                    },
                    "expiredDateBegin": {
                        "type": "string",
                        "description": "When the booking expired date begins",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-04-13T12:00:00.0000000+00:00"
                    },
                    "expiredDateEnd": {
                        "type": "string",
                        "description": "When the booking expired date ends",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-04-13T12:00:00.0000000+00:00"
                    },
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC determined by the greatest date on the associated bookings for a grower planning",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T04:21:34.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Grower Planning Search Request"
            },
            "GrowerPlanningVendorResponse": {
                "type": "object",
                "properties": {
                    "vendorId": {
                        "type": "string",
                        "description": "Vendor Id",
                        "nullable": true,
                        "example": "1010"
                    },
                    "vendorName": {
                        "type": "string",
                        "description": "Vendor name",
                        "nullable": true,
                        "example": "Bob Supplies"
                    }
                },
                "additionalProperties": false,
                "description": "Vendor"
            },
            "InventoryTransactionSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC that items have been changed since",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "transactionStartDateUtc": {
                        "type": "string",
                        "description": "Transaction Start Date UTC",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "transactionEndDateUtc": {
                        "type": "string",
                        "description": "Transaction End Date UTC",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "transactionTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Transaction Types",
                        "nullable": true,
                        "example": [
                            "Grain",
                            "PurchaseOrder",
                            "SiteTransfer",
                            "Sales",
                            "ManufacturingAndFeed",
                            "InventoryAdjustments"
                        ]
                    },
                    "sites": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of specific site identifiers to filter the search request",
                        "nullable": true,
                        "example": [
                            "456",
                            "159",
                            "123"
                        ]
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of specific item identifiers to filter the search request",
                        "nullable": true,
                        "example": [
                            "ABC",
                            "DEF",
                            "123"
                        ]
                    },
                    "vendors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of specific vendor identifiers to filter the search request",
                        "nullable": true,
                        "example": [
                            "ABC",
                            "DEF",
                            "123"
                        ]
                    }
                },
                "additionalProperties": false,
                "description": "Transaction Search Request"
            },
            "InventoryTransferLotRequest": {
                "type": "object",
                "properties": {
                    "lotId": {
                        "type": "string",
                        "description": "The unique identifier of the lot.",
                        "nullable": true,
                        "example": "L001"
                    },
                    "lotDescription": {
                        "type": "string",
                        "description": "The description of the lot.",
                        "nullable": true,
                        "example": "Batch 1"
                    },
                    "itemId": {
                        "type": "string",
                        "description": "The unique identifier of the associated product.",
                        "nullable": true,
                        "example": "ABC123"
                    },
                    "itemDescription": {
                        "type": "string",
                        "description": "The description of the associated product.",
                        "nullable": true,
                        "example": "Widget A"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "The quantity of items in the lot.",
                        "format": "double",
                        "example": 100
                    },
                    "testedDate": {
                        "type": "string",
                        "description": "The date when the lot was tested.",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2024-04-30T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a lot in an inventory transfer."
            },
            "InventoryTransferProductRequest": {
                "type": "object",
                "properties": {
                    "productSequence": {
                        "type": "number",
                        "description": "Product Sequence",
                        "format": "double",
                        "example": 123
                    },
                    "itemId": {
                        "type": "string",
                        "description": "The unique identifier of the product.",
                        "nullable": true,
                        "example": "ABC123"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "The quantity of the product being transferred.",
                        "format": "double",
                        "example": 10
                    },
                    "unitCost": {
                        "type": "number",
                        "description": "The unit cost of the product.",
                        "format": "double",
                        "example": 25
                    },
                    "unitRevenue": {
                        "type": "number",
                        "description": "The unit revenue of the product.",
                        "format": "double",
                        "example": 50
                    },
                    "lots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryTransferLotRequest"
                        },
                        "description": "The list of lots associated with the product.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a product in an inventory transfer."
            },
            "InventoryTransferRequest": {
                "type": "object",
                "properties": {
                    "transferSite": {
                        "type": "string",
                        "description": "The site where the transfer site is being sent from.",
                        "nullable": true,
                        "example": "2"
                    },
                    "dateNeeded": {
                        "type": "string",
                        "description": "The date when the transfer is needed.",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2024-05-10T12:00:00.0000000+00:00"
                    },
                    "receivingSite": {
                        "type": "string",
                        "description": "The site where the site transfer is received.",
                        "nullable": true,
                        "example": "1"
                    },
                    "receivingContact": {
                        "type": "string",
                        "description": "The contact person at the receiving site.",
                        "nullable": true,
                        "example": "John Doe"
                    },
                    "receivedBy": {
                        "type": "integer",
                        "description": "The person doing the receiving",
                        "format": "int32",
                        "nullable": true,
                        "example": 123
                    },
                    "comment": {
                        "type": "string",
                        "description": "Additional comments related to the transfer.",
                        "nullable": true,
                        "example": "Urgent delivery required."
                    },
                    "freightAllocation": {
                        "type": "string",
                        "description": "The ID for freight allocation.",
                        "nullable": true,
                        "example": "Weight"
                    },
                    "otherFee": {
                        "type": "string",
                        "description": "Other fee ID associated with the site transfer.",
                        "nullable": true,
                        "example": "12345"
                    },
                    "otherFeeAmount": {
                        "type": "number",
                        "description": "The cost associated with the Other Fee.",
                        "format": "double",
                        "example": 25
                    },
                    "freightAmount": {
                        "type": "number",
                        "description": "The amount of the freight cost.",
                        "format": "double",
                        "example": 25
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InventoryTransferProductRequest"
                        },
                        "description": "The list of products being transferred.",
                        "nullable": true
                    },
                    "rowVersion": {
                        "type": "string",
                        "description": "The row version",
                        "nullable": true,
                        "example": ""
                    }
                },
                "additionalProperties": false,
                "description": "Represents an inventory transfer."
            },
            "ItemAvailabilityWithCustomerPricingRequest": {
                "required": [
                    "customerId",
                    "items"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer identifier",
                        "example": "188280"
                    },
                    "items": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of specific item IDs to filter the search request",
                        "example": [
                            "ABC",
                            "DEF",
                            "123"
                        ]
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of specific locations to filter the search request",
                        "nullable": true,
                        "example": [
                            "ABC",
                            "DEF",
                            "123"
                        ]
                    }
                },
                "additionalProperties": false,
                "description": "Customer Pricing Request"
            },
            "ItemAvailabilityWithPricingResponse": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "string",
                        "description": "Item identifier",
                        "nullable": true,
                        "example": "3"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the item",
                        "nullable": true,
                        "example": "Corn"
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "description": "Stocking/selling unit of measure of the item",
                        "nullable": true,
                        "example": "Ton"
                    },
                    "prepaidPrice": {
                        "type": "number",
                        "description": "Prepaid price of the item",
                        "format": "double",
                        "nullable": true,
                        "example": 23747.18
                    },
                    "prepaidPrecision": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "example": 2
                    },
                    "suggestedRetailPrice": {
                        "type": "number",
                        "description": "Suggested retail price from the vendor",
                        "format": "double",
                        "nullable": true,
                        "example": 9.99
                    },
                    "imapPrice": {
                        "type": "number",
                        "description": "Internet minimum advertised price",
                        "format": "double",
                        "example": 9.99
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ItemLocationAvailabilityWithPricingResponse"
                        },
                        "description": "List of Sites",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Item availability per location with pricing"
            },
            "ItemLocationAvailabilityWithPricingResponse": {
                "type": "object",
                "properties": {
                    "locationId": {
                        "type": "string",
                        "description": "Location ID",
                        "nullable": true,
                        "example": "1"
                    },
                    "onHand": {
                        "type": "number",
                        "description": "The quantity that is currently on hand at this site",
                        "format": "double",
                        "example": 23747.184
                    },
                    "allocated": {
                        "type": "number",
                        "description": "The quantity that is currently allocated (on open Orders/Batches, layaway, and unbilled) at this site",
                        "format": "double",
                        "example": 23747.184
                    },
                    "outboundTransfers": {
                        "type": "number",
                        "description": "The quantity that is currently allocated by outbound transfers at this site",
                        "format": "double",
                        "example": 23747.184
                    },
                    "inboundTransfers": {
                        "type": "number",
                        "description": "The quantity that is currently allocated by inbound transfers at this site",
                        "format": "double",
                        "example": 23747.184
                    },
                    "prepaid": {
                        "type": "number",
                        "description": "The quantity that is currently allocated by prepaids at this site",
                        "format": "double",
                        "example": 23747.184
                    },
                    "booked": {
                        "type": "number",
                        "description": "The quantity that is currently allocated by bookings at this site",
                        "format": "double",
                        "example": 23747.184
                    },
                    "onPurchaseOrders": {
                        "type": "number",
                        "description": "The quantity that is currently allocated by purchase orders at this site",
                        "format": "double",
                        "example": 23747.184
                    },
                    "priceBreaks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceBreakResponse"
                        },
                        "description": "List of prices",
                        "nullable": true
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerPricing"
                        },
                        "description": "List of prices",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Site availability for an item with pricing"
            },
            "ItemResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Item identifier",
                        "nullable": true,
                        "example": "10025"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the item",
                        "nullable": true,
                        "example": "Corn"
                    },
                    "type": {
                        "type": "string",
                        "description": "The item's type: Inventory, Non-inventory, Kit, Spot Purchase, Comment, Kit Component, Repackaged",
                        "nullable": true,
                        "example": "Inventory"
                    },
                    "attribute": {
                        "type": "string",
                        "description": "Item attributes: Assembly, Special Order, Trade-In, Companion, Service Revenue, Group, None",
                        "nullable": true,
                        "example": "None"
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "description": "Stocking/selling unit of measure of the item",
                        "nullable": true,
                        "example": "Ton"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of the item",
                        "format": "double",
                        "example": 2000
                    },
                    "categoryId": {
                        "type": "string",
                        "description": "Identifier of the item's category",
                        "nullable": true,
                        "example": "D605"
                    },
                    "categoryName": {
                        "type": "string",
                        "description": "Name of the item's category",
                        "nullable": true,
                        "example": "Assembly Feeds"
                    },
                    "purchaseSummaryId": {
                        "type": "string",
                        "description": "Identifier of the item's purchase summary",
                        "nullable": true,
                        "example": "34"
                    },
                    "purchaseSummaryName": {
                        "type": "string",
                        "description": "Name of the item's purchase summary",
                        "nullable": true,
                        "example": "Bulk feed"
                    },
                    "replacementCost": {
                        "type": "number",
                        "description": "The current replacement cost per stocking/selling unit for this item",
                        "format": "double",
                        "example": 0
                    },
                    "manufacturerId": {
                        "type": "integer",
                        "description": "Identifier of the item's manufacturer",
                        "format": "int32",
                        "example": 80002
                    },
                    "manufacturerName": {
                        "type": "string",
                        "description": "Name of the item's manufacturer",
                        "nullable": true,
                        "example": "Wrangler"
                    },
                    "epaNumber": {
                        "type": "string",
                        "description": "EPA number of the item",
                        "nullable": true,
                        "example": "2749-530"
                    },
                    "pricePrecision": {
                        "type": "integer",
                        "description": "The number of decimal places the item's price has (2-6)",
                        "format": "int32",
                        "example": 2
                    },
                    "quantityPrecision": {
                        "type": "integer",
                        "description": "The number of decimal places the item's quantity has (0-4)",
                        "format": "int32",
                        "example": 2
                    },
                    "status": {
                        "type": "string",
                        "nullable": true,
                        "example": "Active"
                    },
                    "discontinued": {
                        "type": "boolean",
                        "description": "Indicates if item has been discontinued by the manufacturer: true/false",
                        "example": false
                    },
                    "lotTracking": {
                        "type": "string",
                        "description": "Lot numbers recorded for this item: Bulk/Seed/Full/Sales/None",
                        "nullable": true,
                        "example": "Bulk"
                    },
                    "commodity": {
                        "type": "boolean",
                        "description": "Indicates if item is a grain item: true/false",
                        "example": true
                    },
                    "fertilizerIngredient": {
                        "type": "boolean",
                        "description": "Indicates if item can be used as an ingredient in Fertilizer Blending: true/false",
                        "example": false
                    },
                    "customerIdRequired": {
                        "type": "boolean",
                        "description": "Item availability for sale to anonymous customers: true/false",
                        "example": false
                    },
                    "comments": {
                        "type": "string",
                        "description": "Any optional comments/notes about the item",
                        "nullable": true
                    },
                    "energyType": {
                        "type": "string",
                        "description": "Oil Energy Type: Propane/Gasoline/Distillates/Tank/Exchangeable/Additive",
                        "nullable": true,
                        "example": "Tank"
                    },
                    "cashDiscount": {
                        "$ref": "#/components/schemas/CashDiscountResponse"
                    },
                    "classifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClassificationResponse"
                        },
                        "description": "Item Classifications",
                        "nullable": true
                    },
                    "sites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteResponse"
                        },
                        "description": "Merchant sites associated with the item",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "ItemSearchRequest": {
                "type": "object",
                "properties": {
                    "isCommodity": {
                        "type": "boolean",
                        "description": "Commodity Items Filter: true=commodity items only; false = non-commodity items only. Leave this filter off to get both commodity and non-commodity items",
                        "nullable": true
                    },
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC that items have been changed since",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "itemIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of specific item identifiers to filter the search request",
                        "nullable": true,
                        "example": [
                            "ABC",
                            "DEF",
                            "123"
                        ]
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of specific category identifiers to filter the search request",
                        "nullable": true,
                        "example": [
                            "ABC",
                            "DEF",
                            "123"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "Status: Active, Inactive, Delete, All",
                        "nullable": true,
                        "example": "Active"
                    }
                },
                "additionalProperties": false,
                "description": "Item Search Request"
            },
            "LicenseResponse": {
                "required": [
                    "result"
                ],
                "type": "object",
                "properties": {
                    "result": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Result",
                        "example": "passed"
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reason",
                        "nullable": true,
                        "example": "license expired"
                    }
                },
                "additionalProperties": false,
                "description": "License Response"
            },
            "LocationResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true,
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "example": "Brentwood TN"
                    },
                    "address": {
                        "type": "string",
                        "nullable": true,
                        "example": "123 John Doe Dr."
                    },
                    "city": {
                        "type": "string",
                        "nullable": true,
                        "example": "Brentwood"
                    },
                    "state": {
                        "type": "string",
                        "description": "State Abbreviation",
                        "nullable": true,
                        "example": "TN"
                    },
                    "zip": {
                        "type": "string",
                        "nullable": true,
                        "example": "37027"
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true,
                        "example": "458-458-4589"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "example": "JohnDoe@johndoe.com"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status: Active, Inactive, Delete",
                        "nullable": true,
                        "example": "Active"
                    }
                },
                "additionalProperties": false,
                "description": "Location"
            },
            "LocationStockResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Location ID",
                        "nullable": true,
                        "example": "123987"
                    },
                    "name": {
                        "type": "string",
                        "description": "Location name",
                        "nullable": true,
                        "example": "Nashville Store"
                    },
                    "onHand": {
                        "type": "number",
                        "description": "On hand quantity",
                        "format": "double",
                        "example": 10
                    },
                    "orders": {
                        "type": "number",
                        "description": "Quantity on pending orders",
                        "format": "double",
                        "example": 10
                    },
                    "batches": {
                        "type": "number",
                        "description": "Quantity on pending batches",
                        "format": "double",
                        "example": 10
                    },
                    "layaway": {
                        "type": "number",
                        "description": "Quantity on layaway",
                        "format": "double",
                        "example": 10
                    },
                    "prepaid": {
                        "type": "number",
                        "description": "Quantity on prepaid",
                        "format": "double",
                        "example": 10
                    },
                    "booking": {
                        "type": "number",
                        "description": "Quantity on booking",
                        "format": "double",
                        "example": 10
                    },
                    "netAvailable": {
                        "type": "number",
                        "description": "Net quantity available",
                        "format": "double",
                        "example": 10
                    },
                    "onOrder": {
                        "type": "number",
                        "description": "Quantity on purchase order",
                        "format": "double",
                        "example": 10
                    },
                    "inTransit": {
                        "type": "number",
                        "description": "Quantity in transit",
                        "format": "double",
                        "example": 10
                    },
                    "toTransfer": {
                        "type": "number",
                        "description": "Net quantity on pending transfers",
                        "format": "double",
                        "example": 10
                    },
                    "unbilled": {
                        "type": "number",
                        "description": "Unbilled quantity",
                        "format": "double",
                        "example": 10
                    },
                    "location1": {
                        "type": "string",
                        "description": "Location 1",
                        "nullable": true,
                        "example": "Aisle 5"
                    },
                    "location2": {
                        "type": "string",
                        "description": "Location 2",
                        "nullable": true,
                        "example": "Aisle 5"
                    },
                    "quantityOutboundTransfer": {
                        "type": "number",
                        "description": "Quantity on outbound transfers",
                        "format": "double",
                        "example": 10
                    },
                    "quantityInboundTransfer": {
                        "type": "number",
                        "description": "Quantity on inbound transfers",
                        "format": "double",
                        "example": 10
                    }
                },
                "additionalProperties": false,
                "description": "Location Stock"
            },
            "LotItemResponse": {
                "type": "object",
                "properties": {
                    "itemId": {
                        "type": "string",
                        "description": "Item ID",
                        "nullable": true,
                        "example": "072115"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LotLocationResponse"
                        },
                        "description": "Locations",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Item lots by Location"
            },
            "LotLocationResponse": {
                "type": "object",
                "properties": {
                    "locationId": {
                        "type": "string",
                        "description": "Location ID",
                        "nullable": true,
                        "example": "102"
                    },
                    "quantityOnHand": {
                        "type": "number",
                        "description": "Quantity On Hand",
                        "format": "double",
                        "example": 105.36
                    },
                    "lots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LotResponse"
                        },
                        "description": "Lots",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Lots by Location"
            },
            "LotResponse": {
                "type": "object",
                "properties": {
                    "lotId": {
                        "type": "string",
                        "description": "Lot ID",
                        "nullable": true,
                        "example": "1234"
                    },
                    "testedDate": {
                        "type": "string",
                        "description": "Tested Date",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2024-06-13T12:00:00.0000000+00:00"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "Expiration Date",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2024-06-13T12:00:00.0000000+00:00"
                    },
                    "quantityAvailable": {
                        "type": "number",
                        "description": "QuantityAvailable",
                        "format": "double",
                        "example": 103.25
                    }
                },
                "additionalProperties": false,
                "description": "Lot Response"
            },
            "OrderContactInformationRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Contact's name",
                        "nullable": true,
                        "example": "John Doe"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Contact's phone number",
                        "nullable": true,
                        "example": "444-444-4444"
                    },
                    "email": {
                        "type": "string",
                        "description": "Contact's email address",
                        "nullable": true,
                        "example": "JohnDoe@JohnDoe.com"
                    },
                    "address1": {
                        "type": "string",
                        "description": "Contact's street address - line 1",
                        "nullable": true,
                        "example": "123 John Doe Dr."
                    },
                    "address2": {
                        "type": "string",
                        "description": "Contact's street address - line 2",
                        "nullable": true,
                        "example": "Apt. 203"
                    },
                    "city": {
                        "type": "string",
                        "description": "Contact's city",
                        "nullable": true,
                        "example": "Franklin"
                    },
                    "state": {
                        "type": "string",
                        "description": "Contact's state abbreviation",
                        "nullable": true,
                        "example": "TN"
                    },
                    "zip": {
                        "type": "string",
                        "description": "Contact's zip code",
                        "nullable": true,
                        "example": "37027"
                    }
                },
                "additionalProperties": false,
                "description": "Order Contact Information"
            },
            "OrderContactInformationResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Contact's name",
                        "nullable": true,
                        "example": "John Doe"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Contact's phone number",
                        "nullable": true,
                        "example": "444-444-4444"
                    },
                    "email": {
                        "type": "string",
                        "description": "Contact's email address",
                        "nullable": true,
                        "example": "JohnDoe@JohnDoe.com"
                    },
                    "address1": {
                        "type": "string",
                        "description": "Contact's street address - line 1",
                        "nullable": true,
                        "example": "123 John Doe Dr."
                    },
                    "address2": {
                        "type": "string",
                        "description": "Contact's street address - line 2",
                        "nullable": true,
                        "example": "Apt. 203"
                    },
                    "city": {
                        "type": "string",
                        "description": "Contact's city",
                        "nullable": true,
                        "example": "Franklin"
                    },
                    "state": {
                        "type": "string",
                        "description": "Contact's state abbreviation",
                        "nullable": true,
                        "example": "TN"
                    },
                    "zip": {
                        "type": "string",
                        "description": "Contact's zip code",
                        "nullable": true,
                        "example": "37027"
                    }
                },
                "additionalProperties": false,
                "description": "Order Contact Information Response"
            },
            "OrderCreateLineItemRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Order line types: Item, Comment",
                        "nullable": true,
                        "example": "Item"
                    },
                    "id": {
                        "type": "string",
                        "description": "Item identifier, leave blank for comments",
                        "nullable": true,
                        "example": "80511"
                    },
                    "description": {
                        "type": "string",
                        "description": "Item description",
                        "nullable": true,
                        "example": "Ky Fescue"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Item quantity",
                        "format": "double",
                        "example": 25
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "Item's unit price",
                        "format": "double",
                        "example": 566
                    },
                    "externalSequence": {
                        "maxLength": 36,
                        "type": "string",
                        "description": "Line item identifier from your system",
                        "nullable": true,
                        "example": "1"
                    }
                },
                "additionalProperties": false,
                "description": "OrderCreateLineItem"
            },
            "OrderCreateRequest": {
                "required": [
                    "lineItems",
                    "locationId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "externalOrderId": {
                        "maxLength": 20,
                        "type": "string",
                        "description": "External order identifier",
                        "nullable": true
                    },
                    "type": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Type of order, Only valid value is \"Sale\"",
                        "example": "Sale"
                    },
                    "customerId": {
                        "type": "string",
                        "description": "Customer identifier, if you do not provide a customer an anonymous customer will be used.",
                        "nullable": true,
                        "example": "188280"
                    },
                    "customerShipToId": {
                        "type": "string",
                        "description": "Customer Ship To identifier, this field is ignored for anonymous customer and defaulted to \"00\". This field is required when providing a customer ID.",
                        "nullable": true,
                        "example": "00"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location identifier"
                    },
                    "purchaseOrderNumber": {
                        "type": "string",
                        "description": "Purchase Order Number",
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "description": "Order comment",
                        "nullable": true
                    },
                    "eCommercePointOfSale": {
                        "type": "string",
                        "description": "Pickup, Delivery",
                        "nullable": true,
                        "example": "Delivery"
                    },
                    "taxAmount": {
                        "type": "number",
                        "description": "Tax amount for entire order. Based on your configuration, Merchant may recalculate this tax amount.",
                        "format": "double",
                        "nullable": true
                    },
                    "lineItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderCreateLineItemRequest"
                        },
                        "description": "Line Items"
                    },
                    "preAuth": {
                        "$ref": "#/components/schemas/PreAuthRequest"
                    },
                    "customerContactInformation": {
                        "$ref": "#/components/schemas/OrderContactInformationRequest"
                    },
                    "customerInstructions": {
                        "maxLength": 600,
                        "type": "string",
                        "description": "Instructions from the customer",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Order create object"
            },
            "OrderLineItemResponse": {
                "required": [
                    "description",
                    "extendedPrice",
                    "extendedWeight",
                    "itemId",
                    "quantity",
                    "sequence",
                    "type",
                    "unitOfMeasure",
                    "unitPrice"
                ],
                "type": "object",
                "properties": {
                    "sequence": {
                        "type": "integer",
                        "description": "The sequence of the line item, this is the unique identifier of the line on this order",
                        "format": "int32",
                        "example": 1000
                    },
                    "type": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Types: Item, Comment",
                        "example": "Item"
                    },
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Line item's identifier, leave blank for comments",
                        "example": "80511"
                    },
                    "description": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Line item's description",
                        "example": "Ky Fescue"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Line item's quantity",
                        "format": "double",
                        "example": 25
                    },
                    "unitOfMeasure": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Line item's unit of measure",
                        "example": "Bags"
                    },
                    "extendedWeight": {
                        "type": "number",
                        "description": "Line item's extended weight",
                        "format": "double",
                        "example": 50000
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "Line item's unit price",
                        "format": "double",
                        "example": 566
                    },
                    "extendedPrice": {
                        "type": "number",
                        "description": "Line item's extended price",
                        "format": "double",
                        "example": 14150
                    },
                    "prepaidId": {
                        "type": "string",
                        "description": "Prepaid identifier on line item",
                        "nullable": true,
                        "example": "701153"
                    },
                    "bookingId": {
                        "type": "string",
                        "description": "Booking identifier on line item",
                        "nullable": true,
                        "example": "801295"
                    },
                    "salesContractId": {
                        "type": "string",
                        "description": "Sales Contract identifier on line item",
                        "nullable": true,
                        "example": "8074321"
                    },
                    "externalSequence": {
                        "type": "string",
                        "description": "Line item identifier from your system",
                        "nullable": true,
                        "example": "1"
                    }
                },
                "additionalProperties": false,
                "description": "Order Line Item Response"
            },
            "OrderResponse": {
                "required": [
                    "comment",
                    "customerId",
                    "customerInstructions",
                    "customerName",
                    "customerShipToId",
                    "customerShipToName",
                    "enteredDate",
                    "externalOrderId",
                    "id",
                    "lineItems",
                    "locationId",
                    "locationName",
                    "module",
                    "operatorId",
                    "operatorName",
                    "purchaseOrderNumber",
                    "settlements",
                    "status",
                    "taxAmount",
                    "totalAmount",
                    "type",
                    "version",
                    "workOrderStatus"
                ],
                "type": "object",
                "properties": {
                    "externalOrderId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "External order identifier"
                    },
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Order identifier",
                        "example": "748523"
                    },
                    "module": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Modules: Regular, Feed, Oil & Energy, Convenience Store, Merchant Mobility, Web",
                        "example": "Standard"
                    },
                    "type": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Types: Sale, Return, Billing Adjustment",
                        "example": "Sale"
                    },
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's identifier",
                        "example": "188280"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's name",
                        "example": "David Webb"
                    },
                    "customerShipToId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's ship to identifier",
                        "example": "00"
                    },
                    "customerShipToName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's ship to name",
                        "example": "David Webb"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location's identifier",
                        "example": "1"
                    },
                    "locationName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location's name",
                        "example": "Nashville"
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Statuses: Open, Closed, Cancelled",
                        "example": "Closed"
                    },
                    "operatorName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Operator's name",
                        "example": "Wren Wilson"
                    },
                    "operatorId": {
                        "type": "integer",
                        "description": "Operator's identifier",
                        "format": "int32",
                        "example": 1001
                    },
                    "enteredDate": {
                        "type": "string",
                        "description": "The order's entered date",
                        "format": "date-time",
                        "example": "2014-11-14T12:00:00.0000000+00:00"
                    },
                    "soldDate": {
                        "type": "string",
                        "description": "The order's sold date",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2014-11-15T12:00:00.0000000+00:00"
                    },
                    "purchaseOrderNumber": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Purchase Order Number",
                        "example": "97"
                    },
                    "comment": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Order comment",
                        "example": "Leave at front door."
                    },
                    "taxAmount": {
                        "type": "number",
                        "description": "The order's tax amount",
                        "format": "double",
                        "example": 15
                    },
                    "totalAmount": {
                        "type": "number",
                        "description": "The order's total amount",
                        "format": "double",
                        "example": 165
                    },
                    "settlements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaleSettlementResponse"
                        },
                        "description": "The order's settlements"
                    },
                    "lineItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderLineItemResponse"
                        },
                        "description": "Line items on the order"
                    },
                    "eCommercePointOfSale": {
                        "type": "string",
                        "description": "Types: Pickup, Delivery",
                        "nullable": true,
                        "example": "Delivery"
                    },
                    "customerContactInformation": {
                        "$ref": "#/components/schemas/OrderContactInformationResponse"
                    },
                    "version": {
                        "type": "string",
                        "format": "byte",
                        "example": "97"
                    },
                    "customerInstructions": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Instructions from the customer"
                    },
                    "workOrderStatus": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Work Order Status: Entered, Accepted, Assigned, In Process, Completed, Invoiced, On Hold, Rejected, Cancelled, Archived, or Blank",
                        "example": "Entered"
                    }
                },
                "additionalProperties": false,
                "description": "Order response"
            },
            "OrderSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC that orders have been changed since",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "status": {
                        "type": "string",
                        "description": "Order status used to filter the search request",
                        "nullable": true,
                        "example": "Open"
                    },
                    "customerId": {
                        "type": "string",
                        "description": "Customer ID used to filter the search request",
                        "nullable": true,
                        "example": "ABCD1234"
                    },
                    "enteredDateStart": {
                        "type": "string",
                        "description": "Entered Start Date/time in local time zone used to filter the search request",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "enteredDateEnd": {
                        "type": "string",
                        "description": "Entered End Date/time in local time zone used to filter the search request",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "saleDateStart": {
                        "type": "string",
                        "description": "Sale Start Date/time in local time zone used to filter the search request",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "saleDateEnd": {
                        "type": "string",
                        "description": "Sale End Date/time in local time zone used to filter the search request",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "module": {
                        "type": "string",
                        "description": "Order module used to filter the search request",
                        "nullable": true,
                        "example": "Standard"
                    },
                    "workOrderStatus": {
                        "type": "string",
                        "description": "Work order status used to filter the search request",
                        "nullable": true,
                        "example": "Entered"
                    }
                },
                "additionalProperties": false,
                "description": "Order Search Request"
            },
            "OrderUpdateLineItemRequest": {
                "type": "object",
                "properties": {
                    "sequence": {
                        "type": "string",
                        "description": "Sequence of the line item, if adding a new line item the value should be set to null",
                        "nullable": true,
                        "example": "1"
                    },
                    "type": {
                        "type": "string",
                        "description": "Types: Item, Comment",
                        "nullable": true,
                        "example": "Item"
                    },
                    "id": {
                        "type": "string",
                        "description": "Item identifier, leave blank for comments",
                        "nullable": true,
                        "example": "80511"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the line item",
                        "nullable": true,
                        "example": "Ky Fescue"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Quantity of the line item",
                        "format": "double",
                        "example": 25
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "Unit Price of the line item",
                        "format": "double",
                        "example": 566
                    },
                    "externalSequence": {
                        "maxLength": 36,
                        "type": "string",
                        "description": "Line item identifier from your system",
                        "nullable": true,
                        "example": "1"
                    }
                },
                "additionalProperties": false,
                "description": "Order Update Line Item Request"
            },
            "OrderUpdateRequest": {
                "required": [
                    "customerId",
                    "customerShipToId",
                    "lineItems",
                    "locationId",
                    "rowVersion"
                ],
                "type": "object",
                "properties": {
                    "externalOrderId": {
                        "maxLength": 20,
                        "type": "string",
                        "description": "External order identifier",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Order Type: Sale, Return",
                        "nullable": true,
                        "example": "Sale"
                    },
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's identifier",
                        "example": "188280"
                    },
                    "customerShipToId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's ship to identifier",
                        "example": "00"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location's identifier for the order",
                        "example": "1"
                    },
                    "purchaseOrderNumber": {
                        "type": "string",
                        "description": "Purchase Order Number",
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment",
                        "nullable": true
                    },
                    "eCommercePointOfSale": {
                        "type": "string",
                        "description": "Pickup, Delivery",
                        "nullable": true,
                        "example": "Delivery"
                    },
                    "taxAmount": {
                        "type": "number",
                        "description": "Tax amount for entire order. Based on your configuration Merchant may recalculate this tax amount.",
                        "format": "double",
                        "nullable": true
                    },
                    "externalRefundStatus": {
                        "type": "string",
                        "description": "Refund status",
                        "nullable": true
                    },
                    "lineItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderUpdateLineItemRequest"
                        },
                        "description": "List of line items for order"
                    },
                    "preAuth": {
                        "$ref": "#/components/schemas/PreAuthRequest"
                    },
                    "customerContactInformation": {
                        "$ref": "#/components/schemas/OrderContactInformationRequest"
                    },
                    "rowVersion": {
                        "type": "string",
                        "description": "Row Version",
                        "format": "byte",
                        "example": "0x123"
                    },
                    "customerInstructions": {
                        "maxLength": 600,
                        "type": "string",
                        "description": "Instructions from the customer",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Order Update Request"
            },
            "PositionBalanceResponse": {
                "required": [
                    "balance",
                    "customerId",
                    "customerName",
                    "itemDescription",
                    "itemId",
                    "locationId",
                    "locationName",
                    "positionDescription",
                    "positionId",
                    "unitOfMeasure"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "188280"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "David Webb"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    },
                    "locationName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Nashville"
                    },
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "3"
                    },
                    "itemDescription": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Corn"
                    },
                    "unitOfMeasure": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Bushel"
                    },
                    "positionId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1130"
                    },
                    "positionDescription": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Grain Bank"
                    },
                    "balance": {
                        "type": "number",
                        "format": "double",
                        "example": 1234.5677
                    }
                },
                "additionalProperties": false,
                "description": "Position Balance"
            },
            "PreAuthRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Amount that was pre-authorized",
                        "format": "double",
                        "example": 14150.78
                    },
                    "creditCardToken": {
                        "type": "string",
                        "description": "Credit card token",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "PreAuth Request"
            },
            "PrepaidEligiblePurchaseSummaryResponse": {
                "required": [
                    "prepaidAmount",
                    "purchaseSummaryId",
                    "purchaseSummaryName",
                    "soldAmount"
                ],
                "type": "object",
                "properties": {
                    "purchaseSummaryId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid purchase summary identifier",
                        "example": "11"
                    },
                    "purchaseSummaryName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid purchase summary name",
                        "example": "General Products"
                    },
                    "prepaidAmount": {
                        "type": "number",
                        "description": "Amount of prepaid money alloacted to eligible purchase summary",
                        "format": "double",
                        "example": 1234.56
                    },
                    "soldAmount": {
                        "type": "number",
                        "description": "Amount of prepaid money sold for eligible purchase summary",
                        "format": "double",
                        "example": 1234.56
                    }
                },
                "additionalProperties": false,
                "description": "Prepaid Eligible Purchase Summary"
            },
            "PrepaidItemResponse": {
                "required": [
                    "itemDescription",
                    "itemId",
                    "limitSalesQuantity",
                    "limitToPrepaidItems",
                    "prepaidQuantity",
                    "quantityOutstanding",
                    "unitOfMeasure",
                    "unitPrice",
                    "usageRate",
                    "usePrepaidPrice"
                ],
                "type": "object",
                "properties": {
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid item identifier",
                        "example": "3"
                    },
                    "itemDescription": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid item description",
                        "example": "Corn"
                    },
                    "unitOfMeasure": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid item's unit of measure",
                        "example": "Bushel"
                    },
                    "prepaidQuantity": {
                        "type": "number",
                        "description": "Quantity allocated to prepaid item",
                        "format": "double",
                        "example": 1234.5677
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "Unit price for prepaid item",
                        "format": "double",
                        "example": 1234.5677
                    },
                    "quantityOutstanding": {
                        "type": "number",
                        "description": "Remaining quantity for prepaid item",
                        "format": "double",
                        "example": 1234.5677
                    },
                    "usageRate": {
                        "type": "number",
                        "description": "Prepaid item usage rate",
                        "format": "double",
                        "example": 100
                    },
                    "usePrepaidPrice": {
                        "type": "boolean",
                        "description": "Use prepaid prices: True=Yes, prices are guaranteed; False=No, the quantity will be based on the total amount and market price",
                        "example": true
                    },
                    "limitSalesQuantity": {
                        "type": "boolean",
                        "description": "Limit sales to quantity committed commitments: True=Yes, limited; False=No, the quantity will be unlimited",
                        "example": true
                    },
                    "limitToPrepaidItems": {
                        "type": "boolean",
                        "description": "Limit items to those listed on the prepaids: True=Yes, limited; False=No, any item can be applied to the prepaid",
                        "example": true
                    }
                },
                "additionalProperties": false,
                "description": "Prepaid Item"
            },
            "PrepaidResponse": {
                "required": [
                    "availableForProductsAmount",
                    "availableForUnspecifiedProductsAmount",
                    "businessUnit",
                    "contact",
                    "customerId",
                    "customerName",
                    "dateAgreement",
                    "dateQuoted",
                    "energyForceContract",
                    "id",
                    "isAgreementSigned",
                    "isDeliveryApplied",
                    "isFixedPrice",
                    "isFuelSales",
                    "isLimitItems",
                    "isLimitSales",
                    "isQuoteSendEmail",
                    "isSponsored",
                    "items",
                    "moneyOnlyAmount",
                    "movedToArAmount",
                    "netAvailableAmount",
                    "operatorId",
                    "operatorName",
                    "prepaidAmount",
                    "prepaidEligiblePurchaseSummaries",
                    "prepaidSettlements",
                    "primaryLocationId",
                    "primaryLocationName",
                    "quoteEmail",
                    "quoteExpireDates",
                    "rowVersion",
                    "status",
                    "usageRate",
                    "usedAmount"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid identifier",
                        "example": "10000001"
                    },
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid's customer identifier",
                        "example": "188280"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid's customer name",
                        "example": "David Webb"
                    },
                    "operatorName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid's operator name",
                        "example": "John Smith"
                    },
                    "operatorId": {
                        "type": "integer",
                        "description": "Prepaid's operator identifier",
                        "format": "int32",
                        "example": 1001
                    },
                    "agreementDate": {
                        "type": "string",
                        "description": "The date the prepaid contract was agreed upon",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-04-13T05:12:00.0000000+00:00"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "The date the prepaid expires and can no longer be applied",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-04-13T05:12:00.0000000+00:00"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Custom comment for the prepaid",
                        "nullable": true,
                        "example": "This is a comment"
                    },
                    "contact": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid contact name",
                        "example": "John Smith"
                    },
                    "primaryLocationId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid's primary location identifier",
                        "example": "1"
                    },
                    "primaryLocationName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid's primary location name",
                        "example": "Nashville"
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Prepaid status: Open, Pending, Closed, Deleted",
                        "example": "Open"
                    },
                    "isFixedPrice": {
                        "type": "boolean",
                        "description": "Use prepaid price: True=Yes, prices are guaranteed; False=No, the quantity will be based on the total amount and market price",
                        "example": true
                    },
                    "isLimitSales": {
                        "type": "boolean",
                        "description": "Limit sales to quantity committed commitments: True=Yes, limited; False=No, the quantity will be unlimited",
                        "example": true
                    },
                    "isLimitItems": {
                        "type": "boolean",
                        "description": "Limit items to those listed on the prepaids: True=Yes, limited; False=No, any item can be applied to the prepaid",
                        "example": true
                    },
                    "usageRate": {
                        "type": "number",
                        "description": "Prepaid usage rate",
                        "format": "double",
                        "example": 50
                    },
                    "prepaidAmount": {
                        "type": "number",
                        "description": "Total amount on prepaid",
                        "format": "double",
                        "example": 1234.56
                    },
                    "usedAmount": {
                        "type": "number",
                        "description": "The amount of prepaid that has been applied",
                        "format": "double",
                        "example": 1234.56
                    },
                    "movedToArAmount": {
                        "type": "number",
                        "description": "The amount of prepaid money transferred to the customer's AR account",
                        "format": "double",
                        "example": 1234.56
                    },
                    "availableForProductsAmount": {
                        "type": "number",
                        "description": "Amount of prepaid available for products",
                        "format": "double",
                        "example": 1234.56
                    },
                    "availableForUnspecifiedProductsAmount": {
                        "type": "number",
                        "description": "Amount of prepaid available for unspecified products",
                        "format": "double",
                        "example": 1234.56
                    },
                    "netAvailableAmount": {
                        "type": "number",
                        "description": "Net available amount",
                        "format": "double",
                        "example": 1234.56
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PrepaidItemResponse"
                        },
                        "description": "An array of prepaid items"
                    },
                    "prepaidEligiblePurchaseSummaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PrepaidEligiblePurchaseSummaryResponse"
                        },
                        "description": "An array of prepaid eligible purchase summaries"
                    },
                    "prepaidSettlements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PrepaidSettlementResponse"
                        },
                        "description": "An array of prepaid settlements"
                    },
                    "isDeliveryApplied": {
                        "type": "boolean",
                        "description": "Delivery has been applied to this prepaid reference (True/False)"
                    },
                    "businessUnit": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The business unit for the prepaid",
                        "example": "RETAIL"
                    },
                    "dateAgreement": {
                        "type": "string",
                        "description": "The date the prepaid contract was agreed upon",
                        "format": "date-time",
                        "example": "2022-04-13T05:12:00.0000000+00:00"
                    },
                    "isAgreementSigned": {
                        "type": "boolean",
                        "description": "True=The prepaid agreement has been signed, False=The prepaid agreement has not been signed"
                    },
                    "rowVersion": {
                        "type": "string",
                        "description": "Row version",
                        "format": "byte",
                        "example": "0x123"
                    },
                    "isFuelSales": {
                        "type": "boolean",
                        "description": "True=Prepaid can be used for fuel sales, False=No, prepaids cannot be used for fuel sales"
                    },
                    "quoteExpireDates": {
                        "type": "integer",
                        "description": "The number of days before the prepaid quote expires",
                        "format": "int32",
                        "example": 1
                    },
                    "isQuoteSendEmail": {
                        "type": "boolean",
                        "description": "True=Quotes should be sent to customer's email"
                    },
                    "quoteEmail": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Email address to send the prepaid quote",
                        "example": "test@testemail.com"
                    },
                    "dateQuoted": {
                        "type": "string",
                        "description": "The date the prepaid quote was made",
                        "format": "date-time",
                        "example": "2022-04-13T05:12:00.0000000+00:00"
                    },
                    "isSponsored": {
                        "type": "boolean",
                        "description": "Prepaid is sponsored: True/false"
                    },
                    "energyForceContract": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Energy Force contract identifier",
                        "example": "123455"
                    },
                    "moneyOnlyAmount": {
                        "type": "number",
                        "description": "Amount on the prepaid that is not tied to any particular item, etc",
                        "format": "double",
                        "example": 1234.23
                    }
                },
                "additionalProperties": false,
                "description": "Prepaid"
            },
            "PrepaidSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC that prepaids have been changed since",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of prepaid types to filter the search request",
                        "nullable": true
                    },
                    "status": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of statuses to filter the search request",
                        "nullable": true
                    },
                    "customerId": {
                        "type": "string",
                        "description": "A valid customer identifier",
                        "nullable": true,
                        "example": "188280"
                    },
                    "customerName": {
                        "type": "string",
                        "description": "A valid customer name",
                        "nullable": true,
                        "example": "David Webb"
                    },
                    "agreementStart": {
                        "type": "string",
                        "description": "The start date for a range of agreement dates to filter the search request",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "agreementEnd": {
                        "type": "string",
                        "description": "The end date for a range of agreement dates to filter the search request",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Prepaid Search Request"
            },
            "PrepaidSettlementResponse": {
                "required": [
                    "amount",
                    "date",
                    "locationId",
                    "locationName",
                    "operatorName",
                    "reference",
                    "settlementId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "settlementId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The settlement identifier (1=first settlement, 2=second settlement, etc.)",
                        "example": "1"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The profit center identifier where the prepaid was settled",
                        "example": "1"
                    },
                    "locationName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The profit center name where the prepaid was settled",
                        "example": "Nashville"
                    },
                    "date": {
                        "type": "string",
                        "description": "The settlement date",
                        "format": "date-time",
                        "example": "2022-04-13T05:12:00.0000000+00:00"
                    },
                    "operatorName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The operator name for the settlement",
                        "example": "John Smith"
                    },
                    "type": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The tender type used on the settlement",
                        "example": "Check"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The settlement reference number if applicable (i.e. check number)",
                        "example": "1440"
                    },
                    "amount": {
                        "type": "number",
                        "description": "The settlement amount",
                        "format": "double",
                        "example": 1234.56
                    }
                },
                "additionalProperties": false,
                "description": "Prepaid settlement"
            },
            "PrepaidTypeCategoryResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Category identifier associated with the prepaid type",
                        "nullable": true,
                        "example": "D605"
                    },
                    "name": {
                        "type": "string",
                        "description": "Category name",
                        "nullable": true,
                        "example": "Assembly Feeds"
                    },
                    "usageRate": {
                        "type": "number",
                        "description": "The prepaid usage rate percent for the category (0.00 - 100.00)",
                        "format": "double",
                        "nullable": true,
                        "example": 100
                    }
                },
                "additionalProperties": false,
                "description": "PrepaidTypeCategory"
            },
            "PrepaidTypeItemResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Identifier of item associated with the prepaid type",
                        "nullable": true,
                        "example": "10025"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of item associated with the prepaid type",
                        "nullable": true,
                        "example": "Corn"
                    },
                    "usageRate": {
                        "type": "number",
                        "description": "The prepaid usage rate percent for the item (0.00 - 100.00)",
                        "format": "double",
                        "nullable": true,
                        "example": 100
                    }
                },
                "additionalProperties": false,
                "description": "Prepaid Type Item"
            },
            "PrepaidTypeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Prepaid type identifier",
                        "nullable": true,
                        "example": "1000"
                    },
                    "description": {
                        "type": "string",
                        "description": "Prepaid type description",
                        "nullable": true,
                        "example": "Feed Items"
                    },
                    "availableStartDate": {
                        "type": "string",
                        "description": "The date this prepaid type can be added to prepaids",
                        "format": "date-time",
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "availableEndDate": {
                        "type": "string",
                        "description": "The date this prepaid type can no longer be added to prepaids",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-12-30T12:00:00.0000000+00:00"
                    },
                    "shippingStartDate": {
                        "type": "string",
                        "description": "The date prepaid lines with this type can begin being sold on orders and batches",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "shippingEndDate": {
                        "type": "string",
                        "description": "The date prepaid lines with this type can no longer be sold on orders and batches",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-12-30T12:00:00.0000000+00:00"
                    },
                    "fundingClass": {
                        "type": "string",
                        "description": "The vendor funding class identifier",
                        "nullable": true,
                        "example": "FC1000"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PrepaidTypeItemResponse"
                        },
                        "description": "List of items eligible for the prepaid type",
                        "nullable": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PrepaidTypeCategoryResponse"
                        },
                        "description": "List of categories eligible for the prepaid type",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Prepaid Type"
            },
            "PriceBreakResponse": {
                "type": "object",
                "properties": {
                    "minimumQuantity": {
                        "type": "number",
                        "description": "The minimum quantity required to receive the price break",
                        "format": "double",
                        "example": 10
                    },
                    "price": {
                        "type": "number",
                        "description": "The price for the associated price break",
                        "format": "double",
                        "example": 23.67
                    }
                },
                "additionalProperties": false,
                "description": "Price Break"
            },
            "ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": {}
            },
            "PurchaseSummaryResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Purchase summary identifier",
                        "nullable": true,
                        "example": "10"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the purchase summary: Active, Inactive, Delete",
                        "nullable": true,
                        "example": "Active"
                    },
                    "name": {
                        "type": "string",
                        "description": "Purchase summary name",
                        "nullable": true,
                        "example": "Feed"
                    }
                },
                "additionalProperties": false,
                "description": "Purchase Summary"
            },
            "SaleApplicatorResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id",
                        "nullable": true,
                        "example": "1245"
                    },
                    "acres": {
                        "type": "number",
                        "description": "Acres",
                        "format": "double",
                        "example": 123.56
                    }
                },
                "additionalProperties": false,
                "description": "Sale Applicator Response"
            },
            "SaleFieldResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id",
                        "nullable": true,
                        "example": "ec773089-067d-4795-b501-d59ee3c17427"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name",
                        "nullable": true,
                        "example": "Field 1"
                    },
                    "vehicles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaleVehicleResponse"
                        },
                        "description": "Vehicles",
                        "nullable": true
                    },
                    "applicators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaleApplicatorResponse"
                        },
                        "description": "Applicators",
                        "nullable": true
                    },
                    "acres": {
                        "type": "number",
                        "description": "Acres",
                        "format": "double",
                        "nullable": true,
                        "example": 100
                    }
                },
                "additionalProperties": false,
                "description": "Sale Field Response"
            },
            "SaleLineItemIdentifierResponse": {
                "required": [
                    "source",
                    "unique"
                ],
                "type": "object",
                "properties": {
                    "source": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Source type of item: Ingredient, Seed or Chemical, Service, Any",
                        "example": "Ingredient"
                    },
                    "unique": {
                        "type": "integer",
                        "description": "Line item's unique identifier",
                        "format": "int32",
                        "example": 1000
                    }
                },
                "additionalProperties": false,
                "description": "Sale Line Item Identifier"
            },
            "SaleLineItemResponse": {
                "required": [
                    "description",
                    "extendedPrice",
                    "extendedWeight",
                    "id",
                    "itemId",
                    "quantity",
                    "type",
                    "unitOfMeasure",
                    "unitPrice"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Types: Item, Comment",
                        "example": "Item"
                    },
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Line item's identifier, leave blank for comments",
                        "example": "80511"
                    },
                    "description": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Line item's description",
                        "example": "Ky Fescue"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Line item's quantity",
                        "format": "double",
                        "example": 25
                    },
                    "unitOfMeasure": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Line item's unit of measure",
                        "example": "Bags"
                    },
                    "extendedWeight": {
                        "type": "number",
                        "description": "Line item's extended weight",
                        "format": "double",
                        "example": 50000
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "Line item's unit price",
                        "format": "double",
                        "example": 566
                    },
                    "extendedPrice": {
                        "type": "number",
                        "description": "Line item's extended price",
                        "format": "double",
                        "example": 14150
                    },
                    "prepaidId": {
                        "type": "string",
                        "description": "Prepaid identifier on line item",
                        "nullable": true,
                        "example": "701153"
                    },
                    "bookingId": {
                        "type": "string",
                        "description": "Booking identifier on line item",
                        "nullable": true,
                        "example": "801295"
                    },
                    "salesContractId": {
                        "type": "string",
                        "description": "Sales Contract identifier on line item",
                        "nullable": true,
                        "example": "8074321"
                    },
                    "id": {
                        "$ref": "#/components/schemas/SaleLineItemIdentifierResponse"
                    }
                },
                "additionalProperties": false,
                "description": "Sale Line Item"
            },
            "SaleRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "customerId": {
                        "type": "string",
                        "nullable": true,
                        "example": "ABCD1234"
                    },
                    "enteredDateStart": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "enteredDateEnd": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "saleDateStart": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "saleDateEnd": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "searchId": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "example": 15
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1000
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32",
                        "example": 4
                    }
                },
                "additionalProperties": false,
                "description": "Sales Request"
            },
            "SaleResponse": {
                "required": [
                    "comment",
                    "customerId",
                    "customerName",
                    "customerShipToId",
                    "customerShipToName",
                    "enteredDate",
                    "fields",
                    "id",
                    "lineItems",
                    "locationId",
                    "locationName",
                    "module",
                    "operatorId",
                    "operatorName",
                    "purchaseOrderNumber",
                    "settlements",
                    "status",
                    "taxAmount",
                    "totalAmount",
                    "transactionType",
                    "transactionTypeName",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sale identifier",
                        "example": "748523"
                    },
                    "module": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Module the sale is from",
                        "example": "Order Entry"
                    },
                    "transactionType": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Transaction Types: None=\"\", Commodities Grain Merchandising=\"CG\", Direct Order=\"DO\", Fertilizer Batch=\"FB\", Gas=\"GS\", OrderEntry=\"OE\"",
                        "example": "OE"
                    },
                    "transactionTypeName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Transaction Types: None, Commodities Grain Merchandising, Direct Order, Fertilizer Batch, Gas, Order Entry",
                        "example": "Order Entry"
                    },
                    "type": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Types: Sale, Return, Billing Adjustment",
                        "example": "Sale"
                    },
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's identifier",
                        "example": "188280"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's name",
                        "example": "David Webb"
                    },
                    "operatorId": {
                        "type": "integer",
                        "description": "Operator's identifier",
                        "format": "int32",
                        "example": 1001
                    },
                    "customerShipToId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's ship to identifier",
                        "example": "00"
                    },
                    "customerShipToName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Customer's name",
                        "example": "David Webb"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location's identifier",
                        "example": "1"
                    },
                    "locationName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location's name",
                        "example": "Nashville"
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Statuses: Open, Closed, Cancelled",
                        "example": "Closed"
                    },
                    "operatorName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Operator's name",
                        "example": "Wren Wilson"
                    },
                    "enteredDate": {
                        "type": "string",
                        "description": "The sale's entered date",
                        "format": "date-time",
                        "example": "2014-11-14T12:00:00.0000000+00:00"
                    },
                    "soldDate": {
                        "type": "string",
                        "description": "The sale's sold date",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2014-11-15T12:00:00.0000000+00:00"
                    },
                    "purchaseOrderNumber": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Purchase Order Number",
                        "example": "97"
                    },
                    "comment": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sale's comment",
                        "example": "Leave at front door."
                    },
                    "taxAmount": {
                        "type": "number",
                        "description": "The sale's tax amount",
                        "format": "double",
                        "example": 15
                    },
                    "totalAmount": {
                        "type": "number",
                        "description": "The sale's total amount",
                        "format": "double",
                        "example": 165
                    },
                    "settlements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaleSettlementResponse"
                        },
                        "description": "The sale's list of settlements"
                    },
                    "lineItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaleLineItemResponse"
                        },
                        "description": "The sale's line items"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaleFieldResponse"
                        },
                        "description": "The sale's fields"
                    }
                },
                "additionalProperties": false,
                "description": "Sale"
            },
            "SaleSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "customerId": {
                        "type": "string",
                        "nullable": true,
                        "example": "ABCD1234"
                    },
                    "enteredDateStart": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "enteredDateEnd": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "saleDateStart": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    },
                    "saleDateEnd": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-01-01T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Sales Search Request"
            },
            "SaleSettlementResponse": {
                "required": [
                    "amount",
                    "reference",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Types: Cash, Check, Prepaid, etc",
                        "example": "Check"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Settlement reference, blank if none",
                        "example": "CK#1034"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Settlement amount",
                        "format": "double",
                        "example": 165
                    }
                },
                "additionalProperties": false,
                "description": "Sale Settlement"
            },
            "SaleVehicleResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id",
                        "nullable": true,
                        "example": "1245"
                    },
                    "acres": {
                        "type": "number",
                        "description": "Acres",
                        "format": "double",
                        "example": 123.56
                    }
                },
                "additionalProperties": false,
                "description": "Sale Vehicle Response"
            },
            "SalesContractResponse": {
                "required": [
                    "amountDown",
                    "amountDownType",
                    "customerId",
                    "customerName",
                    "id",
                    "itemDescription",
                    "itemId",
                    "locationId",
                    "locationName",
                    "movedToArAmount",
                    "netAvailableAmount",
                    "netAvailableQuantity",
                    "operatorId",
                    "operatorName",
                    "pendingOrdersQuantity",
                    "priceType",
                    "quantity",
                    "settledAmount",
                    "settlements",
                    "status",
                    "tanks",
                    "unitOfMeasure",
                    "usageAmount",
                    "usageQuantity"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract identifier",
                        "example": "10000002"
                    },
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract customer identifier",
                        "example": "188280"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract customer name",
                        "example": "David Webb"
                    },
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract item identifier",
                        "example": "3"
                    },
                    "itemDescription": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract item description",
                        "example": "Corn"
                    },
                    "unitOfMeasure": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract item's unit of measure",
                        "example": "Bushel"
                    },
                    "operatorName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract operator name",
                        "example": "John Smith"
                    },
                    "operatorId": {
                        "type": "integer",
                        "description": "Sales Contract operator identifier",
                        "format": "int32",
                        "example": 1001
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract location identifier",
                        "example": "1"
                    },
                    "locationName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract location name",
                        "example": "Nashville"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Quantity allocated to sales contract",
                        "format": "double",
                        "example": 1234.5677
                    },
                    "priceType": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract price types: Index, Fixed, or Capped",
                        "example": "Index"
                    },
                    "price": {
                        "type": "number",
                        "description": "Sales Contract price",
                        "format": "double",
                        "nullable": true,
                        "example": 1234.56
                    },
                    "amountDown": {
                        "type": "number",
                        "description": "The amount put down on the sales contract",
                        "format": "double",
                        "example": 1234.56
                    },
                    "amountDownType": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Amount down type: Cents or Percent",
                        "example": "Percent"
                    },
                    "agreementDate": {
                        "type": "string",
                        "description": "The date the sales contract was agreed upon",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-04-13T05:12:00.0000000+00:00"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The date the sales contract can begin being applied",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-04-13T05:12:00.0000000+00:00"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The date the sales contract ends and can no longer be applied",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-04-13T05:12:00.0000000+00:00"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Custom comment for the sales contract",
                        "nullable": true,
                        "example": "This is a comment"
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Sales Contract status: E=Entered, A=Approved, C=Closed, Z=Cancelled",
                        "example": "Open"
                    },
                    "settledAmount": {
                        "type": "number",
                        "description": "The amount settled to the sales contract",
                        "format": "double",
                        "example": 1234.56
                    },
                    "usageAmount": {
                        "type": "number",
                        "description": "The amount used on the sales contract",
                        "format": "double",
                        "example": 1234.56
                    },
                    "movedToArAmount": {
                        "type": "number",
                        "description": "The amount moved to the customer's AR account from the sales contract",
                        "format": "double",
                        "example": 1234.56
                    },
                    "netAvailableAmount": {
                        "type": "number",
                        "description": "The net available amount remaining on the sales contract",
                        "format": "double",
                        "readOnly": true,
                        "example": 1234.56
                    },
                    "pendingOrdersQuantity": {
                        "type": "number",
                        "description": "The quantity committed to pending orders",
                        "format": "double",
                        "example": 1234.5677
                    },
                    "usageQuantity": {
                        "type": "number",
                        "description": "The quantity used on the sales contract",
                        "format": "double",
                        "example": 1234.5677
                    },
                    "netAvailableQuantity": {
                        "type": "number",
                        "description": "The net available quantity remaining on the sales contract",
                        "format": "double",
                        "readOnly": true,
                        "example": 1234.5677
                    },
                    "tanks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SalesContractTankResponse"
                        },
                        "description": "An array of sales contract tanks"
                    },
                    "settlements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SalesContractSettlementResponse"
                        },
                        "description": "An array of sales contract settlements"
                    }
                },
                "additionalProperties": false,
                "description": "Sales contract"
            },
            "SalesContractSettlementResponse": {
                "required": [
                    "amount",
                    "operatorName",
                    "reference",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "description": "The settlement date",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-04-13T05:12:00.0000000+00:00"
                    },
                    "operatorName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The operator name for the settlement",
                        "example": "John Smith"
                    },
                    "type": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The tender type used on the settlement",
                        "example": "Check"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The settlement reference number if applicable (i.e. check number)",
                        "example": "1440"
                    },
                    "amount": {
                        "type": "number",
                        "description": "The settlement amount",
                        "format": "double",
                        "example": 1234.56
                    }
                },
                "additionalProperties": false,
                "description": "Sales contract settlement"
            },
            "SalesContractTankResponse": {
                "required": [
                    "capacity",
                    "placement",
                    "productType",
                    "serialNumber",
                    "tankId",
                    "tankName"
                ],
                "type": "object",
                "properties": {
                    "tankId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Tank identifier",
                        "example": "100002"
                    },
                    "tankName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Tank name",
                        "example": "Webb Barn 1"
                    },
                    "productType": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Tank product type",
                        "example": "Liquid"
                    },
                    "capacity": {
                        "type": "number",
                        "description": "Tank's capacity",
                        "format": "double",
                        "example": 1440
                    },
                    "placement": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Tank's placement",
                        "example": "Above Ground"
                    },
                    "serialNumber": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Tank's serial number",
                        "example": "15MM4587TKR"
                    }
                },
                "additionalProperties": false,
                "description": "Sales Contract Tank"
            },
            "ScaleTicketAdjustmentResponse": {
                "required": [
                    "adjustmentName",
                    "calculationType",
                    "extendedAmount",
                    "rate",
                    "sequence"
                ],
                "type": "object",
                "properties": {
                    "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "adjustmentName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Inspection Fee"
                    },
                    "rate": {
                        "type": "number",
                        "format": "double",
                        "example": -5
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-10-01T12:00:00.0000000+00:00"
                    },
                    "extendedAmount": {
                        "type": "number",
                        "format": "double",
                        "example": -5
                    },
                    "calculationType": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Flat Dollar Amount"
                    },
                    "assessDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Scale Ticket Adjustment"
            },
            "ScaleTicketApplicationResponse": {
                "required": [
                    "applicationReference",
                    "applicationType",
                    "netDryQuantity",
                    "netWetQuantity",
                    "percentage",
                    "sequence"
                ],
                "type": "object",
                "properties": {
                    "sequence": {
                        "minLength": 1,
                        "type": "string",
                        "example": "0"
                    },
                    "applicationReference": {
                        "minLength": 1,
                        "type": "string",
                        "example": "102066-P00"
                    },
                    "applicationType": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Purchase Contract"
                    },
                    "netWetQuantity": {
                        "type": "number",
                        "description": "Gross Quantity",
                        "format": "double",
                        "example": 500
                    },
                    "netDryQuantity": {
                        "type": "number",
                        "description": "Net Quantity",
                        "format": "double",
                        "example": 500
                    },
                    "percentage": {
                        "type": "number",
                        "format": "double",
                        "example": 50
                    },
                    "adjustments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScaleTicketAdjustmentResponse"
                        },
                        "description": "Adjustments related to the Ticket",
                        "nullable": true
                    },
                    "discounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScaleTicketDiscountResponse"
                        },
                        "description": "Discounts related to the Ticket",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Application"
            },
            "ScaleTicketDiscountResponse": {
                "required": [
                    "calculationType",
                    "extendedAmount",
                    "extendedQuantity",
                    "factor",
                    "factorName",
                    "rate",
                    "reading",
                    "sequence"
                ],
                "type": "object",
                "properties": {
                    "factor": {
                        "minLength": 1,
                        "type": "string",
                        "example": "TW"
                    },
                    "factorName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Test Weight"
                    },
                    "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "example": 2
                    },
                    "reading": {
                        "type": "number",
                        "format": "double",
                        "example": 54
                    },
                    "rate": {
                        "type": "number",
                        "format": "double",
                        "example": -0.3
                    },
                    "calculationType": {
                        "minLength": 1,
                        "type": "string",
                        "example": "$ / Net Quantity"
                    },
                    "extendedAmount": {
                        "type": "number",
                        "format": "double",
                        "example": -150
                    },
                    "extendedQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 0
                    }
                },
                "additionalProperties": false,
                "description": "Adjustment"
            },
            "ScaleTicketGradeResponse": {
                "required": [
                    "gradeFactorCode",
                    "gradeFactorValue"
                ],
                "type": "object",
                "properties": {
                    "gradeFactorCode": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Damage"
                    },
                    "gradeFactorValue": {
                        "type": "number",
                        "format": "double",
                        "example": 2
                    }
                },
                "additionalProperties": false,
                "description": "Scale Ticket Grade"
            },
            "ScaleTicketResponse": {
                "required": [
                    "basis",
                    "cash",
                    "commodityDescription",
                    "commodityId",
                    "customerId",
                    "customerName",
                    "customerShipTo",
                    "discountAmount",
                    "discountQuantity",
                    "freightRate",
                    "futures",
                    "grossWeight",
                    "grossWeightWeighMaster",
                    "locationId",
                    "locationName",
                    "netWeight",
                    "netWetQuantity",
                    "quantityNet",
                    "quantityUnitOfMeasure",
                    "scaleTicketId",
                    "scaleTicketType",
                    "scaleTicketUnique",
                    "status",
                    "tareWeight",
                    "tareWeightWeighMaster",
                    "ticketDate",
                    "transportationMode"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "108990"
                    },
                    "customerShipTo": {
                        "minLength": 1,
                        "type": "string",
                        "example": "00"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "George Mason"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    },
                    "locationName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Nashville"
                    },
                    "scaleTicketId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "105178"
                    },
                    "scaleTicketUnique": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Ticket Primary Key",
                        "example": "-99999999979536"
                    },
                    "scaleTicketType": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Inbound"
                    },
                    "ticketDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-12T12:00:00.0000000+00:00"
                    },
                    "commodityId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "3"
                    },
                    "commodityDescription": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Corn"
                    },
                    "grossWeight": {
                        "type": "number",
                        "format": "double",
                        "example": 57000
                    },
                    "tareWeight": {
                        "type": "number",
                        "format": "double",
                        "example": 1000
                    },
                    "netWeight": {
                        "type": "number",
                        "format": "double",
                        "example": 56000
                    },
                    "referenceNumber": {
                        "type": "string",
                        "nullable": true,
                        "example": "1233"
                    },
                    "transportationMode": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Truck"
                    },
                    "shipperId": {
                        "type": "string",
                        "description": "Freight Vendor",
                        "nullable": true,
                        "example": "3768"
                    },
                    "shipperName": {
                        "type": "string",
                        "description": "Freight Vendor Name",
                        "nullable": true,
                        "example": "Peter Zoe"
                    },
                    "freightRate": {
                        "type": "number",
                        "format": "double",
                        "example": 0
                    },
                    "vehicleReference": {
                        "type": "string",
                        "nullable": true,
                        "example": "LMN786"
                    },
                    "tareWeightWeighed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-10-12T02:45:11.0000000+00:00"
                    },
                    "tareWeightWeighMaster": {
                        "minLength": 1,
                        "type": "string",
                        "example": "John Smith"
                    },
                    "grossWeightWeighed": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-10-12T02:45:11.0000000+00:00"
                    },
                    "grossWeightWeighMaster": {
                        "minLength": 1,
                        "type": "string",
                        "example": "John Smith"
                    },
                    "netWetQuantity": {
                        "type": "number",
                        "description": "Gross Quantity",
                        "format": "double",
                        "example": 0
                    },
                    "discountQuantity": {
                        "type": "number",
                        "description": "Quantity Discounts",
                        "format": "double",
                        "example": 0
                    },
                    "quantityNet": {
                        "type": "number",
                        "description": "Net Quantity",
                        "format": "double",
                        "example": 0
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "double",
                        "example": 0
                    },
                    "grades": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScaleTicketGradeResponse"
                        },
                        "description": "Grades related to the Ticket",
                        "nullable": true
                    },
                    "quantityUnitOfMeasure": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Bushel"
                    },
                    "driverName": {
                        "type": "string",
                        "nullable": true,
                        "example": "Mike"
                    },
                    "license": {
                        "type": "string",
                        "nullable": true,
                        "example": "JHG765"
                    },
                    "truckName": {
                        "type": "string",
                        "nullable": true,
                        "example": "Ford"
                    },
                    "basis": {
                        "type": "number",
                        "format": "double",
                        "example": 0.01011
                    },
                    "cash": {
                        "type": "number",
                        "format": "double",
                        "example": 5.01011
                    },
                    "futures": {
                        "type": "number",
                        "format": "double",
                        "example": 5
                    },
                    "status": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Active"
                    },
                    "splitName": {
                        "type": "string",
                        "nullable": true,
                        "example": "Farmer Brothers - Back 40"
                    },
                    "field": {
                        "type": "string",
                        "nullable": true,
                        "example": "Ima Landlord's 40 acre field"
                    },
                    "farm": {
                        "type": "string",
                        "nullable": true,
                        "example": "22"
                    },
                    "splits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScaleTicketSplitResponse"
                        },
                        "description": "Splits related to the Ticket",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Scale Ticket"
            },
            "ScaleTicketSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC that scale tickets have been changed since",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Scale Ticket Search Request"
            },
            "ScaleTicketSplitResponse": {
                "required": [
                    "applications",
                    "customer",
                    "customerName",
                    "customerShipTo",
                    "netDryQuantity",
                    "netWetQuantity",
                    "percentage"
                ],
                "type": "object",
                "properties": {
                    "customer": {
                        "minLength": 1,
                        "type": "string",
                        "example": "107990"
                    },
                    "customerShipTo": {
                        "minLength": 1,
                        "type": "string",
                        "example": "00"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Peter Jones"
                    },
                    "netWetQuantity": {
                        "type": "number",
                        "description": "Gross Quantity",
                        "format": "double",
                        "example": 0
                    },
                    "netDryQuantity": {
                        "type": "number",
                        "description": "Net Quantity",
                        "format": "double",
                        "example": 0
                    },
                    "percentage": {
                        "type": "number",
                        "format": "double",
                        "example": 0
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScaleTicketApplicationResponse"
                        },
                        "description": "Applications related to the Split"
                    }
                },
                "additionalProperties": false,
                "description": "Split"
            },
            "SearchResponse": {
                "type": "object",
                "properties": {
                    "searchId": {
                        "type": "integer",
                        "description": "Search ID",
                        "format": "int64"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "Expiration Date",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Search Response"
            },
            "SettlementAdjustmentResponse": {
                "required": [
                    "amount",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Adjustment Fee"
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "example": 1234.56
                    }
                },
                "additionalProperties": false,
                "description": "Settlement Adjustment"
            },
            "SettlementPaymentResponse": {
                "required": [
                    "amount",
                    "date",
                    "quantity",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Ck# AR 1941769"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "1234.5678"
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "example": 1234.56
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "example": 1234.5677
                    }
                },
                "additionalProperties": false,
                "description": "Settlement Payment"
            },
            "SettlementResponse": {
                "required": [
                    "commodityDescription",
                    "commodityId",
                    "customerId",
                    "customerName",
                    "dateSettled",
                    "payments",
                    "settledAmount",
                    "settledQuantity",
                    "settlementId",
                    "settlementType",
                    "splits",
                    "ticketApplications",
                    "unitOfMeasure"
                ],
                "type": "object",
                "properties": {
                    "settlementId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "CG100100"
                    },
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "188280"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "David Webb"
                    },
                    "settlementType": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Purchase Settlement"
                    },
                    "commodityId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "3"
                    },
                    "commodityDescription": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Corn"
                    },
                    "dateSettled": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-13T05:12:00.0000000+00:00"
                    },
                    "settledQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 1234.5677
                    },
                    "unitOfMeasure": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Bushel"
                    },
                    "settledAmount": {
                        "type": "number",
                        "format": "double",
                        "example": 1234.56
                    },
                    "splits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettlementSplitResponse"
                        },
                        "description": "An array of settlement splits"
                    },
                    "ticketApplications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettlementTicketApplicationResponse"
                        },
                        "description": "An array of applications settled"
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettlementPaymentResponse"
                        },
                        "description": "An array of payments"
                    }
                },
                "additionalProperties": false,
                "description": "Settlement"
            },
            "SettlementSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "settlementType": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "example": 1
                    }
                },
                "additionalProperties": false,
                "description": "Settlement Search Request"
            },
            "SettlementSplitResponse": {
                "required": [
                    "adjustments",
                    "customerId",
                    "customerName",
                    "netAmount",
                    "settledAmount",
                    "splitPercentage"
                ],
                "type": "object",
                "properties": {
                    "customerId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "188280"
                    },
                    "customerName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "David Webb"
                    },
                    "splitPercentage": {
                        "type": "number",
                        "format": "double",
                        "example": 100
                    },
                    "settledAmount": {
                        "type": "number",
                        "format": "double",
                        "example": 1234.56
                    },
                    "netAmount": {
                        "type": "number",
                        "format": "double",
                        "example": 1234.56
                    },
                    "adjustments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SettlementAdjustmentResponse"
                        },
                        "description": "An array of adjustments related to the split"
                    }
                },
                "additionalProperties": false,
                "description": "Settlement Split"
            },
            "SettlementTicketApplicationResponse": {
                "required": [
                    "settledAmount",
                    "settledQuantity",
                    "site",
                    "siteName",
                    "ticketNumber"
                ],
                "type": "object",
                "properties": {
                    "site": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    },
                    "siteName": {
                        "minLength": 1,
                        "type": "string",
                        "example": "Nashville"
                    },
                    "ticketNumber": {
                        "minLength": 1,
                        "type": "string",
                        "example": "100000"
                    },
                    "settledAmount": {
                        "type": "number",
                        "format": "double",
                        "example": 1234.56
                    },
                    "settledQuantity": {
                        "type": "number",
                        "format": "double",
                        "example": 1234.5677
                    }
                },
                "additionalProperties": false,
                "description": "Settlement Ticket Application"
            },
            "SiteResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Site identifier",
                        "nullable": true,
                        "example": "0112"
                    },
                    "onHandQuantity": {
                        "type": "number",
                        "description": "The item's on hand quantity for this site",
                        "format": "double",
                        "example": 23747.19
                    },
                    "priceBreaks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceBreakResponse"
                        },
                        "nullable": true
                    },
                    "weightedAverageCost": {
                        "type": "number",
                        "description": "The item's weighted average cost for this site",
                        "format": "double",
                        "example": 1.23
                    },
                    "saleFlag": {
                        "type": "boolean",
                        "description": "Item sellable at site: true/false",
                        "example": true
                    },
                    "allowOnPurchaseOrder": {
                        "type": "boolean",
                        "description": "Allow POs to be placed for this item and site, true/false Only affects POs, not transfers",
                        "example": true
                    },
                    "liquidDensity": {
                        "type": "number",
                        "description": "Item density pounds per gallon - Liquid ingredient",
                        "format": "double",
                        "example": 2
                    },
                    "dryDensity": {
                        "type": "integer",
                        "description": "Item density pounds per cubic foot - Dry ingredient",
                        "format": "int32",
                        "example": 15
                    },
                    "minimumPrice": {
                        "type": "number",
                        "description": "The minimum selling unit price for this item when the user edits the price on an order line. The minimum may not be below -1000.00 dollars",
                        "format": "double",
                        "example": 190
                    },
                    "minimumExtendedPrice": {
                        "type": "number",
                        "description": "Minimum extended price",
                        "format": "double",
                        "example": 190
                    },
                    "oePriceEdit": {
                        "type": "string",
                        "description": "Editability of selling price: Always/Optional/Not Allowed",
                        "nullable": true,
                        "example": "Optional"
                    },
                    "suggestedRetailPrice": {
                        "type": "number",
                        "description": "The suggested retail selling price for this item",
                        "format": "double",
                        "example": 13
                    },
                    "arDiscount": {
                        "$ref": "#/components/schemas/ARDiscountResponse"
                    },
                    "tierPricing": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TierPricingResponse"
                        },
                        "description": "List of Tier Prices for item",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "SiteTransferProductLotResponse": {
                "type": "object",
                "properties": {
                    "lotId": {
                        "type": "string",
                        "nullable": true,
                        "example": "1234"
                    },
                    "lotDescription": {
                        "type": "string",
                        "nullable": true,
                        "example": "lot123"
                    },
                    "itemId": {
                        "type": "string",
                        "nullable": true,
                        "example": "80511"
                    },
                    "itemDescription": {
                        "type": "string",
                        "nullable": true,
                        "example": "Ky Fescue"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "example": 25.2
                    },
                    "testedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2024-01-01T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a lot for site transfers."
            },
            "SiteTransferProductResponse": {
                "type": "object",
                "properties": {
                    "productSequence": {
                        "type": "integer",
                        "description": "The product sequence indicates the order of the product in a sequence.",
                        "format": "int32",
                        "example": 1
                    },
                    "itemId": {
                        "type": "string",
                        "description": "The item ID uniquely identifies the product.",
                        "nullable": true,
                        "example": "80511"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description provides details about the product.",
                        "nullable": true,
                        "example": "Ky Fescue"
                    },
                    "quantity": {
                        "type": "number",
                        "description": "The quantity represents the number of units of the product.",
                        "format": "double",
                        "example": 25
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "description": "The unit of measure specifies how the quantity of the product is measured.",
                        "nullable": true,
                        "example": "Bags"
                    },
                    "extendedWeight": {
                        "type": "number",
                        "description": "The extended weight is the total weight of all units of the product.",
                        "format": "double",
                        "example": 50000
                    },
                    "unitCost": {
                        "type": "number",
                        "description": "The unit cost represents the cost of each unit of the product.",
                        "format": "double",
                        "example": 566
                    },
                    "extendedCost": {
                        "type": "number",
                        "description": "The extended cost is the total cost of all units of the product.",
                        "format": "double",
                        "example": 14150
                    },
                    "extendedReceivedCost": {
                        "type": "number",
                        "description": "The extended received cost is the total received cost of all units of the product.",
                        "format": "double",
                        "example": 14150.26
                    },
                    "unitRevenue": {
                        "type": "number",
                        "description": "The unit revenue represents the revenue generated from each unit of the product.",
                        "format": "double",
                        "example": 0
                    },
                    "totalExtended": {
                        "type": "number",
                        "description": "The total extended cost is the total revenue generated from all units of the product.",
                        "format": "double",
                        "example": 14150
                    },
                    "lots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteTransferProductLotResponse"
                        },
                        "description": "The lots associated with the site transfer product",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents a product."
            },
            "SiteTransferResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the transfer.",
                        "nullable": true,
                        "example": "12345678"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the transfer.",
                        "nullable": true,
                        "example": "Active"
                    },
                    "transferSite": {
                        "type": "string",
                        "description": "The site from which the transfer is transferred.",
                        "nullable": true,
                        "example": "1"
                    },
                    "transferSiteName": {
                        "type": "string",
                        "description": "The site name from which the transfer is transferred.",
                        "nullable": true,
                        "example": "Nashville"
                    },
                    "dateNeeded": {
                        "type": "string",
                        "description": "The date when the transfer is needed.",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2024-05-02T12:00:00.0000000+00:00"
                    },
                    "shippedDate": {
                        "type": "string",
                        "description": "The date when the transfer is shipped.",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2024-05-02T12:00:00.0000000+00:00"
                    },
                    "shippedBy": {
                        "type": "string",
                        "description": "The person who shipped the transfer.",
                        "nullable": true,
                        "example": "123"
                    },
                    "shippedCost": {
                        "type": "number",
                        "description": "The cost of shipping.",
                        "format": "double",
                        "example": 1.59
                    },
                    "shippedRevenue": {
                        "type": "number",
                        "description": "The revenue generated from shipping.",
                        "format": "double",
                        "example": 1.52
                    },
                    "receivingSite": {
                        "type": "string",
                        "description": "The site where the transfer is received.",
                        "nullable": true,
                        "example": "1"
                    },
                    "receivingSiteName": {
                        "type": "string",
                        "description": "The site name where the transfer is received.",
                        "nullable": true,
                        "example": "Nashville"
                    },
                    "receivingContact": {
                        "type": "string",
                        "description": "The contact person at the receiving site.",
                        "nullable": true,
                        "example": "Bob Tester"
                    },
                    "receivedDate": {
                        "type": "string",
                        "description": "The date when the transfer is received.",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2024-05-02T12:00:00.0000000+00:00"
                    },
                    "receivedBy": {
                        "type": "string",
                        "description": "The person who received the transfer.",
                        "nullable": true,
                        "example": "Bob Tester"
                    },
                    "receivedCost": {
                        "type": "number",
                        "description": "The cost associated with receiving the transfer.",
                        "format": "double",
                        "example": 1.54
                    },
                    "comment": {
                        "type": "string",
                        "description": "any additional comment related to the transfer.",
                        "nullable": true,
                        "example": "This is a comment about a site transfer"
                    },
                    "freightAllocation": {
                        "type": "string",
                        "description": "The allocation of freight.",
                        "nullable": true,
                        "example": "Weight"
                    },
                    "freightAmount": {
                        "type": "number",
                        "description": "The amount of freight.",
                        "format": "double",
                        "example": 1.3
                    },
                    "otherFee": {
                        "type": "string",
                        "description": "Any other fee associated with the transfer.",
                        "nullable": true,
                        "example": "OtherFeeID"
                    },
                    "otherFeeAmount": {
                        "type": "number",
                        "description": "The amount of the other fee.",
                        "format": "double",
                        "example": 1.3
                    },
                    "totalWeight": {
                        "type": "number",
                        "description": "The total weight of the transfer.",
                        "format": "double",
                        "example": 200
                    },
                    "rowVersion": {
                        "type": "string",
                        "description": "The row version of the transfer.",
                        "nullable": true,
                        "example": "0x000000000014BE08"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteTransferProductResponse"
                        },
                        "description": "the total weight of the transfer.",
                        "nullable": true,
                        "example": "200"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the site transfer"
            },
            "TankResponse": {
                "type": "object",
                "properties": {
                    "tankId": {
                        "type": "string",
                        "description": "Tank ID",
                        "nullable": true,
                        "example": "100005"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status",
                        "nullable": true,
                        "example": "Active"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product",
                        "nullable": true,
                        "example": "Propane"
                    },
                    "productType": {
                        "type": "string",
                        "description": "Product Type",
                        "nullable": true,
                        "example": "Liquid"
                    },
                    "tankType": {
                        "type": "string",
                        "description": "Tank Type",
                        "nullable": true,
                        "example": "ASME"
                    },
                    "serialNumber": {
                        "type": "string",
                        "description": "Serial Number",
                        "nullable": true,
                        "example": "123ABC"
                    },
                    "tankName": {
                        "type": "string",
                        "description": "TankName",
                        "nullable": true,
                        "example": "Main Tank"
                    },
                    "purpose": {
                        "type": "string",
                        "description": "Purpose",
                        "nullable": true,
                        "example": "Customer"
                    },
                    "useType": {
                        "type": "string",
                        "description": "Use Type",
                        "nullable": true,
                        "example": "Residential"
                    },
                    "site": {
                        "type": "string",
                        "description": "Site",
                        "nullable": true,
                        "example": "1"
                    },
                    "capacity": {
                        "type": "number",
                        "description": "Capacity",
                        "format": "double",
                        "nullable": true,
                        "example": 1000
                    },
                    "usableGallons": {
                        "type": "number",
                        "description": "Usable Gallons",
                        "format": "double",
                        "nullable": true,
                        "example": 800
                    },
                    "tier": {
                        "type": "string",
                        "description": "Tier",
                        "nullable": true,
                        "example": "1"
                    },
                    "currentPercent": {
                        "type": "number",
                        "description": "Current Percent",
                        "format": "double",
                        "nullable": true,
                        "example": 50
                    },
                    "currentPercentDate": {
                        "type": "string",
                        "description": "Current Percent Date",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-11-14T12:00:00.0000000+00:00"
                    },
                    "gallonsRemaining": {
                        "type": "number",
                        "description": "Gallons Remaining",
                        "format": "double",
                        "nullable": true,
                        "example": 500
                    },
                    "ownerCustomerId": {
                        "type": "string",
                        "description": "Owner Customer ID",
                        "nullable": true,
                        "example": "101429600"
                    },
                    "locationCustomerId": {
                        "type": "string",
                        "description": "Location Customer ID",
                        "nullable": true,
                        "example": "18828000"
                    },
                    "locationDescription": {
                        "type": "string",
                        "description": "Location Description",
                        "nullable": true,
                        "example": "Brentwood Farm Supplies"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Latitude",
                        "format": "double",
                        "nullable": true,
                        "example": 36.07012
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Longitude",
                        "format": "double",
                        "nullable": true,
                        "example": -87.37365
                    },
                    "billingCustomerId": {
                        "type": "string",
                        "description": "Billing Customer ID",
                        "nullable": true,
                        "example": "101429600"
                    },
                    "deliveryType": {
                        "type": "string",
                        "description": "Delivery Type",
                        "nullable": true,
                        "example": "Degree Day Base"
                    },
                    "kFactor": {
                        "type": "number",
                        "description": "K Factor",
                        "format": "double",
                        "nullable": true,
                        "example": 1.02
                    },
                    "lastDelivery": {
                        "type": "string",
                        "description": "Last Delivery",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-11-14T12:00:00.0000000+00:00"
                    },
                    "nextDelivery": {
                        "type": "string",
                        "description": "Next Delivery",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-12-14T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Tank Response"
            },
            "TankSearchRequest": {
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "string",
                        "description": "The customer's ID in Merchant",
                        "nullable": true,
                        "example": "188280"
                    },
                    "product": {
                        "type": "string",
                        "description": "The tank's product",
                        "nullable": true,
                        "example": "Propane"
                    },
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC that items have been changed since",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Tank Search Request"
            },
            "TechLicenseResponse": {
                "required": [
                    "license",
                    "result"
                ],
                "type": "object",
                "properties": {
                    "license": {
                        "minLength": 1,
                        "type": "string",
                        "description": "License",
                        "example": "Bayer"
                    },
                    "result": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Result",
                        "example": "passed"
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reason",
                        "nullable": true,
                        "example": "license expired"
                    }
                },
                "additionalProperties": false,
                "description": "Tech License Response"
            },
            "TechLicensesResponse": {
                "required": [
                    "result",
                    "techLicenseResults"
                ],
                "type": "object",
                "properties": {
                    "result": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Result",
                        "example": "passed"
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reason",
                        "nullable": true,
                        "example": "license expired"
                    },
                    "techLicenseResults": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TechLicenseResponse"
                        },
                        "description": "Tech License Results"
                    }
                },
                "additionalProperties": false,
                "description": "Tech Licenses Response"
            },
            "TierPricingResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of tier",
                        "nullable": true,
                        "example": "Tier H"
                    },
                    "price": {
                        "type": "number",
                        "description": "Item price for this tier",
                        "format": "double",
                        "example": 45
                    }
                },
                "additionalProperties": false,
                "description": "Tier Pricing"
            },
            "TransactionSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC that AR transactions have been changed since",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Transaction Search Request"
            },
            "TransactionSearchResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Id",
                        "format": "int64"
                    },
                    "site": {
                        "type": "string",
                        "description": "Site",
                        "nullable": true
                    },
                    "itemId": {
                        "type": "string",
                        "description": "Item Id",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Transaction Type",
                        "nullable": true
                    },
                    "transactionDate": {
                        "type": "string",
                        "description": "Transaction Date",
                        "format": "date-time"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Reference",
                        "nullable": true
                    },
                    "customerId": {
                        "type": "string",
                        "description": "Customer Id",
                        "nullable": true
                    },
                    "vendorId": {
                        "type": "string",
                        "description": "Vendor Id",
                        "nullable": true
                    },
                    "transferFromSite": {
                        "type": "string",
                        "description": "Transfer from Site",
                        "nullable": true
                    },
                    "transferToSite": {
                        "type": "string",
                        "description": "Transfer to Site",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Quantity",
                        "format": "double"
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "Unit Price",
                        "format": "double"
                    },
                    "extendedRevenue": {
                        "type": "number",
                        "description": "Extended Revenue",
                        "format": "double"
                    },
                    "unitCost": {
                        "type": "number",
                        "description": "Unit Cost",
                        "format": "double"
                    },
                    "extendedCost": {
                        "type": "number",
                        "description": "Extended Cost",
                        "format": "double"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comment",
                        "nullable": true
                    },
                    "onHand": {
                        "type": "number",
                        "description": "On Hand",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": ""
            },
            "UpdateCashBidRequest": {
                "required": [
                    "basis",
                    "deliveryBegin",
                    "deliveryEnd",
                    "futuresMonth",
                    "itemId",
                    "locationId"
                ],
                "type": "object",
                "properties": {
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "3"
                    },
                    "locationId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "1"
                    },
                    "futuresMonth": {
                        "minLength": 1,
                        "type": "string",
                        "example": "2312"
                    },
                    "deliveryBegin": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "deliveryEnd": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-31T11:59:59.0000000+00:00"
                    },
                    "basis": {
                        "type": "number",
                        "format": "double",
                        "example": 0.01001
                    }
                },
                "additionalProperties": false,
                "description": "Update Cash Bid"
            },
            "UpdateContractAmendmentRequest": {
                "required": [
                    "confirmedDate"
                ],
                "type": "object",
                "properties": {
                    "confirmedDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-10T06:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Update Contract Amendment"
            },
            "UpdateContractPricingRequest": {
                "required": [
                    "version"
                ],
                "type": "object",
                "properties": {
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 1000
                    },
                    "futures": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.00001
                    },
                    "basis": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "shipmentPeriodStart": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "shipmentPeriodEnd": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-12-01T12:00:00.0000000+00:00"
                    },
                    "version": {
                        "minLength": 1,
                        "type": "string",
                        "example": "0x000000000014BE08"
                    }
                },
                "additionalProperties": false,
                "description": "Update Contract Pricing"
            },
            "UpdateContractRequest": {
                "required": [
                    "version"
                ],
                "type": "object",
                "properties": {
                    "confirmedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "contractDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "shipmentPeriodStart": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-01-01T12:00:00.0000000+00:00"
                    },
                    "shipmentPeriodEnd": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2023-12-01T12:00:00.0000000+00:00"
                    },
                    "comments": {
                        "type": "string",
                        "nullable": true,
                        "example": "Corn Contract"
                    },
                    "otherTerms": {
                        "type": "string",
                        "nullable": true,
                        "example": "30 days net"
                    },
                    "version": {
                        "minLength": 1,
                        "type": "string",
                        "example": "0x000000000014BE08"
                    },
                    "optionPremium": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.01
                    },
                    "rollFee": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.01
                    },
                    "futuresOnlyFee": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.01
                    },
                    "serviceFee": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.01
                    },
                    "structureFee": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "example": 5.01
                    }
                },
                "additionalProperties": false,
                "description": "Update Contract"
            },
            "UpdateGrowerPlanningItemRequest": {
                "required": [
                    "bookedQuantity",
                    "isPricedAtSale",
                    "itemId"
                ],
                "type": "object",
                "properties": {
                    "bookingId": {
                        "type": "string",
                        "description": "Booking ID is the identifier of the booking",
                        "nullable": true,
                        "example": "100100"
                    },
                    "itemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Item ID is the identifier of the item",
                        "example": "2140020"
                    },
                    "vendorId": {
                        "type": "string",
                        "description": "Vendor Id",
                        "nullable": true,
                        "example": "1010"
                    },
                    "operatorId": {
                        "type": "integer",
                        "description": "Operator's identifier",
                        "format": "int32",
                        "nullable": true,
                        "example": 1001
                    },
                    "bookedQuantity": {
                        "type": "number",
                        "description": "Quantity is the amount of the item that is associated with the item",
                        "format": "double",
                        "example": 43124.125
                    },
                    "price": {
                        "type": "number",
                        "description": "The price to use on orders, direct orders, and fertilizer sales. Only valid if the booking is not flagged to be priced at sale",
                        "format": "double",
                        "nullable": true,
                        "example": 198.12
                    },
                    "isPricedAtSale": {
                        "type": "boolean",
                        "description": "Priced-at-sale bookings do not have a price established",
                        "example": true
                    },
                    "version": {
                        "type": "string",
                        "description": "Row version",
                        "nullable": true,
                        "example": "0x000000000014BE08"
                    }
                },
                "additionalProperties": false,
                "description": "Update Grower Planning Item Request"
            },
            "UpdateGrowerPlanningRequest": {
                "required": [
                    "expirationDate",
                    "items",
                    "locations"
                ],
                "type": "object",
                "properties": {
                    "expirationDate": {
                        "type": "string",
                        "description": "When the booking expires",
                        "format": "date-time",
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "items": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UpdateGrowerPlanningItemRequest"
                        },
                        "description": "The items associated with the grower plannings"
                    },
                    "locations": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GrowerPlanningLocationRequest"
                        },
                        "description": "The locations associated with the grower plannings"
                    }
                },
                "additionalProperties": false,
                "description": "Update Grower Planning Request"
            },
            "VehicleResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Vehicle identifier",
                        "nullable": true,
                        "example": "10"
                    },
                    "name": {
                        "type": "string",
                        "description": "Vehicle name",
                        "nullable": true,
                        "example": "Feed truck"
                    },
                    "year": {
                        "type": "string",
                        "description": "Vehicle name",
                        "nullable": true,
                        "example": "2020"
                    },
                    "make": {
                        "type": "string",
                        "description": "Vehicle name",
                        "nullable": true,
                        "example": "Feed"
                    },
                    "model": {
                        "type": "string",
                        "description": "Vehicle Model",
                        "nullable": true,
                        "example": "Ford"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Vehicle: Active, Disposed",
                        "nullable": true,
                        "example": "Active"
                    },
                    "driver": {
                        "type": "string",
                        "description": "Vehicle Driver",
                        "nullable": true,
                        "example": "Jessica"
                    }
                },
                "additionalProperties": false,
                "description": "Vehicle"
            },
            "VehicleSearchRequest": {
                "type": "object",
                "properties": {
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC that prepaids have been changed since",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    },
                    "status": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of statuses to filter the search request",
                        "nullable": true
                    },
                    "location": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of location IDst",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Location Search Request"
            },
            "VendorResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Vendor's identifier",
                        "nullable": true,
                        "example": "101004"
                    },
                    "name": {
                        "type": "string",
                        "description": "Vendor's name",
                        "nullable": true,
                        "example": "Hill Country Fertilizer"
                    },
                    "status": {
                        "type": "string",
                        "description": "Vendor Status",
                        "nullable": true,
                        "example": "Active"
                    }
                },
                "additionalProperties": false,
                "description": "Vendors Response"
            },
            "VendorSearchRequest": {
                "type": "object",
                "properties": {
                    "eFulfillment": {
                        "type": "string",
                        "description": "Vendor eFulfillment options",
                        "nullable": true,
                        "example": "EFulfillmentVendors"
                    },
                    "vendorIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of specific vendor identifiers to filter the search request",
                        "nullable": true
                    },
                    "changedSinceUtc": {
                        "type": "string",
                        "description": "Date/time in UTC that vendors have been changed since",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2020-01-30T12:00:00.0000000+00:00"
                    }
                },
                "additionalProperties": false,
                "description": "Vendors Request"
            },
            "VersionResponse": {
                "type": "object",
                "properties": {
                    "asset": {
                        "type": "string",
                        "description": "The asset name or descriptor.",
                        "nullable": true
                    },
                    "version": {
                        "type": "string",
                        "description": "The installed/used/running version of the asset.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Version"
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}